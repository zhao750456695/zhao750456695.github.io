<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FinGeek</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-21T09:59:06.872Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JieZhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos下python3.6安装</title>
    <link href="http://yoursite.com/2018/06/21/centos%E4%B8%8Bpython3-6%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/06/21/centos下python3-6安装/</id>
    <published>2018-06-21T09:47:12.000Z</published>
    <updated>2018-06-21T09:59:06.872Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装python3.6可能使用的依赖</strong></p><p># yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</p><p><strong>下载python3.6编译安装</strong></p><p>到python官网下载<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org</a></p><p>下载最新版源码，使用make altinstall，如果使用make install，在系统中将会有两个不同版本的Python在/usr/bin/目录中。这将会导致很多问题，而且不好处理。</p><p># wget<a href="https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz</a></p><p># tar -xzvf Python-3.6.0.tgz -C  /tmp</p><p># cd  /tmp/Python-3.6.0/</p><p>把Python3.6安装到 /usr/local 目录</p><p># ./configure –prefix=<strong>/usr/local</strong></p><p># make</p><p># make altinstall</p><p>解决问题：</p><p>zipimport.ZipImportError: can’t decompress data; zlib not available</p><p>yum -y install zlib*</p><p>用pip安装　提示找不到ssl模块</p><p>在./configure过程中，如果没有加上–with-ssl参数时，默认安装的软件涉及到ssl的功能不可用，刚好pip3过程需要ssl模块，而由于没有指定，所以该功能不可用。</p><p>解决办法是重新对python3.6进行编译安装，用一下过程来实现编译安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.6.2</span><br><span class="line">./configure --with-ssl</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>pip3.6 install virtualenv</p><p>进入想创建虚拟环境的目录</p><p>virtualenv ai ai是我们给虚拟环境起的名字</p><p>进入ai</p><p>进入ai的bin</p><p>source ./activate 进入虚拟环境</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;安装python3.6可能使用的依赖&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;# yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>docker基础</title>
    <link href="http://yoursite.com/2018/06/21/docker%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2018/06/21/docker基础/</id>
    <published>2018-06-21T09:07:32.000Z</published>
    <updated>2018-06-21T09:34:16.514Z</updated>
    
    <content type="html"><![CDATA[<p>在centos7下安装docker</p><p><code>yum -y install docker</code></p><p>启动和停止docker服务</p><p><code>systemctl start docker</code></p><p><code>systemctl stop docker</code></p><p>搜索镜像，如搜索与python相关的镜像</p><p><code>docker search python</code></p><p>想把镜像下载下来</p><p><code>docker pull  镜像名字</code></p><p>查看本地的镜像</p><p><code>docker images</code></p><p>创建容器 tid 创建并运行一个容器，但不进入 依据选定的镜像创建</p><p><code>docker run -tid 镜像id（前四位即可）</code></p><p>查看容器</p><p><code>docker ps -a 所有的容器</code></p><p>进入容器</p><p><code>docker attach 容器id</code></p><p>不停止退出</p><p><code>ctrl+p+q</code></p><p>给容器起一个名字 根据某个名称的镜像创建某个名称的容器</p><p><code>docker run -tid --name 容器名 镜像名</code></p><p>启动停止的容器</p><p><code>docker start 容器id</code></p><p>封装镜像</p><p><code>docker commit 容器id 镜像名字:版本号</code></p><p>从容器里面拷文件到宿主机</p><p>在宿主机里面执行以下命令<code>docker cp 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径</code></p><p>从宿主机拷文件到容器里面</p><p>在宿主机里面执行如下命令<code>docker cp 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径</code></p><p>无关随记</p><p>make是gcc的编译器，VPS买来必定要安装</p><p>安装：</p><p><code>yum -y install gcc automake autoconf libtool make</code></p><p>安装g++:</p><p><code>yum install gcc gcc-c++</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在centos7下安装docker&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum -y install docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;启动和停止docker服务&lt;/p&gt;
&lt;p&gt;&lt;code&gt;systemctl start docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;
      
    
    </summary>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>python中常见的内置函数</title>
    <link href="http://yoursite.com/2018/05/24/python%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2018/05/24/python中常见的内置函数/</id>
    <published>2018-05-24T02:28:11.000Z</published>
    <updated>2018-05-24T02:29:03.277Z</updated>
    
    <content type="html"><![CDATA[<h6 id="python-enumerate用法总结"><a href="#python-enumerate用法总结" class="headerlink" title="python enumerate用法总结"></a>python enumerate用法总结</h6><h2 id="enumerate-说明"><a href="#enumerate-说明" class="headerlink" title="enumerate()说明"></a>enumerate()说明</h2><ul><li><p>enumerate()是python的内置函数</p></li><li><p>enumerate在字典上是枚举、列举的意思</p></li><li><p>对于一个可迭代的（iterable）/可遍历的对象（如列表、字符串），enumerate将其组成一个索引序列，利用它可以同时获得索引和值</p></li><li><p>enumerate多用于在for循环中得到计数</p></li><li><p>例如对于一个seq，得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(0, seq[0]), (1, seq[1]), (2, seq[2])1</span><br></pre></td></tr></table></figure></li><li><p>enumerate()返回的是一个enumerate对象，例如： <img src="https://img-blog.csdn.net/20160612190332206" alt="这里写图片描述"></p></li></ul><hr><h2 id="enumerate-使用"><a href="#enumerate-使用" class="headerlink" title="enumerate()使用"></a>enumerate()使用</h2><ul><li>如果对一个列表，既要遍历索引又要遍历元素时，首先可以这样写：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [&quot;这&quot;, &quot;是&quot;, &quot;一个&quot;, &quot;测试&quot;]</span><br><span class="line">for i in range (len(list1)):</span><br><span class="line">    print i ,list1[i]123</span><br></pre></td></tr></table></figure><ul><li>上述方法有些累赘，利用enumerate()会更加直接和优美：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list1 = [&quot;这&quot;, &quot;是&quot;, &quot;一个&quot;, &quot;测试&quot;]</span><br><span class="line">for index, item in enumerate(list1):</span><br><span class="line">    print index, item</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">0 这</span><br><span class="line">1 是</span><br><span class="line">2 一个</span><br><span class="line">3 测试12345678</span><br></pre></td></tr></table></figure><ul><li>enumerate还可以接收第二个参数，用于指定索引起始值，如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list1 = [&quot;这&quot;, &quot;是&quot;, &quot;一个&quot;, &quot;测试&quot;]</span><br><span class="line">for index, item in enumerate(list1, 1):</span><br><span class="line">    print index, item</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line">1 这</span><br><span class="line">2 是</span><br><span class="line">3 一个</span><br><span class="line">4 测试12345678</span><br></pre></td></tr></table></figure><hr><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>如果要统计文件的行数，可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count = len(open(filepath, &apos;r&apos;).readlines())1</span><br></pre></td></tr></table></figure><p>这种方法简单，但是可能比较慢，当<strong>文件比较大</strong>时甚至不能工作。</p><p>可以利用enumerate()：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">count = 0</span><br><span class="line">for index, line in enumerate(open(filepath,&apos;r&apos;))： </span><br><span class="line">    count += 1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;python-enumerate用法总结&quot;&gt;&lt;a href=&quot;#python-enumerate用法总结&quot; class=&quot;headerlink&quot; title=&quot;python enumerate用法总结&quot;&gt;&lt;/a&gt;python enumerate用法总结&lt;/h6&gt;&lt;
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python中的@property、@classmethod和@staticmethod</title>
    <link href="http://yoursite.com/2018/05/23/python%E4%B8%AD%E7%9A%84-classmethod%E5%92%8C-staticmethod/"/>
    <id>http://yoursite.com/2018/05/23/python中的-classmethod和-staticmethod/</id>
    <published>2018-05-23T03:57:09.000Z</published>
    <updated>2018-06-21T09:11:54.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="property"><a href="#property" class="headerlink" title="@property"></a>@property</h1><p>@property使我们可以直接像调用属性一样调用方法，并且能都进行检查，而不必另设置getter、setter方法，像下面都名为score就好了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Student(object):</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def score(self):</span><br><span class="line">        return self._score</span><br><span class="line"></span><br><span class="line">    @score.setter</span><br><span class="line">    def score(self, value):</span><br><span class="line">        if not isinstance(value, int):</span><br><span class="line">            raise ValueError(&apos;score must be an integer!&apos;)</span><br><span class="line">        if value &lt; 0 or value &gt; 100:</span><br><span class="line">            raise ValueError(&apos;score must between 0 ~ 100!&apos;)</span><br><span class="line">        self._score = value</span><br></pre></td></tr></table></figure><p><code>@property</code>的实现比较复杂，我们先考察如何使用。把一个getter方法变成属性，只需要加上<code>@property</code>就可以了，此时，<code>@property</code>本身又创建了另一个装饰器<a href="mailto:`@score.setter" target="_blank" rel="noopener">`@score.setter</a>`，负责把一个setter方法变成属性赋值，于是，我们就拥有一个可控的属性操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; s = Student()</span><br><span class="line">&gt;&gt;&gt; s.score = 60 # OK，实际转化为s.set_score(60)</span><br><span class="line">&gt;&gt;&gt; s.score # OK，实际转化为s.get_score()</span><br><span class="line">60</span><br><span class="line">&gt;&gt;&gt; s.score = 9999</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  ...</span><br><span class="line">ValueError: score must between 0 ~ 100!</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Student(object):</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def birth(self):</span><br><span class="line">        return self._birth</span><br><span class="line"></span><br><span class="line">    @birth.setter</span><br><span class="line">    def birth(self, value):</span><br><span class="line">        self._birth = value</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def age(self):</span><br><span class="line">        return 2015 - self._birth</span><br></pre></td></tr></table></figure><p>上面的<code>birth</code>是可读写属性，而<code>age</code>就是一个<em>只读</em>属性，因为<code>age</code>可以根据<code>birth</code>和当前时间计算出来。</p><p><code>@property</code>广泛应用在类的定义中，可以让调用者写出简短的代码，同时保证对参数进行必要的检查，这样，程序运行时就减少了出错的可能性。</p><h1 id="classmethod和-classmethod"><a href="#classmethod和-classmethod" class="headerlink" title="@classmethod和@classmethod"></a>@classmethod和@classmethod</h1><p>Python其实有3个方法,即静态方法(staticmethod),类方法(classmethod)和实例方法,如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">def foo(x):</span><br><span class="line">    print &quot;executing foo(%s)&quot;%(x)</span><br><span class="line"></span><br><span class="line">class A(object):</span><br><span class="line">    def foo(self,x):</span><br><span class="line">        print &quot;executing foo(%s,%s)&quot;%(self,x)</span><br><span class="line"></span><br><span class="line">    @classmethod</span><br><span class="line">    def class_foo(cls,x):</span><br><span class="line">        print &quot;executing class_foo(%s,%s)&quot;%(cls,x)</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def static_foo(x):</span><br><span class="line">        print &quot;executing static_foo(%s)&quot;%x</span><br><span class="line"></span><br><span class="line">a=A()</span><br></pre></td></tr></table></figure><p>这里先理解下函数参数里面的self和cls.这个self和cls是对类或者实例的绑定,对于一般的函数来说我们可以这么调用<code>foo(x)</code>,这个函数就是最常用的,它的工作跟任何东西(类,实例)无关.对于实例方法,我们知道在类里每次定义方法的时候都需要绑定这个实例,就是<code>foo(self, x)</code>,为什么要这么做呢?因为实例方法的调用离不开实例,我们需要把实例自己传给函数,调用的时候是这样的<code>a.foo(x)</code>(其实是<code>foo(a, x)</code>).类方法一样,只不过它传递的是类而不是实例,<code>A.class_foo(x)</code>.注意这里的self和cls可以替换别的参数,但是python的约定是这俩,还是不要改的好.</p><p>对于静态方法其实和普通的方法一样,不需要对谁进行绑定,唯一的区别是调用的时候需要使用<code>a.static_foo(x)</code>或者<code>A.static_foo(x)</code>来调用.</p><table><thead><tr><th>\</th><th>实例方法</th><th>类方法</th><th>静态方法</th></tr></thead><tbody><tr><td>a = A()</td><td>a.foo(x)</td><td>a.class_foo(x)</td><td>a.static_foo(x)</td></tr><tr><td>A</td><td>不可用</td><td>A.class_foo(x)</td><td>A.static_foo(x)</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">class A(object):</span><br><span class="line">    def foo(self, x):</span><br><span class="line">        print(&quot;executing foo(%s,%s)&quot; % (self, x))</span><br><span class="line">        print(&apos;self:&apos;, self)</span><br><span class="line">    @classmethod</span><br><span class="line">    def class_foo(cls, x):</span><br><span class="line">        print(&quot;executing class_foo(%s,%s)&quot; % (cls, x))</span><br><span class="line">        print(&apos;cls:&apos;, cls)</span><br><span class="line">    @staticmethod</span><br><span class="line">    def static_foo(x):</span><br><span class="line">        print(&quot;executing static_foo(%s)&quot; % x)  </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">A.static_foo(&apos;h&apos;)</span><br><span class="line">executing static_foo(h)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A.class_foo(&apos;h&apos;)</span><br><span class="line">executing class_foo(&lt;class &apos;__main__.A&apos;&gt;,h)</span><br><span class="line">cls: &lt;class &apos;__main__.A&apos;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A.foo(&apos;h&apos;)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">TypeError                                 Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input-46-901d70beca99&gt; in &lt;module&gt;()</span><br><span class="line">----&gt; 1 A.foo(&apos;h&apos;)</span><br><span class="line"></span><br><span class="line">TypeError: foo() missing 1 required positional argument: &apos;x&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line">a.foo(&apos;h&apos;)</span><br><span class="line">executing foo(&lt;__main__.A object at 0x0000000009A5FE48&gt;,h)</span><br><span class="line">self: &lt;__main__.A object at 0x0000000009A5FE48&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@classmethod和@classmethod二者是为类量身定制的，但是实例非要使用，也不会报错。</span><br><span class="line">a.static_foo(&apos;h&apos;)</span><br><span class="line">executing static_foo(h)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a.class_foo(&apos;h&apos;)</span><br><span class="line">executing class_foo(&lt;class &apos;__main__.A&apos;&gt;,h)</span><br><span class="line">cls: &lt;class &apos;__main__.A&apos;&gt;</span><br></pre></td></tr></table></figure><p>应用场景:编写类时需要采用很多不同的方式来创建实例，而我们只有一个<strong>init</strong>函数，此时静态方法就派上用场了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Date:</span><br><span class="line">    def __init__(self,year,month,day):</span><br><span class="line">        self.year=year</span><br><span class="line">        self.month=month</span><br><span class="line">        self.day=day</span><br><span class="line">    @staticmethod</span><br><span class="line">    def now(): #用Date.now()的形式去产生实例,该实例用的是当前时间</span><br><span class="line">        t=time.localtime() #获取结构化的时间格式</span><br><span class="line">        return Date(t.tm_year,t.tm_mon,t.tm_mday) #新建实例并且返回</span><br><span class="line">    @staticmethod</span><br><span class="line">    def tomorrow():#用Date.tomorrow()的形式去产生实例,该实例用的是明天的时间</span><br><span class="line">        t=time.localtime(time.time()+86400)</span><br><span class="line">        return Date(t.tm_year,t.tm_mon,t.tm_mday)</span><br><span class="line"></span><br><span class="line">a=Date(&apos;1987&apos;,11,27) #自己定义时间</span><br><span class="line">b=Date.now() #采用当前时间</span><br><span class="line">c=Date.tomorrow() #采用明天的时间</span><br><span class="line"></span><br><span class="line">print(a.year,a.month,a.day)</span><br><span class="line">print(b.year,b.month,b.day)</span><br><span class="line">print(c.year,c.month,c.day)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;property&quot;&gt;&lt;a href=&quot;#property&quot; class=&quot;headerlink&quot; title=&quot;@property&quot;&gt;&lt;/a&gt;@property&lt;/h1&gt;&lt;p&gt;@property使我们可以直接像调用属性一样调用方法，并且能都进行检查，而不必另设置g
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python中的*args、**kwargs</title>
    <link href="http://yoursite.com/2018/05/20/python%E4%B8%AD%E7%9A%84-args%E3%80%81-kwargs/"/>
    <id>http://yoursite.com/2018/05/20/python中的-args、-kwargs/</id>
    <published>2018-05-20T05:05:38.000Z</published>
    <updated>2018-05-20T05:34:42.891Z</updated>
    
    <content type="html"><![CDATA[<p>在python中，函数参数的工作方式很简单，当编写func(a, b, c, d=some, e=value)时，位置和关键字参数其实分别是被打包成元组和字典的。</p><p>函数其实接受的是一个元组args和一个字典kwargs，并在内部完成如下转换：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = args</span><br><span class="line"></span><br><span class="line">d = kwargs.get(&apos;d&apos;: d_default_value)</span><br><span class="line"></span><br><span class="line">e = kwargs.get(&apos;e&apos;: e_default_value)</span><br></pre></td></tr></table></figure><blockquote><p>dict.get(key, default=None)key – 字典中要查找的键。default – 如果指定键的值不存在时，返回该默认值值。</p><p>Python 字典(Dictionary) get() 函数返回指定键的值，如果值不在字典中返回默认值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;#!/usr/bin/python</span><br><span class="line">&gt;</span><br><span class="line">&gt;dict = &#123;&apos;Name&apos;: &apos;Zara&apos;, &apos;Age&apos;: 27&#125;</span><br><span class="line">&gt;</span><br><span class="line">&gt;print &quot;Value : %s&quot; %  dict.get(&apos;Age&apos;)</span><br><span class="line">&gt;print &quot;Value : %s&quot; %  dict.get(&apos;Sex&apos;, &quot;Never&quot;)</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt;</span><br><span class="line">&gt;Value : 27</span><br><span class="line">&gt;Value : Never</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>这一切都是在幕后悄悄发生的。当然，它还会执行一些错误检查，还允许你将位置参数当成关键字参数那样进行指定(即使它们在函数定义中并不是关键字参数)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">def say_hello_then_call_f(f, *args, **kwargs):</span><br><span class="line"></span><br><span class="line">    print(&apos;args is&apos;, args)</span><br><span class="line"></span><br><span class="line">    print(&apos;kwargs is&apos;, kwargs)</span><br><span class="line"></span><br><span class="line">    print(&apos;Hello!Now I am going to call %s&apos; % f)</span><br><span class="line"></span><br><span class="line">    return f(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">def g(x, y, z=1):</span><br><span class="line"></span><br><span class="line">    return (x+y) / z</span><br><span class="line"></span><br><span class="line">say_hello_then_call_f(g, 1, 2, z=5.)</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">args is (1, 2)</span><br><span class="line">kwargs is &#123;&apos;z&apos;: 5.0&#125;</span><br><span class="line">Hello!Now I am going to call &lt;function g at 0x7f00404e0510&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Out[2]: 0.6</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在python中，函数参数的工作方式很简单，当编写func(a, b, c, d=some, e=value)时，位置和关键字参数其实分别是被打包成元组和字典的。&lt;/p&gt;
&lt;p&gt;函数其实接受的是一个元组args和一个字典kwargs，并在内部完成如下转换：&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>特征工程</title>
    <link href="http://yoursite.com/2018/05/15/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/05/15/特征工程/</id>
    <published>2018-05-15T12:45:08.000Z</published>
    <updated>2018-05-15T12:46:51.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特征工程概览"><a href="#特征工程概览" class="headerlink" title="特征工程概览"></a>特征工程概览</h1><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1frc6fow71cj20kq0k8ae9.jpg" alt=""></p><h1 id="数据探索"><a href="#数据探索" class="headerlink" title="数据探索"></a>数据探索</h1><p>数据探索有助于选择合适的数据预处理和建模方法。</p><ul><li>数据质量分析<ul><li>缺失值</li><li>异常值</li></ul></li><li>特征分布特征分析<ul><li>统计量</li><li>直方图</li></ul></li><li>特征之间的相关性</li></ul><h2 id="缺失值分析"><a href="#缺失值分析" class="headerlink" title="缺失值分析"></a>缺失值分析</h2><p>统计缺失样本数目及缺失率</p><p>缺失值处理</p><ul><li>删除含有（1个或多个）缺失值的样本（行）</li><li>删除缺失值太多的特征（列）</li><li>对缺失值进行插补</li><li>不处理</li></ul><p>缺失值的填补</p><ul><li>scikit-learn的类Imputer提供了一些常见填补方法<ul><li>均值mean（默认方法）</li><li>中位数median</li><li>众数most_frequent</li></ul></li><li>pandas库的fillna函数也可以处理缺失值，而且更加灵活，但是重用性较弱</li></ul><table><thead><tr><th style="text-align:center">插补方法</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">均值/中值/众数插补</td><td style="text-align:center">用该属性的均值/中值/众数进行插补 通常数值型变量用均值/中值、类别型变量用众数插补</td></tr><tr><td style="text-align:center">固定值插补</td><td style="text-align:center">根据背景知识用某个常量进行插补</td></tr><tr><td style="text-align:center">最近邻插补</td><td style="text-align:center">寻找最相似的样本，用该样本的属性值插补 可采用相关系数矩阵来确定哪个变量（X）与缺失值所在变量（Y）最相关。然后把所有样本按X的取值大小进行排序，变量Y的缺失值可以用排在缺失值前的那个样本的数据来代替</td></tr><tr><td style="text-align:center">回归方法</td><td style="text-align:center">选择若干个预测缺失值的自变量X，然后建立回归方程估计缺失值</td></tr><tr><td style="text-align:center">插值法</td><td style="text-align:center">利用该变量已有数据建立合适的插值函数进行插补</td></tr></tbody></table><h2 id="异常值分析"><a href="#异常值分析" class="headerlink" title="异常值分析"></a>异常值分析</h2><p>异常值也被成为离群点，是样本的某属性值明显偏离其余观测值。通常认为这些点是噪声，对模型有坏的影响。</p><ul><li><p>发现异常值</p><ul><li>最大值/最小值分析</li><li>2$\sigma$原则</li><li>箱型图</li><li>直方图（尾巴）</li><li>散点图（散点图上孤立的点）</li><li>分位数（0.5%-99.5%分位数以外）</li></ul></li><li><p>异常值处理：类似缺失值处理</p><ul><li>注意分析异常值产生的原因</li></ul><p>​</p></li></ul><h2 id="特征分布分析"><a href="#特征分布分析" class="headerlink" title="特征分布分析"></a>特征分布分析</h2><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><p>直方图：每个取值在数据集中出现的次数，可视为概率函数(PDF)的估计(seaborn可视化工具比较简单)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import seaborn as sns</span><br><span class="line">sns.ditplot(tranin.price.values, bins=50, kde=True)</span><br></pre></td></tr></table></figure><p>核密度估计</p><ul><li>Kernel Density Estimation，KDE</li><li>直方图的加窗平滑</li></ul><p>在分类任务中，关心不同类别的特征分布</p><ul><li>核密度估计</li><li>order=[‘low’, ‘medium’, ‘high’]</li><li>sns.violinplot(x=’interest_level’, y= ‘price’, data=train, order=order)</li></ul><h3 id="表示集中趋势的统计量"><a href="#表示集中趋势的统计量" class="headerlink" title="表示集中趋势的统计量"></a>表示集中趋势的统计量</h3><ul><li>均值</li><li>中值</li><li>众数</li></ul><h3 id="表示散布程度的统计量"><a href="#表示散布程度的统计量" class="headerlink" title="表示散布程度的统计量"></a>表示散布程度的统计量</h3><ul><li>方差</li><li>四分位数间距</li><li>IQR在箱体图boxplot(seaborn.boxplot())中用到：分布的图形概述<ul><li>长方形为IQR</li><li>中间的线为中值</li><li>两头的虚线：1.51QR</li></ul></li></ul><h3 id="相关性"><a href="#相关性" class="headerlink" title="相关性"></a>相关性</h3><ul><li>希望特征与标签强相关<ul><li>分类直方图可以从某种程度上看出特征与标签的相关性：不同类别的直方图差异大</li></ul></li><li>特征与特征之间强相关的话意味着信息冗余<ul><li>可以两个特征只保留一个</li><li>或采用主成分分析（PCA)等降维</li></ul></li></ul><h1 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h1><p>数据取值范围缩放</p><ul><li>数据标准化（Standardization）</li><li>数据归一化（Scaling）</li><li>数据正规化（Normalization）</li><li>数据二值化</li></ul><p>from sklearn.preprocessing import …</p><table><thead><tr><th style="text-align:center">类</th><th style="text-align:center">功能</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">StandardScaler</td><td style="text-align:center">无量纲化</td><td style="text-align:center">标准化，基于特征矩阵的列，将特征值转换至服从标准正态分布</td></tr><tr><td style="text-align:center">MinMaxScaler</td><td style="text-align:center">无量纲化</td><td style="text-align:center">区间缩放，基于最大最小值，将特征值转换到[0,1]区间上</td></tr><tr><td style="text-align:center">Normalizer</td><td style="text-align:center">归一化</td><td style="text-align:center">基于特征矩阵的行，将样本向量转换为“单位向量”</td></tr><tr><td style="text-align:center">Binarizer</td><td style="text-align:center">二值化</td><td style="text-align:center">基于给定阈值，将定量特征按阈值划分</td></tr><tr><td style="text-align:center">OneHotEncoder</td><td style="text-align:center">哑编码</td><td style="text-align:center">将定性数据编码为定量数据</td></tr><tr><td style="text-align:center">Imputer</td><td style="text-align:center">缺失值处理</td><td style="text-align:center">计算缺失值，缺失值可填充为均值等</td></tr><tr><td style="text-align:center">PolynomialFeatures</td><td style="text-align:center">多项式数据转换</td><td style="text-align:center">多项式数据转换</td></tr><tr><td style="text-align:center">Function Transformer</td><td style="text-align:center">自定义单元格数据转换</td><td style="text-align:center">使用单变元的函数来转换数据</td></tr></tbody></table><h1 id="特征编码"><a href="#特征编码" class="headerlink" title="特征编码"></a>特征编码</h1><ul><li>数值型</li><li>类别型</li><li>时间类</li><li>文本型</li><li>统计型</li></ul><h2 id="数值型特征"><a href="#数值型特征" class="headerlink" title="数值型特征"></a>数值型特征</h2><ul><li><p>有时候数值特征并不能直接适用于线性模型，可以选择使用log(x+1)变换来处理我们的数值特征，其中x表示数值特征</p><ul><li><p>检查数据偏斜度（skewness），并以此衡量数据分布的形状</p></li><li><p>当使用回归方法时，如果目标变量出现偏斜，则有必要对目标变量进行对数变换(log-transform)。通过对数变换，可以改善数据的线性度。</p><p><code>train.SalePrice=np.loglp(train.SalesPrice)</code></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1frc7zd7emoj20fd03twew.jpg" alt=""></p></li></ul></li><li><p>还可以根据需要进行多项式扩展数值特征</p></li></ul><p>模型很多时候是线性模型，可以在特征上做一些工作，让模型包含一些非线性特征</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1frc858vs43j20y60bldhc.jpg" alt=""></p><p>默认值为2，则特征两两组合，先和自己再和其他</p><h2 id="数值型特征离散化"><a href="#数值型特征离散化" class="headerlink" title="数值型特征离散化"></a>数值型特征离散化</h2><ul><li>有时候将数值型属性转换成类别表示更有意义<ul><li>如年龄，根据人生阶段划分往往更有意义</li><li>房屋到街道的距离分为远、中、近</li></ul></li><li>了解领域背景知识，确保特征划分成分区有意义<ul><li>所有落入一个分区的数值都呈现出共同的特征</li><li>在实际应用中，需要仔细考虑分区的粒度，防止过拟合</li></ul></li><li>也可以采用聚类技术实现分组</li></ul><p>注意：如果数据的准确率很重要的话，此时离散化不合适</p><h2 id="类别型特征"><a href="#类别型特征" class="headerlink" title="类别型特征"></a>类别型特征</h2><ul><li>有些模型只能处理数值型数据。如果给定的数据是不同的类型，必须先将数据编程数值型。<ul><li>用0和1来代表样本是否有某种特性</li></ul></li><li>LbabelEncoder：用有序数对不连续的数字或者文本进行编号<ul><li>如用数字表示房屋质量：分别用1、2 、3表示质量差、中、好</li><li>存储量小</li></ul></li><li>如果不希望有序数关系，采用哑编码（OneHotEncoder）：将类别型整数输入从1维—-&gt;K维的稀疏编码<ul><li>统计该特征上有多少类，就设置几维(K)的向量</li><li>输入必须是数值型数据（对字符串输入，先调用LabelEncoder变成数字，再用OneHotEncoder）</li><li>存储要求高，通常要求K&lt;10（低基数）</li></ul></li><li>对高基数类别型特征：通常有成百上千个不同的取值（如邮政编码、街道名称…）<ul><li>可先采用降维/聚类：1维—&gt;K维，K为聚类的类别数</li><li>或采用均值编码：在贝叶斯的架构下，利用标签变量，有监督地确定最适合特定特征的编码方式</li></ul></li></ul><h2 id="均值编码"><a href="#均值编码" class="headerlink" title="均值编码"></a>均值编码</h2><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frc8wl4rsaj20t30ajq45.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1frc8zvjf8sj20s00be75g.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frc90307n8j20t20bi0vw.jpg" alt=""></p><h2 id="日期型特征"><a href="#日期型特征" class="headerlink" title="日期型特征"></a>日期型特征</h2><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frc944nnp8j20s30b3dgj.jpg" alt=""></p><h2 id="文本型特征"><a href="#文本型特征" class="headerlink" title="文本型特征"></a>文本型特征</h2><p>文本型特征无法直接送到学习器，需要先进行特征提取</p><p>scikit-learn采用简单的文本特征提取，更多文本特征提取可采用Natural Language Tookit（NLTK）</p><ul><li>词向量（1-gram模型）：即词袋模型，统计次出现的次数（词频）<ul><li>CountVectorizer</li></ul></li><li>n-gram模型：将词或 扩展为n个词语组成的短语</li></ul><p>TF-IDF特征：</p><ul><li>TF(Term Frequency)：衡量一个term在文档中出现的多频繁</li><li>IDF(Inverse Document Frequency)：衡量一个term有多重要<ul><li>有些词出现的很多，但是并没有什么作用 ‘is’、‘the’…</li><li>将罕见的词重要性调高，常见词重要性调低</li></ul></li><li>TF(t)=(词t在当前文中出现次数)/(当前文档中出现的单词的总次数)</li><li>IDF(t)=ln(总文档数/含t的文档数)</li><li>TF-IDF(t)=TF(t)*IDF(t)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.feature_extraction.text.TfidfTransformer(norm=&apos;l2&apos;, use_idf=True, smooth_idf=True, sublinear_tf=False)</span><br></pre></td></tr></table></figure><p>可用词云可视化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from wordcloud import WordCloud</span><br><span class="line">wordcloud = WordCloud(background_color=&apos;white&apos;, width=600, height=300,</span><br><span class="line">max_font_size=50, max_words=40)</span><br><span class="line">wordcloud.generate(text)</span><br></pre></td></tr></table></figure><h1 id="构造特征"><a href="#构造特征" class="headerlink" title="构造特征"></a>构造特征</h1><p>将特征进行混合或组合以得到新的特征</p><ul><li>根据经验组合特征<ul><li>如经纬度组合到一起，就代表地理上特定的区域</li></ul></li><li>Top K个特征组合</li><li>GBDT得到特征序列，组合这些特征</li></ul><p>组合方式</p><ul><li>串联</li><li>加减乘除：房间单价=房屋价格/房间数</li><li>差分</li><li>统计<ul><li>均值：节假日数据的统计信息、平均一周（月）的人数</li><li>加减平均：超过平均值</li><li>分位数/线：你超过了x%的用户</li><li>次序</li><li>比例</li></ul></li></ul><h1 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h1><p>原因：</p><ul><li>冗余：部分特征之间相关度太高</li><li>噪声</li></ul><p>特征选择vs.降维</p><ul><li>降维(PCA/SVD)：对原始特征进行线性组合，得到低维表示</li><li>特征选择：剔除与预测关系不大的特征子集<ul><li>减少特征数目，防止过拟合，提高模型泛化能力</li><li>有助于更好地理解特征的特性及其与响应之间的关系</li></ul></li></ul><p>如何：</p><ul><li><p>删除方差过小的特征</p><p>方差小意味着变化很小（标准差小），意味着该特征包含信息少，特征区分度很低</p><p><code>class sklearn.feature_selection.VarianceThreshold(threshold=0.0)</code></p><ul><li>删除方差小于threshold的特征</li><li>threshold缺省值为0，保留所有特征</li></ul></li><li><p>过滤型</p><p>根据单变量的统计测试选择分数最佳特征</p><ul><li>sklearn.feature_selection.SelectKBest：选择分数最高的k个特征</li><li>sklearn.feature_selection.SelectPercentile:选择分数最高的百分比特征</li><li>缺点：没有考虑到特征之间的关联作用，可能把有用的关联特征误踢掉</li></ul></li></ul><p>​         分数度量 </p><p>​           相关系数</p><p>​                 相关系数只对线性关系敏感，不太能发现非线性相关                  相关系数只对两个实数型随机变量有定义            互信息／最大信息系数</p><ul><li>互信息</li></ul><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1frcard2gtlj20qg095aao.jpg" alt=""></p><ul><li>最大信息系数</li></ul><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcasn6c3mj20ms0a6wgo.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcaycph7mj20m709lgmd.jpg" alt=""></p><p>sklearn</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcazjto1vj20n30b4aeq.jpg" alt=""></p><ul><li>包裹型</li></ul><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1frcb36zodyj20lu07974t.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcb417b0aj20i40cfjve.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcb4zp60kj20l50d9gq0.jpg" alt=""></p><ul><li><p>嵌入型</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1frcb5w4ifzj20n809m0tj.jpg" alt=""></p><p>​</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1frcb6zvdzxj20og0b3gqh.jpg" alt=""></p><p>​</p><p>​</p><p>​</p><h1 id="如何获取重要特征"><a href="#如何获取重要特征" class="headerlink" title="如何获取重要特征"></a>如何获取重要特征</h1></li><li><p>相关领域的专家知识</p></li><li><p>深度学习自动学习特征</p></li><li><p>试验、经验与发现</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;特征工程概览&quot;&gt;&lt;a href=&quot;#特征工程概览&quot; class=&quot;headerlink&quot; title=&quot;特征工程概览&quot;&gt;&lt;/a&gt;特征工程概览&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://wx2.sinaimg.cn/mw690/c3a5a043ly1frc6f
      
    
    </summary>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>pandas的API</title>
    <link href="http://yoursite.com/2018/05/10/pandas%E7%9A%84API/"/>
    <id>http://yoursite.com/2018/05/10/pandas的API/</id>
    <published>2018-05-10T10:55:10.000Z</published>
    <updated>2018-05-10T10:55:10.985Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>zookeeper</title>
    <link href="http://yoursite.com/2018/05/08/zookeeper/"/>
    <id>http://yoursite.com/2018/05/08/zookeeper/</id>
    <published>2018-05-08T12:06:18.000Z</published>
    <updated>2018-05-16T16:58:22.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="zookeeper部署"><a href="#zookeeper部署" class="headerlink" title="zookeeper部署"></a>zookeeper部署</h1><p>安装到3台虚拟机上</p><p>安装好JDK</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su – hadoop（切换到hadoop用户）</span><br><span class="line">tar -zxvf zookeeper-3.4.5.tar.gz（解压）</span><br></pre></td></tr></table></figure><h2 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv zookeeper-3.4.5 zookeeper #（重命名文件夹zookeeper-3.4.5为zookeeper）</span><br></pre></td></tr></table></figure><h2 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h2><p>root用户下</p><p>在三台虚拟机上都要执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su – root</span><br><span class="line">vi /etc/profile(修改文件)</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>profile里：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export ZOOKEEPER_HOME=/root/app/zookeeper-3.4.11</span><br><span class="line">export PATH=$PATH:$ZOOKEEPER_HOME/bin</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su - hadoop</span><br><span class="line">cd zookeeper/conf</span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line">vi zoo.cfg</span><br></pre></td></tr></table></figure><p> 添加以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/home/hadoop/zookeeper/data</span><br><span class="line"></span><br><span class="line">dataLogDir=/home/hadoop/zookeeper/log</span><br><span class="line"></span><br><span class="line">server.1=slave1:2888:3888 (主机名, 心跳端口、数据端口)</span><br><span class="line"></span><br><span class="line">server.2=slave2:2888:3888</span><br><span class="line"></span><br><span class="line">server.3=slave3:2888:3888</span><br></pre></td></tr></table></figure><p>slave处也可以填ip地址，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.1=192.168.88.131:2888:3888</span><br><span class="line">server.2=192.168.88.141:2888:3888</span><br><span class="line">server.3=192.168.88.139:2888:3888</span><br></pre></td></tr></table></figure><p>创建文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/hadoop/zookeeper/</span><br><span class="line">mkdir -m 755 data</span><br><span class="line">mkdir -m 755 log</span><br></pre></td></tr></table></figure><p>在data文件夹下新建myid文件，myid的文件内容为：</p><p>cd data</p><p>echo 1 &gt; myid</p><h2 id="将集群下发到其他机器上"><a href="#将集群下发到其他机器上" class="headerlink" title="将集群下发到其他机器上"></a>将集群下发到其他机器上</h2><p>scp -r /home/hadoop/zookeeperhadoop@slave2:/home/hadoop/</p><p>scp -r /home/hadoop/zookeeper hadoop@slave3:/home/hadoop/</p><h2 id="修改其他机器的配置文件"><a href="#修改其他机器的配置文件" class="headerlink" title="修改其他机器的配置文件"></a>修改其他机器的配置文件</h2><p>到slave2上：修改myid为：2</p><p>到slave3上：修改myid为：3</p><h2 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h2><p>1、  jps（查看进程）</p><p>2、  zkServer.sh status（查看集群状态，主从信息）</p><h1 id="zookeeper-结构和命令"><a href="#zookeeper-结构和命令" class="headerlink" title="zookeeper 结构和命令"></a>zookeeper 结构和命令</h1><h2 id="zookeeper特性"><a href="#zookeeper特性" class="headerlink" title="zookeeper特性"></a>zookeeper特性</h2><p>1、Zookeeper：一个leader，多个follower组成的集群</p><p>2、全局数据一致：每个server保存一份相同的数据副本，client无论连接到哪个server，数据都是一致的</p><p>3、分布式读写，更新请求转发，由leader实施</p><p>4、更新请求顺序进行，来自同一个client的更新请求按其发送顺序依次执行</p><p>5、数据更新原子性，一次数据更新要么成功，要么失败</p><p>6、实时性，在一定时间范围内，client能读到最新数据</p><h2 id="zookeeper数据结构"><a href="#zookeeper数据结构" class="headerlink" title="zookeeper数据结构"></a>zookeeper数据结构</h2><p>1、层次化的目录结构，命名符合常规文件系统规范(见下图)</p><p>2、每个节点在zookeeper中叫做znode,并且其有一个唯一的路径标识</p><p>3、节点Znode可以包含数据和子节点（但是EPHEMERAL类型的节点不能有子节点，下一页详细讲解）</p><p>4、客户端应用可以在节点上设置监视器（后续详细讲解）</p><h2 id="数据结构的图"><a href="#数据结构的图" class="headerlink" title="数据结构的图"></a>数据结构的图</h2><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fr4vjfih3fj20af06ddgb.jpg" alt=""></p><p>最上面 / 父节点</p><p>每个节点都可以存放数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 0] ls /</span><br><span class="line">[zookeeper, app1, eclipse]</span><br></pre></td></tr></table></figure><p>/ 下面有三个子节点</p><p>再创建一个子节点app2 后面的<code>&quot;this is app2 servers parent&quot;</code>是写入的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 3] create /app2 &quot;this is app2 servers parent&quot; </span><br><span class="line">Created /app2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 5] ls /         </span><br><span class="line">[zookeeper, app2, app1, eclipse]</span><br></pre></td></tr></table></figure><p>于是根下多了app2</p><p>可以继续在app2下创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 6] create /app2/server01 &quot;192.168.33.5,100&quot;</span><br><span class="line">Created /app2/server01</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 10] get /app2</span><br><span class="line">this is app2 servers parent</span><br><span class="line">cZxid = 0x400000004</span><br><span class="line">ctime = Wed May 09 10:28:11 CST 2018</span><br><span class="line">mZxid = 0x400000004</span><br><span class="line">mtime = Wed May 09 10:28:11 CST 2018</span><br><span class="line">pZxid = 0x400000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 27</span><br><span class="line">numChildren = 1</span><br><span class="line"></span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 11] get /app2/server01</span><br><span class="line">192.168.33.5,100</span><br><span class="line">cZxid = 0x400000005</span><br><span class="line">ctime = Wed May 09 10:31:18 CST 2018</span><br><span class="line">mZxid = 0x400000005</span><br><span class="line">mtime = Wed May 09 10:31:18 CST 2018</span><br><span class="line">pZxid = 0x400000005</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 16</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><p>用get查看数据</p><p>数据下面的是事务编号等信息</p><h2 id="节点类型"><a href="#节点类型" class="headerlink" title="节点类型"></a>节点类型</h2><p>1、Znode有两种类型：</p><p>短暂（ephemeral）（断开连接自己删除）</p><p>监控服务器是否掉线时有用，掉线节点会被删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 12] create -e /app-e &quot;hello this e&quot;</span><br><span class="line">Created /app-e</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 13] ls /</span><br><span class="line">[app-e, zookeeper, app2, app1, eclipse]</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 14] quit</span><br><span class="line">Quitting...</span><br><span class="line">2018-05-09 10:49:30,494 [myid:] - INFO  [main:ZooKeeper@687] - Session: 0x20007fd41fe0000 closed</span><br><span class="line">2018-05-09 10:49:30,498 [myid:] - INFO  [main-EventThread:ClientCnxn$EventThread@520] - EventThread shut down for session: 0x20007fd41fe0000</span><br><span class="line">[root@mini3 conf]# zkCli.sh -server 192.168.88.141</span><br><span class="line">Connecting to 192.168.88.141</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 0] ls /</span><br><span class="line">[zookeeper, app2, app1, eclipse]</span><br></pre></td></tr></table></figure><p>创建一个暂时节点，退出重连后app-e消失</p><p>持久（persistent）（断开连接不删除）</p><p>2、Znode有四种形式的目录节点（默认是persistent ）</p><p>PERSISTENT</p><p>PERSISTENT_SEQUENTIAL（持久序列/test0000000019）</p><p>EPHEMERAL</p><p>EPHEMERAL_SEQUENTIAL</p><p>带序号，创建的节点名字后面会自动有序号，不怕名字重复。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 1] create /test 888</span><br><span class="line">Created /test</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 2] create -s /test/aa 999</span><br><span class="line">Created /test/aa0000000000</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 3] create -s /test/bb 999</span><br><span class="line">Created /test/bb0000000001</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 4] create -s /test/aa 999</span><br><span class="line">Created /test/aa0000000002</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 5] create -s /app2/aa 999</span><br><span class="line">Created /app2/aa0000000001</span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 6] create -e -s /app2/aa 999</span><br><span class="line">Created /app2/aa0000000002</span><br></pre></td></tr></table></figure><p>3、创建znode时设置顺序标识，znode名称后会附加一个值，顺序号是一个单调递增的计数器，由父节点维护</p><p>4、在分布式系统中，顺序号可以被用于为所有的事件进行全局排序，这样客户端可以通过顺序号推断事件的顺序</p><h2 id="zookeeper命令行操作"><a href="#zookeeper命令行操作" class="headerlink" title="zookeeper命令行操作"></a>zookeeper命令行操作</h2><p>运行 zkCli.sh –server <ip>进入命令行工具</ip></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkCli.sh -server 192.168.88.141</span><br></pre></td></tr></table></figure><p>没有-server会连接到自己</p><p>可以help命令，查看可以使用的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 1] help</span><br><span class="line">ZooKeeper -server host:port cmd args</span><br><span class="line">        stat path [watch]</span><br><span class="line">        set path data [version]</span><br><span class="line">        ls path [watch]</span><br><span class="line">        delquota [-n|-b] path</span><br><span class="line">        ls2 path [watch]</span><br><span class="line">        setAcl path acl</span><br><span class="line">        setquota -n|-b val path</span><br><span class="line">        history </span><br><span class="line">        redo cmdno</span><br><span class="line">        printwatches on|off</span><br><span class="line">        delete path [version]</span><br><span class="line">        sync path</span><br><span class="line">        listquota path</span><br><span class="line">        rmr path</span><br><span class="line">        get path [watch]</span><br><span class="line">        create [-s] [-e] path data acl</span><br><span class="line">        addauth scheme auth</span><br><span class="line">        quit </span><br><span class="line">        getAcl path</span><br><span class="line">        close </span><br><span class="line">        connect host:port</span><br></pre></td></tr></table></figure><p>1、使用 ls 命令来查看当前 ZooKeeper 中所包含的内容：</p><p>[zk: 202.115.36.251:2181(CONNECTED) 1] ls /</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 0] ls /</span><br><span class="line">[zookeeper, app1, eclipse]</span><br></pre></td></tr></table></figure><p>2、创建一个新的 znode ，使用 create /zk myData 。这个命令创建了一个新的 znode 节点“ zk ”以及与它关联的字符串：</p><p>[zk: 202.115.36.251:2181(CONNECTED) 2] create /zk “myData“</p><p>3、我们运行 get 命令来确认 znode 是否包含我们所创建的字符串：</p><p>[zk: 202.115.36.251:2181(CONNECTED) 3] get /zk</p><p>#监听这个节点的变化,当另外一个客户端改变/zk时,它会打出下面的</p><p>#WATCHER::</p><p>#WatchedEvent state:SyncConnectedtype:NodeDataChanged path:/zk</p><p>[zk: localhost:2181(CONNECTED) 4] get /zkwatch</p><p>4、下面我们通过 set 命令来对 zk 所关联的字符串进行设置：</p><p>set 进行更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 1] get /app1</span><br><span class="line">this is app1 service parent</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x200000004</span><br><span class="line">mtime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 27</span><br><span class="line">numChildren = 1</span><br><span class="line"></span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 2] set /app1 uuuuu</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000003</span><br><span class="line">mtime = Wed May 09 13:14:07 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br><span class="line"></span><br><span class="line">[zk: 192.168.88.141(CONNECTED) 3] get /app1</span><br><span class="line">uuuuu</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000003</span><br><span class="line">mtime = Wed May 09 13:14:07 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><p>在另一台虚拟机mini3里连接客户端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mini3 ~]# zkCli.sh</span><br><span class="line">Connecting to localhost:2181</span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] ls /</span><br><span class="line">[zookeeper, app2, test, app1, eclipse]</span><br></pre></td></tr></table></figure><p>在虚拟机mini1中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 4] set /app1 yyyyy</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000005</span><br><span class="line">mtime = Wed May 09 13:20:19 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 2</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><p>于是mini3中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 1] get /app1</span><br><span class="line">yyyyy</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000005</span><br><span class="line">mtime = Wed May 09 13:20:19 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 2</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><p>瞬间就能取到变化了的数据，毫秒级别，但是机器非常多时就会有些延迟了。</p><p>5、get 监听功能</p><p>在mini3里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 2] get /app1 watch</span><br><span class="line">yyyyy</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000005</span><br><span class="line">mtime = Wed May 09 13:20:19 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 2</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><p>在mini1里修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 5] set /app1 hhhhh</span><br><span class="line">cZxid = 0x200000004</span><br><span class="line">ctime = Mon Jan 29 15:44:58 CST 2018</span><br><span class="line">mZxid = 0x500000006</span><br><span class="line">mtime = Wed May 09 13:25:56 CST 2018</span><br><span class="line">pZxid = 0x200000005</span><br><span class="line">cversion = 1</span><br><span class="line">dataVersion = 3</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 5</span><br><span class="line">numChildren = 1</span><br></pre></td></tr></table></figure><p>于是因为mini3中开启了监听功能，mini3中会自动出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 3] </span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:NodeDataChanged path:/app1</span><br></pre></td></tr></table></figure><p>但是这个监听只生效一次</p><p>并且添加节点不会监听，因为get的监听只会监听数据变化</p><p>想监听节点变化 用ls watch</p><p>mini3里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 3] ls /app1 watch</span><br><span class="line">[server01]</span><br></pre></td></tr></table></figure><p>mini1里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[zk: 192.168.88.141(CONNECTED) 6] create /app1/hello 123</span><br><span class="line">Created /app1/hello</span><br></pre></td></tr></table></figure><p>mini3里会出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 4] </span><br><span class="line">WATCHER::</span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected type:NodeChildrenChanged path:/app1</span><br></pre></td></tr></table></figure><p>6、下面我们将刚才创建的 znode 删除：</p><p>[zk: 202.115.36.251:2181(CONNECTED) 5] delete /zk</p><p>7、删除节点：rmr</p><p>[zk: 202.115.36.251:2181(CONNECTED) 5] rmr /zk</p><h1 id="zookeeper启动脚本"><a href="#zookeeper启动脚本" class="headerlink" title="zookeeper启动脚本"></a>zookeeper启动脚本</h1><p>export 一个 变量到底是在环境里还是哪里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# a=1</span><br><span class="line">[root@mini2 ~]# vi s1.sh</span><br><span class="line">[root@mini2 ~]# echo $a</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">[root@mini2 ~]# chmod 777 s1.sh</span><br><span class="line">[root@mini2 ~]# ./s1.sh         </span><br><span class="line"></span><br><span class="line">[root@mini2 ~]#</span><br></pre></td></tr></table></figure><p>脚本里是</p><p>#!/bin/bash</p><p>echo $a</p><p>打印不出</p><p>因为脚本s1.sh在运行的时候是在另外一个bash子进程中</p><p>利用pstree命令</p><p>米有安装先安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# yum install psmisc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# pstree</span><br><span class="line">systemd─┬─NetworkManager─┬─dhclient</span><br><span class="line">        │                └─2*[&#123;NetworkManager&#125;]</span><br><span class="line">        ├─VGAuthService</span><br><span class="line">        ├─abrt-watch-log</span><br><span class="line">        ├─abrtd</span><br><span class="line">        ├─auditd───&#123;auditd&#125;</span><br><span class="line">        ├─chronyd</span><br><span class="line">        ├─crond</span><br><span class="line">        ├─dbus-daemon───&#123;dbus-daemon&#125;</span><br><span class="line">        ├─java───22*[&#123;java&#125;]</span><br><span class="line">        ├─login───bash</span><br><span class="line">        ├─master─┬─pickup</span><br><span class="line">        │        └─qmgr</span><br><span class="line">        ├─polkitd───5*[&#123;polkitd&#125;]</span><br><span class="line">        ├─rsyslogd───2*[&#123;rsyslogd&#125;]</span><br><span class="line">        ├─sshd───sshd───bash───pstree</span><br><span class="line">        ├─systemd-journal</span><br><span class="line">        ├─systemd-logind</span><br><span class="line">        ├─systemd-udevd</span><br><span class="line">        ├─tuned───4*[&#123;tuned&#125;]</span><br><span class="line">        └─vmtoolsd───&#123;vmtoolsd&#125;</span><br></pre></td></tr></table></figure><p>脚本不运行在当前bash中</p><p>export后可以打印</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# unset a</span><br><span class="line">[root@mini2 ~]# export a=1</span><br><span class="line">[root@mini2 ~]# ./s1.sh           </span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改脚本s1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">b=2</span><br><span class="line">echo &quot;in s1,a=&quot;$a</span><br><span class="line">echo &quot;in s1,b=&quot;$b</span><br><span class="line">./s2.sh</span><br></pre></td></tr></table></figure><p>创建s2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># /bin/bash</span><br><span class="line">echo &quot;in s2,a=&quot;$a</span><br><span class="line">echo &quot;in s2,b=&quot;$b</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# export a=1</span><br><span class="line">[root@mini2 ~]# ./s1.sh           </span><br><span class="line">1</span><br><span class="line">[root@mini2 ~]# vi s1.sh          </span><br><span class="line">[root@mini2 ~]# chmod 777 s1.sh   </span><br><span class="line">[root@mini2 ~]# vi s1.sh       </span><br><span class="line">[root@mini2 ~]# vi s2.sh</span><br><span class="line">[root@mini2 ~]# chmod +x s2.sh</span><br><span class="line"></span><br><span class="line"># 运行</span><br><span class="line">[root@mini2 ~]# ./s1.sh</span><br><span class="line">in s1,a=1</span><br><span class="line">in s1,b=2</span><br><span class="line">in s2,a=1</span><br><span class="line">in s2,b=</span><br></pre></td></tr></table></figure><p>b只运行在s1脚本子shell当中</p><p>在s1中export</p><p>#!/bin/bash</p><p>export b=2echo “in s1,a=”$aecho “in s1,b=”$b./s2.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# ./s1.sh </span><br><span class="line">in s1,a=1</span><br><span class="line">in s1,b=2</span><br><span class="line">in s2,a=1</span><br><span class="line">in s2,b=2</span><br></pre></td></tr></table></figure><p>但是在命令行中echo不到b</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# echo $b</span><br><span class="line"></span><br><span class="line">[root@mini2 ~]#</span><br></pre></td></tr></table></figure><p>s1和s2运行在当前bash的子进程中，父进程中没有b</p><p>要想在所有进程中都生效用source</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@mini2 ~]# source s1.sh</span><br><span class="line">in s1,a=1</span><br><span class="line">in s1,b=2</span><br><span class="line">in s2,a=1</span><br><span class="line">in s2,b=2</span><br><span class="line">[root@mini2 ~]# echo $b</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>启动登陆时会自动运行  /etc/porfile等</p><p>但ssh时不会运行，必须手动source</p><p>startzk.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;start zkServer...&quot;</span><br><span class="line">for i in 1 2 3</span><br><span class="line">do</span><br><span class="line">ssh mini$i &quot;source /etc/profile;/root/app/zookeeper/bin/zkServer.sh start&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="zookeeper-api应用"><a href="#zookeeper-api应用" class="headerlink" title="zookeeper-api应用"></a>zookeeper-api应用</h1><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;zookeeper部署&quot;&gt;&lt;a href=&quot;#zookeeper部署&quot; class=&quot;headerlink&quot; title=&quot;zookeeper部署&quot;&gt;&lt;/a&gt;zookeeper部署&lt;/h1&gt;&lt;p&gt;安装到3台虚拟机上&lt;/p&gt;
&lt;p&gt;安装好JDK&lt;/p&gt;
&lt;h2 id
      
    
    </summary>
    
    
      <category term="大数据 zookeeper" scheme="http://yoursite.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE-zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>linux中的crontab</title>
    <link href="http://yoursite.com/2018/05/07/linux%E4%B8%AD%E7%9A%84crontab%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/07/linux中的crontab命令/</id>
    <published>2018-05-07T12:16:26.000Z</published>
    <updated>2018-05-07T12:20:25.043Z</updated>
    
    <content type="html"><![CDATA[<p>at 命令是针对仅运行一次的任务，循环运行的例行性计划任务，linux系统则是由 cron (crond) 这个系统服务来控制的。Linux 系统上面原本就有非常多的计划性工作，因此这个系统服务是默认启动的。另外, 由于使用者自己也可以设置计划任务，所以， Linux 系统也提供了使用者控制计划任务的命令 :crontab 命令。</p><p><strong>一、crond简介</strong></p><p>crond是linux下用来周期性的执行某种任务或等待处理某些事件的一个守护进程，与windows下的计划任务类似，当安装完成操作系统后，默认会安装此服务工具，并且会自动启动crond进程，crond进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务。</p><p>Linux下的任务调度分为两类，系统任务调度和用户任务调度。</p><p>系统任务调度：系统周期性所要执行的工作，比如写缓存数据到硬盘、日志清理等。在/etc目录下有一个crontab文件，这个就是系统任务调度的配置文件。</p><p>/etc/crontab文件包括下面几行：</p><p>[root@localhost ~]# cat /etc/crontab </p><p>SHELL=/bin/bash</p><p>PATH=/sbin:/bin:/usr/sbin:/usr/bin</p><p>MAILTO=””HOME=/</p><p># run-parts</p><p>51 <em> </em> <em> </em> root run-parts /etc/cron.hourly</p><p>24 7 <em> </em> * root run-parts /etc/cron.daily</p><p>22 4 <em> </em> 0 root run-parts /etc/cron.weekly</p><p>42 4 1 <em> </em> root run-parts /etc/cron.monthly</p><p>[root@localhost ~]#</p><p>前四行是用来配置crond任务运行的环境变量，第一行SHELL变量指定了系统要使用哪个shell，这里是bash，第二行PATH变量指定了系统执行命令的路径，第三行MAILTO变量指定了crond的任务执行信息将通过电子邮件发送给root用户，如果MAILTO变量的值为空，则表示不发送任务执行信息给用户，第四行的HOME变量指定了在执行命令或者脚本时使用的主目录。第六至九行表示的含义将在下个小节详细讲述。这里不在多说。</p><p>用户任务调度：用户定期要执行的工作，比如用户数据备份、定时邮件提醒等。用户可以使用 crontab 工具来定制自己的计划任务。所有用户定义的crontab 文件都被保存在 /var/spool/cron目录中。其文件名与用户名一致。</p><p><strong>使用者权限文件：</strong></p><p>文件：</p><p>/etc/cron.deny</p><p>说明：</p><p>该文件中所列用户不允许使用crontab命令</p><p>文件：</p><p>/etc/cron.allow</p><p>说明：</p><p>该文件中所列用户允许使用crontab命令</p><p>文件：</p><p>/var/spool/cron/</p><p>说明：</p><p>所有用户crontab文件存放的目录,以用户名命名</p><p><strong>crontab**</strong>文件的含义：**</p><p>用户所建立的crontab文件中，每一行都代表一项任务，每行的每个字段代表一项设置，它的格式共分为六个字段，前五段是时间设定段，第六段是要执行的命令段，格式如下：</p><p>minute   hour   day   month   week   command</p><p>其中：</p><p>minute： 表示分钟，可以是从0到59之间的任何整数。</p><p>hour：表示小时，可以是从0到23之间的任何整数。</p><p>day：表示日期，可以是从1到31之间的任何整数。</p><p>month：表示月份，可以是从1到12之间的任何整数。</p><p>week：表示星期几，可以是从0到7之间的任何整数，这里的0或7代表星期日。</p><p>command：要执行的命令，可以是系统命令，也可以是自己编写的脚本文件。</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fr31js0swtj20en0bsq4h.jpg" alt="img"> </p><p><strong>在以上各个字段中，还可以使用以下特殊字符：</strong></p><p>星号（*）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。</p><p>逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”</p><p>中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”</p><p>正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次。</p><p><strong>二、crond服务</strong></p><p>安装crontab：</p><p>yum install crontabs</p><p>服务操作说明：</p><p>/sbin/service crond start //启动服务</p><p>/sbin/service crond stop //关闭服务</p><p>/sbin/service crond restart //重启服务</p><p>/sbin/service crond reload //重新载入配置</p><p>查看crontab服务状态：</p><p>service crond status</p><p>手动启动crontab服务：</p><p>service crond start</p><p>查看crontab服务是否已设置为开机启动，执行命令：</p><p>ntsysv</p><p>加入开机自动启动：</p><p>chkconfig –level 35 crond on</p><p><strong>三、crontab命令详解</strong></p><p><strong>1**</strong>．<strong>**命令格式：</strong></p><p>crontab [-u user] file</p><p>crontab [-u user] [ -e | -l | -r ]</p><p><strong>2**</strong>．<strong>**命令功能：</strong></p><p>通过crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell script脚本。时间间隔的单位可以是分钟、小时、日、月、周及以上的任意组合。这个命令非常设合周期性的日志分析或数据备份等工作。</p><p><strong>3**</strong>．<strong>**命令参数：</strong></p><p>-u user：用来设定某个用户的crontab服务，例如，“-u ixdba”表示设定ixdba用户的crontab服务，此参数一般有root用户来运行。</p><p>file：file是命令文件的名字,表示将file做为crontab的任务列表文件并载入crontab。如果在命令行中没有指定这个文件，crontab命令将接受标准输入（键盘）上键入的命令，并将它们载入crontab。</p><p>-e：编辑某个用户的crontab文件内容。如果不指定用户，则表示编辑当前用户的crontab文件。</p><p>-l：显示某个用户的crontab文件内容，如果不指定用户，则表示显示当前用户的crontab文件内容。</p><p>-r：从/var/spool/cron目录中删除某个用户的crontab文件，如果不指定用户，则默认删除当前用户的crontab文件。</p><p>-i：在删除用户的crontab文件时给确认提示。</p><p><strong>4**</strong>．<strong>**常用方法：</strong></p><p><strong>1).</strong> <strong>创建一个新的crontab文件</strong></p><p>在考虑向cron进程提交一个crontab文件之前，首先要做的一件事情就是设置环境变量EDITOR。cron进程根据它来确定使用哪个编辑器编辑crontab文件。9 9 %的UNIX和LINUX用户都使用vi，如果你也是这样，那么你就编辑$ HOME目录下的. profile文件，在其中加入这样一行：</p><p>EDITOR=vi; export EDITOR</p><p>然后保存并退出。不妨创建一个名为<user> cron的文件，其中<user>是用户名，例如， davecron。在该文件中加入如下的内容。</user></user></p><p>​     # (put your own initials here)echo the date to the console every</p><p>​     # 15minutes between 6pm and 6am</p><p>​     0,15,30,45 18-06 <em> </em> * /bin/echo ‘date’ &gt; /dev/console</p><p>​    保存并退出。确信前面5个域用空格分隔。</p><p>在上面的例子中，系统将每隔1 5分钟向控制台输出一次当前时间。如果系统崩溃或挂起，从最后所显示的时间就可以一眼看出系统是什么时间停止工作的。在有些系统中，用tty1来表示控制台，可以根据实际情况对上面的例子进行相应的修改。为了提交你刚刚创建的crontab文件，可以把这个新创建的文件作为cron命令的参数：</p><p>​    $ crontab davecron</p><p>现在该文件已经提交给cron进程，它将每隔1 5分钟运行一次。</p><p>同时，新创建文件的一个副本已经被放在/var/spool/cron目录中，文件名就是用户名(即dave)。</p><p><strong>2).</strong> <strong>列出crontab文件</strong></p><p>   为了列出crontab文件，可以用：</p><p>​    $ crontab -l</p><p>​    0,15,30,45,18-06 <em> </em> * /bin/echo <code>date</code> &gt; dev/tty1</p><p>你将会看到和上面类似的内容。可以使用这种方法在$ H O M E目录中对crontab文件做一备份：</p><p>​    $ crontab -l &gt; $HOME/mycron</p><p>​    这样，一旦不小心误删了crontab文件，可以用上一节所讲述的方法迅速恢复。</p><p><strong>3).</strong> <strong>编辑crontab文件</strong></p><p>   如果希望添加、删除或编辑crontab文件中的条目，而E D I TO R环境变量又设置为v i，那么就可以用v i来编辑crontab文件，相应的命令为：</p><p>​    $ crontab -e</p><p>可以像使用v i编辑其他任何文件那样修改crontab文件并退出。如果修改了某些条目或添加了新的条目，那么在保存该文件时， c r o n会对其进行必要的完整性检查。如果其中的某个域出现了超出允许范围的值，它会提示你。</p><p>我们在编辑crontab文件时，没准会加入新的条目。例如，加入下面的一条：</p><p>​    # DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month</p><p>​    30 3 1,7,14,21,26 <em> </em> /bin/find -name “core’ -exec rm {} \;</p><p>现在保存并退出。最好在crontab文件的每一个条目之上加入一条注释，这样就可以知道它的功能、运行时间，更为重要的是，知道这是哪位用户的作业。</p><p>现在让我们使用前面讲过的crontab -l命令列出它的全部信息：</p><p>   $ crontab -l </p><h1 id="crondave-installed-on-Tue-May-4-13-07-43-1999"><a href="#crondave-installed-on-Tue-May-4-13-07-43-1999" class="headerlink" title="(crondave installed on Tue May 4 13:07:43 1999)"></a>(crondave installed on Tue May 4 13:07:43 1999)</h1><h1 id="DT-ech-the-date-to-the-console-every-30-minites"><a href="#DT-ech-the-date-to-the-console-every-30-minites" class="headerlink" title="DT:ech the date to the console every 30 minites"></a>DT:ech the date to the console every 30 minites</h1><p>  0,15,30,45 18-06 <em> </em> * /bin/echo <code>date</code> &gt; /dev/tty1</p><h1 id="DT-delete-core-files-at-3-30am-on-1-7-14-21-26-26-days-of-each-month"><a href="#DT-delete-core-files-at-3-30am-on-1-7-14-21-26-26-days-of-each-month" class="headerlink" title="DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month"></a>DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month</h1><p>   30 3 1,7,14,21,26 <em> </em> /bin/find -name “core’ -exec rm {} \;</p><p><strong>4).</strong> <strong>删除crontab文件</strong></p><p>要删除crontab文件，可以用：</p><p>   $ crontab -r</p><p><strong>5).</strong> <strong>恢复丢失的crontab文件</strong></p><p>如果不小心误删了crontab文件，假设你在自己的$ H O M E目录下还有一个备份，那么可以将其拷贝到/var/spool/cron/<username>，其中<username>是用户名。如果由于权限问题无法完成拷贝，可以用：</username></username></p><p>​    $ crontab <filename></filename></p><p>​    其中，<filename>是你在$ H O M E目录中副本的文件名。</filename></p><p>我建议你在自己的$ H O M E目录中保存一个该文件的副本。我就有过类似的经历，有数次误删了crontab文件（因为r键紧挨在e键的右边）。这就是为什么有些系统文档建议不要直接编辑crontab文件，而是编辑该文件的一个副本，然后重新提交新的文件。</p><p>有些crontab的变体有些怪异，所以在使用crontab命令时要格外小心。如果遗漏了任何选项，crontab可能会打开一个空文件，或者看起来像是个空文件。这时敲delete键退出，不要按<ctrl-d>，否则你将丢失crontab文件。</ctrl-d></p><p><strong>5**</strong>．<strong>**使用实例</strong></p><p><strong>实例1：每1分钟执行一次command</strong></p><p><strong>命令：</strong></p><ul><li><ul><li><ul><li><ul><li><ul><li>command</li></ul></li></ul></li></ul></li></ul></li></ul><p><strong>实例2：每小时的第3和第15分钟执行</strong></p><p><strong>命令：</strong></p><p>3,15 <em> </em> <em> </em> command</p><p><strong>实例3：在上午8点到11点的第3和第15分钟执行</strong></p><p><strong>命令：</strong></p><p>3,15 8-11 <em> </em> * command</p><p><strong>实例4：每隔两天的上午8点到11点的第3和第15分钟执行</strong></p><p><strong>命令：</strong></p><p>3,15 8-11 <em>/2 </em> * command</p><p><strong>实例5：每个星期一的上午8点到11点的第3和第15分钟执行</strong></p><p><strong>命令：</strong></p><p>3,15 8-11 <em> </em> 1 command</p><p><strong>实例6：每晚的21:30重启smb</strong> </p><p><strong>命令：</strong></p><p>30 21 <em> </em> * /etc/init.d/smb restart</p><p><strong>实例7：每月1、10、22日的4 : 45重启smb</strong> </p><p><strong>命令：</strong></p><p>45 4 1,10,22 <em> </em> /etc/init.d/smb restart</p><p><strong>实例8：每周六、周日的1 : 10重启smb</strong></p><p><strong>命令：</strong></p><p>10 1 <em> </em> 6,0 /etc/init.d/smb restart</p><p><strong>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb</strong> </p><p><strong>命令：</strong></p><p>0,30 18-23 <em> </em> * /etc/init.d/smb restart</p><p><strong>实例10：每星期六的晚上11 : 00 pm重启smb</strong> </p><p><strong>命令：</strong></p><p>0 23 <em> </em> 6 /etc/init.d/smb restart</p><p><strong>实例11：每一小时重启smb</strong> </p><p><strong>命令：</strong></p><ul><li><em>/1 </em> <em> </em> /etc/init.d/smb restart</li></ul><p><strong>实例12：晚上11点到早上7点之间，每隔一小时重启smb</strong> </p><p><strong>命令：</strong></p><ul><li>23-7/1 <em> </em> * /etc/init.d/smb restart</li></ul><p><strong>实例13：每月的4号与每周一到周三的11点重启smb</strong> </p><p><strong>命令：</strong></p><p>0 11 4 * mon-wed /etc/init.d/smb restart</p><p><strong>实例14：一月一号的4点重启smb</strong> </p><p><strong>命令：</strong></p><p>0 4 1 jan * /etc/init.d/smb restart</p><p><strong>实例15：每小时执行/etc/cron.hourly目录内的脚本</strong></p><p><strong>命令：</strong></p><p>01   <em>   </em>   <em>   </em>     root run-parts /etc/cron.hourly</p><p><strong>说明：</strong></p><p>run-parts这个参数了，如果去掉这个参数的话，后面就可以写要运行的某个脚本名，而不是目录名了</p><p><strong>四、使用注意事项</strong></p><p><strong>1.</strong> <strong>注意环境变量问题</strong></p><p>有时我们创建了一个crontab，但是这个任务却无法自动执行，而手动执行这个任务却没有问题，这种情况一般是由于在crontab文件中没有配置环境变量引起的。</p><p>在crontab文件中定义多个调度任务时，需要特别注意的一个问题就是环境变量的设置，因为我们手动执行某个任务时，是在当前shell环境下进行的，程序当然能找到环境变量，而系统自动执行任务调度时，是不会加载任何环境变量的，因此，就需要在crontab文件中指定任务运行所需的所有环境变量，这样，系统执行任务调度时就没有问题了。</p><p>不要假定cron知道所需要的特殊环境，它其实并不知道。所以你要保证在shelll脚本中提供所有必要的路径和环境变量，除了一些自动设置的全局变量。所以注意如下3点：</p><p>1）脚本中涉及文件路径时写全局路径；</p><p>2）脚本执行要用到java或其他环境变量时，通过source命令引入环境变量，如：</p><p>cat start_cbp.sh</p><p>#!/bin/sh</p><p>source /etc/profile</p><p>export RUN_CONF=/home/d139/conf/platform/cbp/cbp_jboss.conf</p><p>/usr/local/jboss-4.0.5/bin/run.sh -c mev &amp;</p><p>3）当手动执行脚本OK，但是crontab死活不执行时。这时必须大胆怀疑是环境变量惹的祸，并可以尝试在crontab中直接引入环境变量解决问题。如：</p><p>0 <em> </em> <em> </em> . /etc/profile;/bin/sh /var/www/java/audit_no_count/bin/restart_audit.sh</p><p><strong>2.</strong> <strong>注意清理系统用户的邮件日志</strong></p><p>每条任务调度执行完毕，系统都会将任务输出信息通过电子邮件的形式发送给当前系统用户，这样日积月累，日志信息会非常大，可能会影响系统的正常运行，因此，将每条任务进行重定向处理非常重要。</p><p>例如，可以在crontab文件中设置如下形式，忽略日志输出：</p><p>0 <em>/3 </em> <em> </em> /usr/local/apache2/apachectl restart &gt;/dev/null 2&gt;&amp;1</p><p>“/dev/null 2&gt;&amp;1”表示先将标准输出重定向到/dev/null，然后将标准错误重定向到标准输出，由于标准输出已经重定向到了/dev/null，因此标准错误也会重定向到/dev/null，这样日志输出问题就解决了。</p><p><strong>3.</strong> <strong>系统级任务调度与用户级任务调度</strong></p><p>系统级任务调度主要完成系统的一些维护操作，用户级任务调度主要完成用户自定义的一些任务，可以将用户级任务调度放到系统级任务调度来完成（不建议这么做），但是反过来却不行，root用户的任务调度操作可以通过“crontab –uroot –e”来设置，也可以将调度任务直接写入/etc/crontab文件，需要注意的是，如果要定义一个定时重启系统的任务，就必须将任务放到/etc/crontab文件，即使在root用户下创建一个定时重启系统的任务也是无效的。</p><p><strong>4.</strong> <strong>其他注意事项</strong></p><p>新创建的cron job，不会马上执行，至少要过2分钟才执行。如果重启cron则马上执行。</p><p>当crontab突然失效时，可以尝试/etc/init.d/crond restart解决问题。或者查看日志看某个job有没有执行/报错tail -f /var/log/cron。</p><p>千万别乱运行crontab -r。它从Crontab目录（/var/spool/cron）中删除用户的Crontab文件。删除了该用户的所有crontab都没了。</p><p>在crontab中%是有特殊含义的，表示换行的意思。如果要用的话必须进行转义\%，如经常用的date ‘+%Y%m%d’在crontab里是不会执行的，应该换成date ‘+\%Y\%m\%d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;at 命令是针对仅运行一次的任务，循环运行的例行性计划任务，linux系统则是由 cron (crond) 这个系统服务来控制的。Linux 系统上面原本就有非常多的计划性工作，因此这个系统服务是默认启动的。另外, 由于使用者自己也可以设置计划任务，所以， Linux 系统
      
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux中的sort、cut、wc命令</title>
    <link href="http://yoursite.com/2018/05/07/linux%E4%B8%AD%E7%9A%84sort%E3%80%81cut%E3%80%81wc%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/07/linux中的sort、cut、wc命令/</id>
    <published>2018-05-07T10:41:43.000Z</published>
    <updated>2018-05-07T12:21:29.747Z</updated>
    
    <content type="html"><![CDATA[<p>sort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。</p><p>sort语法</p><p>[root@www ~]# sort [-fbMnrtuk][file or stdin]选项与参数：-f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；-b  ：忽略最前面的空格符部分；-M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；-n  ：使用『纯数字』进行排序(默认是以文字型态来排序的)；-r  ：反向排序；-u  ：就是 uniq ，相同的数据中，仅出现一行代表；-t  ：分隔符，默认是用 [tab] 键来分隔；-k  ：以那个区间 (field) 来进行排序的意思</p><p>对/etc/passwd 的账号进行排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# cat /etc/passwd | sort</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">apache:x:48:48:Apache:/var/www:/sbin/nologin</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br></pre></td></tr></table></figure><p>sort 是默认以第一个数据来排序，而且默认是以字符串形式来排序,所以由字母 a 开始升序排序。</p><p>/etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# cat /etc/passwd | sort -t &apos;:&apos; -k 3</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br></pre></td></tr></table></figure><p>默认是以字符串来排序的，如果想要使用数字排序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | sort -t &apos;:&apos; -k 3n</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br></pre></td></tr></table></figure><p>默认是升序排序，如果要倒序排序，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | sort -t &apos;:&apos; -k 3nr</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">ntp:x:106:113::/home/ntp:/bin/false</span><br><span class="line">messagebus:x:105:109::/var/run/dbus:/bin/false</span><br><span class="line">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd |  sort -t&apos;:&apos; -k 6.2,6.4 -k 1r      </span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br></pre></td></tr></table></figure><p>查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd |  sort -t&apos;:&apos; -k 7 -u</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">syslog:x:101:102::/home/syslog:/bin/false</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><h1 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h1><p> uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。</p><p>uniq语法</p><p>[root@www ~]# uniq [-icu]选项与参数：-i   ：忽略大小写字符的不同；-c  ：进行计数-u  ：只显示唯一的行</p><p>testfile的内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat testfile</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">friend</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>未经排序的文件，将会发现没有任何行被去重</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uniq testfile</span><br><span class="line"></span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">friend</span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p> 去重之前要进行排序</p><p>排序文件，默认是去重</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat testfile | sort | uniq</span><br><span class="line"></span><br><span class="line">friend</span><br><span class="line">hello</span><br><span class="line">world</span><br></pre></td></tr></table></figure><p>排序之后删除了重复行，同时在行首位置输出该行重复的次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat testfile | sort | uniq -c</span><br><span class="line"></span><br><span class="line">1 friend</span><br><span class="line">3 hello</span><br><span class="line">2 world</span><br></pre></td></tr></table></figure><p>仅显示存在重复的行，并在行首显示该行重复的次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sort testfile | uniq -dc</span><br><span class="line"></span><br><span class="line">3 hello</span><br><span class="line">2 world</span><br></pre></td></tr></table></figure><p>仅显示不重复的行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sort testfile | uniq -u</span><br><span class="line">friend</span><br></pre></td></tr></table></figure><h1 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h1><p>cut命令可以从一个文本文件或者文本流中提取文本列。</p><p>cut语法</p><p>[root@www ~]# cut -d’分隔字符’ -f fields &lt;==用于有特定分隔字符[root@www ~]# cut -c 字符区间            &lt;==用于排列整齐的信息选项与参数：-d  ：后面接分隔字符。与 -f 一起使用；-f  ：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思；-c  ：以字符 (characters) 的单位取出固定字符区间；</p><p>PATH 变量如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# echo $PATH</span><br><span class="line">/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</span><br><span class="line"></span><br><span class="line">#1 | 2       | 3   | 4       | 5            | 6            | 7</span><br></pre></td></tr></table></figure><p>将 PATH 变量取出，我要找出第五个路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | cut -d &apos;:&apos; -f 5</span><br><span class="line"></span><br><span class="line">/usr/local/bin</span><br></pre></td></tr></table></figure><p>将 PATH 变量取出，我要找出第三和第五个路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | cut -d &apos;:&apos; -f 3,5</span><br><span class="line"></span><br><span class="line">/sbin:/usr/local/bin</span><br></pre></td></tr></table></figure><p>将 PATH 变量取出，我要找出第三到最后一个路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | cut -d &apos;:&apos; -f 3-</span><br><span class="line">/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</span><br></pre></td></tr></table></figure><p>将 PATH 变量取出，我要找出第一到第三个路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | cut -d &apos;:&apos; -f 1-3</span><br><span class="line"></span><br><span class="line">/bin:/usr/bin:/sbin:</span><br></pre></td></tr></table></figure><p>将 PATH 变量取出，我要找出第一到第三，还有第五个路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH | cut -d &apos;:&apos; -f 1-3,5</span><br><span class="line">/bin:/usr/bin:/sbin:/usr/local/bin</span><br></pre></td></tr></table></figure><p>实用例子:只显示/etc/passwd的用户和shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | cut -d &apos;:&apos; -f 1,7</span><br><span class="line"></span><br><span class="line">root:/bin/bash</span><br><span class="line">daemon:/bin/sh</span><br><span class="line">bin:/bin/sh</span><br></pre></td></tr></table></figure><h1 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h1><p>统计文件里面有多少单词，多少行，多少字符。</p><p>wc语法</p><p>[root@www ~]# wc [-lwm]选项与参数：-l  ：仅列出行；-w  ：仅列出多少字(英文单字)；-m  ：多少字符；</p><p>默认使用wc统计/etc/passwd</p><p>wc /etc/passwd</p><p>40   45 1719 /etc/passwd40是行数，45是单词数，1719是字节数</p><p>wc的命令比较简单使用，每个参数使用如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wc -l /etc/passwd   #统计行数，在对记录数时，很常用</span><br><span class="line"></span><br><span class="line">40 /etc/passwd       #表示系统有40个账户</span><br><span class="line"></span><br><span class="line">wc -w /etc/passwd  #统计单词出现次数</span><br><span class="line"></span><br><span class="line">45 /etc/passwd</span><br><span class="line"></span><br><span class="line">wc -m /etc/passwd  #统计文件的字符数</span><br><span class="line"></span><br><span class="line">1719</span><br></pre></td></tr></table></figure><p>参考 <a href="http://vbird.dic.ksu.edu.tw/linux_basic/0320bash_6.php#pipe_2" target="_blank" rel="noopener">http://vbird.dic.ksu.edu.tw/linux_basic/0320bash_6.php#pipe_2</a></p><pre><code>http://www.cnblogs.com/stephen-liu74/archive/2011/11/10/2240461.html</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。&lt;/p&gt;
&lt;p&gt;sort语法&lt;/p&gt;
&lt;p&gt;[root@www ~]# sort [-fbMnrtu
      
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>shell编程基础</title>
    <link href="http://yoursite.com/2018/05/06/shell%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2018/05/06/shell编程基础/</id>
    <published>2018-05-06T10:34:02.000Z</published>
    <updated>2018-05-06T16:35:12.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是shell"><a href="#什么是shell" class="headerlink" title="什么是shell"></a>什么是shell</h1><ul><li>Shell是用户与内核进行交互操作的一种接口，目前最流行的Shell称为bashShell</li><li>Shell也是一门编程语言&lt;解释型的编程语言&gt;，即shell脚本</li><li>一个系统可以存在多个shell，可以通过cat /etc/shells命令查看系统中安装的shell，不同的shell可能支持的命令语法是不相同的</li></ul><h1 id="Shell脚本的执行方式"><a href="#Shell脚本的执行方式" class="headerlink" title="Shell脚本的执行方式"></a>Shell脚本的执行方式</h1><ul><li>第一种：输入脚本的绝对路径或相对路径</li></ul><p>首先要赋予+x权限</p><p>  /root/helloWorld.sh</p><p>  ./helloWorld.sh</p><p>或者，不用赋予+x权限，而用解释器解释执行</p><p>sh  helloworld.sh</p><ul><li><p>第二种：bash或sh +脚本</p><p>sh /root/helloWorld.sh</p><p>sh helloWorld.sh</p></li><li><p>第三种：在脚本的路径前再加”.”</p><p>. /root/helloWorld.sh</p><p>. ./helloWorld.sh</p></li><li><p>区别：第一种和第二种会新开一个bash，不同bash中的变量无法共享</p></li></ul><h1 id="Shell中的变量"><a href="#Shell中的变量" class="headerlink" title="Shell中的变量"></a>Shell中的变量</h1><ul><li>LinuxShell中的变量分为“系统变量”和“用户自定义变量”，可以通过set命令查看那系统变量</li><li>系统变量：\$HOME、\$PWD、\$SHELL、\$USER等等</li></ul><ul><li>显示当前shell中所有变量  :   set</li></ul><h1 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h1><ul><li>变量＝值 （例如STR=abc）</li><li>等号两侧不能有空格</li><li>变量名称一般习惯为大写</li><li>双引号和单引号有区别，双引号仅将空格、\脱意，单引号会将所有特殊字符脱意</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# x=hello world</span><br><span class="line">-bash: world: command not found</span><br><span class="line"></span><br><span class="line">[root@VM_0_14_centos ~]# x=&quot;hello world&quot;</span><br><span class="line">[root@VM_0_14_centos ~]# echo $x</span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">[root@VM_0_14_centos ~]# y=bb</span><br><span class="line">[root@VM_0_14_centos ~]# x=&quot;hello $bb&quot;</span><br><span class="line">[root@VM_0_14_centos ~]# echo $x</span><br><span class="line">hello</span><br><span class="line">[root@VM_0_14_centos ~]# x=&quot;hello $y&quot;</span><br><span class="line">[root@VM_0_14_centos ~]# echo $x</span><br><span class="line">hello bb</span><br><span class="line">[root@VM_0_14_centos ~]# x=&apos;hello $y&apos;</span><br><span class="line">[root@VM_0_14_centos ~]# echo $x</span><br><span class="line">hello $y</span><br></pre></td></tr></table></figure><ul><li>A=9 unsetA 撤销变量 A</li></ul><ul><li>readonly B=2 声明静态的变量B=2 ，不能 unset</li><li>export变量名可把变量提升为全局环境变量，可供其他shell程序使用</li></ul><h1 id="将命令的返回值赋给变量"><a href="#将命令的返回值赋给变量" class="headerlink" title="将命令的返回值赋给变量"></a>将命令的返回值赋给变量</h1><ul><li>A=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A</li><li>A=$(ls -la) 等价于反引号</li></ul><h1 id="Shell中的特殊变量"><a href="#Shell中的特殊变量" class="headerlink" title="Shell中的特殊变量"></a>Shell中的特殊变量</h1><ul><li>$? 表示上一个命令退出的状态</li><li>$$ 表示当前进程编号</li><li>$0 表示当前脚本名称</li><li>$n 表示n位置的输入参数（n代表数字，n&gt;=1）</li><li>$#   表示参数的个数，常用于循环</li><li>\$*和$@ 都表示参数列表 </li></ul><p><strong>\$*与$@区别</strong></p><ul><li>\$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号””包含时，都以$1  $2  …$n 的形式输出所有参数</li><li>当它们被双引号” “包含时，”$*”会将所有的参数作为一个整体，以”$1$2 … $n”的形式输出所有参数；”$@”会将各个参数分开，以”$1””$2” … “$n” 的形式输出所有参数</li></ul><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li>格式 :expr m + n或$((m+n)) <strong>注意expr运算符间要有空格</strong></li><li>例如计算（2 ＋3 ）×4 的值</li></ul><p>1 .分步计算  S=`expr 2 + 3`   expr $S \* 4 </p><p>2.一步完成计算</p><p>  expr `expr 2 + 3 ` * 4</p><p>  echo `expr \`expr 2 + 3\` \* 4`   # 各种转义太麻烦了</p><p>  或</p><p>  $(((2+3)*4))</p><h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><ul><li><p>第一种：</p><p>for N in 1 2 3</p><p>do</p><p>  echo $N</p><p>done</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# for N in 1 2 3</span><br><span class="line">&gt; </span><br><span class="line">&gt; do</span><br><span class="line">&gt; </span><br><span class="line">&gt;   echo $N</span><br><span class="line">&gt; </span><br><span class="line">&gt; done</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>或</p><p>for N in 1 2 3; do echo $N; done</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# for N in 1 2 3; do echo $N; done</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>或</p><p>for N in {1..3}; do echo $N; done</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# for N in &#123;1..3&#125;; do echo $N; done</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>​</p></li><li><p>•第二种：</p><p>for((i = 0;i&lt;= 5; i++))</p><p>do</p><p>  echo “welcome $i times”</p><p>done</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# for((i = 0;i&lt;= 5; i++))</span><br><span class="line">&gt; </span><br><span class="line">&gt; do</span><br><span class="line">&gt; </span><br><span class="line">&gt;   echo &quot;welcome $i times&quot;</span><br><span class="line">&gt; </span><br><span class="line">&gt; done</span><br><span class="line">welcome 0 times</span><br><span class="line">welcome 1 times</span><br><span class="line">welcome 2 times</span><br><span class="line">welcome 3 times</span><br><span class="line">welcome 4 times</span><br><span class="line">welcome 5 times</span><br></pre></td></tr></table></figure><p>或</p><p>for((i = 0;i&lt;= 5; i++));do echo “welcome $i times”; done</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# for((i = 0;i&lt;= 5; i++));do echo &quot;welcome $i times&quot;; done</span><br><span class="line">welcome 0 times</span><br><span class="line">welcome 1 times</span><br><span class="line">welcome 2 times</span><br><span class="line">welcome 3 times</span><br><span class="line">welcome 4 times</span><br><span class="line">welcome 5 times</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h1 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h1><ul><li>第一种</li></ul><p>while expression</p><p>do</p><p>command</p><p>…</p><p>done</p><ul><li><p>第二种</p><p>i=1</p><p>while((i&lt;=3))</p><p>do</p><p>  echo $i</p><p>  let i++</p><p>done</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# while((i&lt;=3))</span><br><span class="line">&gt; </span><br><span class="line">&gt; do</span><br><span class="line">&gt; </span><br><span class="line">&gt;   echo $i</span><br><span class="line">&gt; </span><br><span class="line">&gt;   let i++</span><br><span class="line">&gt; </span><br><span class="line">&gt; done</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h1 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h1><ul><li>格式</li></ul><p>case $1 in</p><p>start)</p><p>  echo “starting”</p><p>  ;;</p><p>stop)</p><p>  echo “stoping”</p><p>  ;;</p><p>*)</p><p>  echo “Usage: {start|stop} “</p><p>esac</p><p>$1 脚本后紧跟第一个参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# vim case.sh</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">start)</span><br><span class="line">echo &quot;starting&quot;</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">echo &quot;stoping&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: &#123;start|stop&#125; “</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@VM_0_14_centos ~]# chmod 777 case.sh</span><br><span class="line">[root@VM_0_14_centos ~]# ./case.sh start  </span><br><span class="line">starting</span><br></pre></td></tr></table></figure><h1 id="read命令"><a href="#read命令" class="headerlink" title="read命令"></a>read命令</h1><ul><li><p>read-p(提示语句)-n(字符个数) -t(等待时间) </p><p>  read -p “please input your name:” NAME</p></li></ul><p>从终端交互式的获取输入参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]#  read -p &quot;please input your name:&quot; n</span><br><span class="line">please input your name:123</span><br><span class="line">[root@VM_0_14_centos ~]# echo $n</span><br><span class="line">123</span><br></pre></td></tr></table></figure><h1 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h1><ul><li>语法</li></ul><p>if condition then     statements [elif condition     then statements. ..] [else     statements ] fi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p &quot;please input your name:&quot; NAME</span><br><span class="line">#printf &apos;%s\n&apos; $NAME</span><br><span class="line">if [ $NAME = root ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;hello $&#123;NAME&#125;,  welcome !&quot;</span><br><span class="line">        elif [ $NAME = itcast ]</span><br><span class="line">                then</span><br><span class="line">                        echo &quot;hello $&#123;NAME&#125;,  welcome !&quot;</span><br><span class="line">        else</span><br><span class="line">                echo &quot;SB, get out here !&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>将上面的脚本（hello.sh）运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# ./hello.sh        </span><br><span class="line">please input your name:root</span><br><span class="line">hello root,  welcome !</span><br></pre></td></tr></table></figure><h1 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h1><ul><li>[ condition ] (注意condition前后要有空格)</li></ul><p>#非空返回true，可使用$?验证（0为true，&gt;1为false）</p><p>[ itcast ] 任意有内容的字符串，返回值是0 因此是true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# [ itcast ]</span><br><span class="line">[root@VM_0_14_centos ~]# echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>#空返回false</p><p>[  ]</p><ul><li><p>[condition ] &amp;&amp; echo OK</p><p>  条件满足，执行echo OK</p><p>​</p></li></ul><p>[ condition ] &amp;&amp; echo OK || echo notok</p><p>条件满足，执行echo OK，不满足执行echo notok</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# [ condition ] &amp;&amp; echo OK || echo notok</span><br><span class="line">OK</span><br><span class="line">[root@VM_0_14_centos ~]# [ ] &amp;&amp; echo OK || echo notok</span><br><span class="line">notok</span><br></pre></td></tr></table></figure><p><strong>常用判断条件</strong></p><p>= 字符串比较</p><p>-lt 小于</p><p>-le 小于等于</p><p>-eq 等于</p><p>-gt 大于</p><p>-ge 大于等于</p><p>-ne 不等于</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# [ 3 -lt 2 ]</span><br><span class="line">[root@VM_0_14_centos ~]# echo $?    </span><br><span class="line">1</span><br><span class="line">[root@VM_0_14_centos ~]# [ 3 -gt 3 ]</span><br><span class="line">[root@VM_0_14_centos ~]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@VM_0_14_centos ~]# [ 3 -ge 3 ] </span><br><span class="line">[root@VM_0_14_centos ~]# echo $?    </span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>-r 有读的权限</p><p>-w 有写的权限</p><p>-x 有执行的权限</p><p>-f 文件存在并且是一个常规的文件</p><p>-s 文件存在且不为空</p><p>-d 文件存在并是一个目录</p><p>-b文件存在并且是一个块设备</p><p>-L 文件存在并且是一个链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# ls</span><br><span class="line">anaconda-ks.cfg  apps  case.sh  hello.sh  h.py  ma6174</span><br><span class="line">[root@VM_0_14_centos ~]# [ -f case.sh ]</span><br><span class="line">[root@VM_0_14_centos ~]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@VM_0_14_centos ~]# [ -w cash.sh ]     ## 没有cash.sh 所以也就没有写的权限</span><br><span class="line">[root@VM_0_14_centos ~]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@VM_0_14_centos ~]# [ -w case.sh ] </span><br><span class="line">[root@VM_0_14_centos ~]# echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h1 id="Shell自定义函数"><a href="#Shell自定义函数" class="headerlink" title="Shell自定义函数"></a>Shell自定义函数</h1><ul><li><p>语法</p><p>[ function ] funname [()]</p></li></ul><p>{</p><p>   action;</p><p>   [return int;]</p><p>}</p><p>functionstart()  / function start / start()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">      1 #!/bin/bash</span><br><span class="line">      2 fSum 3 2; # fSum还没有定义，因此会报错</span><br><span class="line">      3 function fSum()</span><br><span class="line">      4 &#123;</span><br><span class="line">      5  echo $1,$2</span><br><span class="line">      6  return $(($1+$2));</span><br><span class="line">      7 &#125;</span><br><span class="line">      8 total=$?;</span><br><span class="line">      9 echo &quot;第一次调用后的返回结果：&quot;$total</span><br><span class="line">     10 fSum 5 7;</span><br><span class="line">     11 total=$?;          # total获得了函数返回值即return的值12</span><br><span class="line">     12 echo $total,$?;</span><br><span class="line">     </span><br><span class="line">[root@VM_0_14_centos ~]# ./hello.sh </span><br><span class="line">./hello.sh: line 2: fSum: command not found</span><br><span class="line">第一次调用后的返回结果：0</span><br><span class="line">5,7</span><br><span class="line">12,0</span><br></pre></td></tr></table></figure><ul><li>注意</li></ul><p>1.必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译</p><p>2.函数返回值，只能通过$? 系统变量获得，可以显示加：return返回，如果不加，将以最后一条命令运行结果，作为返回值。return后跟数值n(0-255)</p><h1 id="脚本调试"><a href="#脚本调试" class="headerlink" title="脚本调试"></a>脚本调试</h1><ul><li>sh -vx helloWorld.sh</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# sh -vx ./hello.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">fSum 3 2;</span><br><span class="line">+ fSum 3 2</span><br><span class="line">./hello.sh: line 2: fSum: command not found</span><br><span class="line">function fSum()</span><br><span class="line">&#123;</span><br><span class="line"> echo $1,$2</span><br><span class="line"> return $(($1+$2));</span><br><span class="line">&#125;</span><br><span class="line">total=$?;</span><br><span class="line">+ total=0</span><br><span class="line">echo &quot;第一次调用后的返回结果：&quot;$total</span><br><span class="line">+ echo $&apos;\347\254\254\344\270\200\346\254\241\350\260\203\347\224\250\345\220\216\347\232\204\350\277\224\345\233\236\347\273\223\346\236\234\357\274\2320&apos;</span><br><span class="line">第一次调用后的返回结果：0</span><br><span class="line">fSum 5 7;</span><br><span class="line">+ fSum 5 7</span><br><span class="line">+ echo 5,7</span><br><span class="line">5,7</span><br><span class="line">+ return 12</span><br><span class="line">total=$?;</span><br><span class="line">+ total=12</span><br><span class="line">echo $total,$?;</span><br><span class="line">+ echo 12,0</span><br><span class="line">12,0</span><br></pre></td></tr></table></figure><ul><li>或者在脚本中增加set -x</li></ul><h1 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h1><ul><li>sed全称是：Stream EDitor即流编辑器，是一个很好的文本处理工具，本身是一个管道命令，处理时，把当前处理的行存储在临时缓冲区中，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行。它是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作。</li></ul><p><strong>sed选项</strong></p><ul><li>-n ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。</li><li>-e ：直接在命令列模式上进行 sed 的动作编辑；</li><li>-i ：直接修改读取的文件内容，而不是输出到终端。</li></ul><p>sed function</p><ul><li>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)</li><li>d ：删除，因为是删除啊，所以 d 后面通常不接任何内容</li><li>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)</li><li>p ：列印，亦即将某个选择的数据印出。通常 p 会与参数 sed-n 一起运行</li><li>s ：取代，可以直接进行取代的工作！通常这个 s 的动作可以搭配正规表示法！例如1,20s/old/new/g</li></ul><h1 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h1><ul><li>AWK是一种优良的文本处理工具。其名称得自于它的创始人 Alfred</li></ul><p>Aho 、PeterWeinberger 和 BrianKernighan 姓氏的首个字母，AWK 提供了极其强大的功能：可以进行样式装入、流控制、数学运算符、进程控制语句甚至于内置的变量和函数。它具备了一个完整的语言所应具有的几乎所有精美特性。实际上AWK 的确拥有自己的语言：AWK 程序设计语言，三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。</p><p><strong>awk命令格式</strong></p><p>awk‘pattern1 {action1} pattern2 {action2} …’ filename</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是shell&quot;&gt;&lt;a href=&quot;#什么是shell&quot; class=&quot;headerlink&quot; title=&quot;什么是shell&quot;&gt;&lt;/a&gt;什么是shell&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Shell是用户与内核进行交互操作的一种接口，目前最流行的Shell称为bash
      
    
    </summary>
    
    
      <category term="大数据 linux" scheme="http://yoursite.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE-linux/"/>
    
  </entry>
  
  <entry>
    <title>linux一些基本软件的安装</title>
    <link href="http://yoursite.com/2018/05/06/linux%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/05/06/linux一些基本软件的安装/</id>
    <published>2018-05-06T07:41:25.000Z</published>
    <updated>2018-05-06T07:41:25.309Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大数据1：虚拟机配置及基本的linux命令</title>
    <link href="http://yoursite.com/2018/05/06/%E5%A4%A7%E6%95%B0%E6%8D%AE1%EF%BC%9A%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%9F%BA%E6%9C%AC%E7%9A%84linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/05/06/大数据1：虚拟机配置及基本的linux命令/</id>
    <published>2018-05-06T01:55:47.000Z</published>
    <updated>2018-05-06T07:41:39.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux中的文件夹"><a href="#linux中的文件夹" class="headerlink" title="linux中的文件夹"></a>linux中的文件夹</h1><ul><li>boot 存放用于系统引导时使用的各种文件</li></ul><ul><li>dev 设备</li><li>etc   (etcetera)存放系统配置文件，约定俗成配置文件放在该文件夹下，所有的配置文件都在该文件夹下。</li><li>home 用户目录 root用户有单独的root目录。</li><li>lib 头文件、动态链接库等c语言文件，各种软件是开源的，各种软件依赖不一样，很混乱，系统中搞一个库，大家都用到的库放在里面，软件就不用再带自己的库了。windows库是官方提供只有一套。</li></ul><p>​       在linux下安装软件很麻烦，安装a可能提示缺少b，再安装b，又提示缺少c… java中有maven，linux下有yum，提供一个中央仓库，自动安装相关依赖。</p><ul><li>media 外部的媒体，如光盘文件等，光驱、usb挂载。</li><li>usr (unix shared resources)，Unix共享资源，linux服务器系统，很多人用，可以把大家都用的软件放在该文件夹下。</li><li>sbin (superuser binaries)存放二进制可执行文件，只有root才能访问，系统管理的程序</li><li>bin (binaries)存放二进制可执行文件，普通管理程序</li><li>temp 临时目录</li><li>mnt  (mount)系统管理员安装临时文件系统的安装点</li><li>var  (variable)用于存放运行时需要改变数据的文件</li></ul><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><p>子网掩码 属于哪个网段</p><p>IP 192.168.33.2</p><p>掩码 255.255.255.0</p><p>255全是8位二进制1， ip和子网掩码进行与操作，变成192.168.33.0，得到网段。</p><p>网关 网络总出口，路由器ip地址</p><p>dns 域名解析服务器</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fr1fabi7exj20jt0cpq33.jpg" alt=""></p><p>主机名比ip好记，但无法直接ping，肯定不用直接再申请个域名，只要在各服务器上配置下hosts文件，加入主机名与相对应的ip即可。</p><p>如经常用的localhost，就是系统已经存在的hosts文件当中的一个与ip地址127.0.0.1的对应。</p><p>vm有虚拟网卡 vmnet8</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fr1gdjprqpj20x40l80tr.jpg" alt=""></p><h1 id="linux常用命令操作"><a href="#linux常用命令操作" class="headerlink" title="linux常用命令操作"></a>linux常用命令操作</h1><p>1、日常操作命令  </p><p>**查看当前所在的工作目录pwd</p><p>**查看当前系统的时间 date</p><p>**查看有谁在线（哪些人登陆到了服务器）who  查看当前在线last 查看最近的登陆历史记录</p><p>2、文件系统操作**ls /    查看根目录下的子节点（文件夹和文件）信息ls -al  -a是显示隐藏文件   -l是以更详细的列表形式显示</p><p>**切换目录cd  /home</p><p>**创建文件夹mkdir aaa     这是相对路径的写法 mkdir -p aaa/bbb/cccmkdir  /data    这是绝对路径的写法 </p><p>**删除文件夹rmdir   可以删除空目录rm -r aaa   可以把aaa整个文件夹及其中的所有子节点全部删除，但是会有提示rm -rf aaa   强制删除aaa，没有提示</p><p>**修改文件夹名称mv aaa angelababy</p><p>**创建文件touch  somefile.1   创建一个空文件</p><p>echo “i miss you”  在命令行输出该句</p><p>echo “i miss you” &gt; somefile.2  利用重定向“&gt;”的功能，将一条指令的输出结果写入到一个文件中，会覆盖原文件内容</p><p>echo “huang” &gt;&gt; somefile.2     将一条指令的输出结果追加到一个文件中，不会覆盖原文件内容</p><p>用vi文本编辑器来编辑生成文件<strong>**</strong>最基本用法vi  somefile.41、首先会进入“一般模式”，此模式只接受各种快捷键，不能编辑文件内容2、按i键，就会从一般模式进入编辑模式，此模式下，敲入的都是文件内容3、编辑完成之后，按Esc键退出编辑模式，回到一般模式；4、再按：，进入“底行命令模式”，输入wq命令，回车即可</p><p><strong>**</strong>一些常用快捷键一些有用的快捷键（在一般模式下使用）：a  在光标后一位开始插入A   在该行的最后插入I   在该行的最前面插入gg   直接跳到文件的首行G    直接跳到文件的末行dd   删除行，如果  5dd   ，则一次性删除光标后的5行yy  复制当前行,  复制多行，则  3yy，则复制当前行附近的3行p   粘贴v  进入字符选择模式，选择完成后，按y复制，按p粘贴ctrl+v  进入块选择模式，选择完成后，按y复制，按p粘贴shift+v  进入行选择模式，选择完成后，按y复制，按p粘贴</p><p>查找并替换（在底行命令模式中输入）%s/sad/88888888888888     效果：查找文件中所有sad，替换为88888888888888/you       效果：查找文件中出现的you，并定位到第一个找到的地方，按n可以定位到下一个匹配位置（按N定位到上一个）</p><p><strong>*</strong>拷贝文件</p><p>不写名字还是原来的名字</p><p>cp  somefile.1   /home/hadoop/  </p><p>***查看文件内容cat    somefile    一次性将文件内容全部输出（控制台）more   somefile     可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）less   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字，敲/，然后输入关键字即可（/keyword）</p><p>tail -10  install.log   查看文件尾部的10行 查看日志文件很有用</p><p>下面两个命令查看实时最新效果：</p><p>tail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件tail -F install.log    大F按照文件名来跟踪</p><p>head -10  install.log   查看文件头部的10行 用来</p><p>3、文件权限的操作</p><p><em>**</em>linux文件权限的描述格式解读drwxr-xr-x      （也可以用二进制表示  111 101 101  –&gt;  755）</p><p>d：标识节点类型（d：文件夹   -：文件  l:链接）r：可读   w：可写    x：可执行 第一组rwx：  表示这个文件的拥有者对它的权限：可读可写可执行第二组r-x：  表示这个文件的所属组对它的权限：可读，不可写，可执行第三组r-x：  表示这个文件的其他用户（相对于上面两类用户）对它的权限：可读，不可写，可执行</p><p><em>**</em>修改文件权限chmod g-rw haha.dat    表示将haha.dat对所属组的rw权限取消chmod o-rw haha.dat     表示将haha.dat对其他人的rw权限取消chmod u+x haha.dat      表示将haha.dat对所属用户的权限增加x</p><p>也可以用数字的方式来修改权限chmod 664 haha.dat<br>就会修改成   rw-rw-r–</p><p>如果要将一个文件夹的所有内容权限统一修改，则可以-R参数chmod -R 770 aaa/chown angela:angela aaa/    &lt;只有root能执行&gt;</p><p>目录没有执行权限的时候普通用户不能进入文件只有读写权限的时候普通用户是可以删除的(删除文件不是修改它,是操作父及目录),只要父级目录有执行和修改的权限</p><p>4、基本的用户管理</p><p><strong>*</strong>添加用户useradd  angela要修改密码才能登陆 passwd angela  按提示输入密码即可</p><p>**为用户配置sudo权限用root编辑 vi /etc/sudoers在文件的如下位置，为hadoop添加一行即可root    ALL=(ALL)       ALL<br>hadoop  ALL=(ALL)       ALL</p><p>然后，hadoop用户就可以用sudo来执行系统级别的指令[hadoop@shizhan ~]$ sudo useradd huangxiaoming</p><p>5、系统管理操作<strong>*</strong>查看主机名hostname<em>**</em>修改主机名(重启后无效)hostname hadoop</p><p><strong>*</strong>修改主机名(重启后永久生效)vi /ect/sysconfig/network<em>**</em>修改IP(重启后无效)ifconfig eth0 192.168.12.22</p><p><em>**</em>修改IP(重启后永久生效)vi /etc/sysconfig/network-scripts/ifcfg-eth0</p><p>mount <em>**</em>  挂载外部存储设备到文件系统中mkdir   /mnt/cdrom      创建一个目录，用来挂载mount -t iso9660 -o ro /dev/cdrom /mnt/cdrom/     将设备/dev/cdrom挂载到 挂载点 ：  /mnt/cdrom中</p><p><strong>*</strong>umountumount /mnt/cdrom</p><p><strong>*</strong>统计文件或文件夹的大小du -sh  /mnt/cdrom/Packagesdf -h    查看磁盘的空间<strong><strong>关机halt</strong></strong>重启reboot</p><p><strong>**</strong>配置主机之间的免密ssh登陆</p><p>ssh协议</p><p>远程登录的安全外壳协议</p><p>有两种身份验证机制：</p><p>1.用户名+密码验证</p><p>2.密钥验证</p><p>ssh 192.168.88.137 登陆该ip主机 需要输入密码</p><p>exit退出</p><p>scp 远程复制 hell.c 本机文件 <a href="mailto:root@192.168.88.137" target="_blank" rel="noopener">root@192.168.88.137</a> 远程主机名和用户名 ：后面跟要复制到的远程主机目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mini1 ~]# scp hell.c root@192.168.88.137:/home</span><br><span class="line">hell.c                                        100%   58    58.4KB/s   00:00</span><br></pre></td></tr></table></figure><p>免密码登陆，就用密钥</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fr1ketd5pnj20vm0ft3z2.jpg" alt=""></p><p>假如 A  要登陆  B在A上操作：首先生成密钥对ssh-keygen   (提示时，一直按回车即可)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zea3hsm44dztx9vqa11Z ~]# ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">/root/.ssh/id_rsa already exists.</span><br><span class="line">Overwrite (y/n)? y</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">5f:14:1c:2f:9b:6c:05:2e:31:d4:17:a4:19:d0:18:d3 root@iZ2zea3hsm44dztx9vqa11Z</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|         .BO=oo. |</span><br><span class="line">|          .=EB.  |</span><br><span class="line">|          . *.o  |</span><br><span class="line">|           + =   |</span><br><span class="line">|        S   *    |</span><br><span class="line">|         . o     |</span><br><span class="line">|          .      |</span><br><span class="line">|                 |</span><br><span class="line">|                 |</span><br><span class="line">+-----------------+</span><br><span class="line">[root@iZ2zea3hsm44dztx9vqa11Z ~]#</span><br></pre></td></tr></table></figure><p>再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中ssh-copy-id   B</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zea3hsm44dztx9vqa11Z ~]# ssh-copy-id 58.87.97.204</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">root@58.87.97.204's password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   "ssh '58.87.97.204'"</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p>然后就可以免密登陆了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2zea3hsm44dztx9vqa11Z ~]# ssh 58.87.97.204</span><br><span class="line">Last failed login: Sun May  6 13:54:38 CST 2018 from 59.45.175.29 on ssh:notty</span><br><span class="line">There were 178 failed login attempts since the last successful login.</span><br><span class="line">Last login: Sun May  6 13:48:51 2018 from 47.93.36.67</span><br><span class="line">[root@VM_0_14_centos ~]#</span><br></pre></td></tr></table></figure><p>同理，配置B登陆A时一样的步骤再走一遍，在B上生成密钥，拷贝个A。</p><p>而在登陆阿里云主机时遇到以下问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">27:7a:b8:fb:97:04:6f:06:7a:3a:20:3c:52:40:a8:21 root@VM_0_14_centos</span><br><span class="line">The key&apos;s randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|o.               |</span><br><span class="line">|E                |</span><br><span class="line">|oo               |</span><br><span class="line">|. .     o        |</span><br><span class="line">| o     .S+.      |</span><br><span class="line">|. + . .o.o=      |</span><br><span class="line">| . o .oo.+ .     |</span><br><span class="line">|      oo  o      |</span><br><span class="line">|      o+..       |</span><br><span class="line">+-----------------+</span><br><span class="line"></span><br><span class="line">[root@VM_0_14_centos ~]# ssh-copy-id 47.93.36.67</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</span><br></pre></td></tr></table></figure><p>需要配置阿里云上的文件：</p><p>vi /etc/ssh/sshd_config  </p><p>下面这项为yes</p><p>PasswordAuthentication yes</p><p>PermitRootLogin也设为yes</p><p>设置文件和目录权限：</p><p>root的.ssh下</p><p>设置authorized_keys权限$ chmod 600 authorized_keys </p><p>root下</p><p>设置.ssh目录权限$ chmod 700 -R .ssh</p><p>如果其他用户，要在其他用户文件夹下设置</p><p>重启sshd服务</p><p>systemctl restart sshd.service</p><h6 id="ECS服务器ssh登录提示“Permission-denied-please-try-again”"><a href="#ECS服务器ssh登录提示“Permission-denied-please-try-again”" class="headerlink" title="ECS服务器ssh登录提示“Permission denied, please try again”"></a>ECS服务器ssh登录提示“Permission denied, please try again”</h6><p>​               <strong>不用怀疑，一般情况下，就是你密码输入错误了。</strong></p><ul><li><strong>解决：</strong></li></ul><p>​               <strong>找到正确的密码输入。</strong></p><p>当然，也有可能是下面的情况：</p><p>在Windows中使用ssh客户端连接，提示“ssh服务器拒绝了密码，请再试一次”，或者在linux中通过ssh连接，提示“Permission denied, please try again”时，可尝试使用以下方式修复：</p><p>1、在ssh提示上述信息时，可以在管理控制台通过Web VNC连接管理终端连接服务器进行测试，如果使用root和密码可以登录，说明帐号与密码是正确的。</p><p>2、检查/etc/ssh/sshd_config中的PermitRootLogin，该参数指定是否允许root用户通过ssh远程连接服务器。PermitRootLogin设置yes时表示允许root通过ssh连接服务器，为no时为不允许。</p><p><img src="http://img01.taobaocdn.com/tfscom/TB1cCUEHXXXXXcKXFXXXXXXXXXX.jpg" alt="QQ糿20150212142405.jpg"></p><p>一般ssh密码错误，同时Web VNC可以登录的问题，此参数的设置引起问题的可能性比较大。</p><p>具体调整：</p><p>(1) 使用命令vi  /etc/ssh/sshd_config；</p><p>注意:vi后面有空格，再加上后面的文件名</p><p>(2) 按”/“键后进入搜索模式，输入PermitRootLogin后回车(注意是有大写的)，可以查找到该参数；</p><p>(3) 按”a”或”i”键可以进入编辑，将其修改为yes，即为允许root通过ssh进行连接；</p><p>(4) 按”Esc”键可以退出编辑，最后输入” :wq！”(包含冒号)，回车进行保存退出。(如果不保存，可以使用” :q！”回车) </p><p>(5) 然后重启sshd服务生效即可，重启命令可以使用:service sshd restart 。</p><p><strong>**</strong>后台服务管理service network status   查看指定服务的状态service network stop     停止指定服务service network start    启动指定服务service network restart  重启指定服务service –status-all  查看系统中所有的后台服务</p><p>设置后台服务的自启配置chkconfig   查看所有服务器自启配置chkconfig iptables off   关掉指定服务的自动启动chkconfig iptables on   开启指定服务的自动启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_14_centos ~]# chkconfig  </span><br><span class="line"></span><br><span class="line">Note: This output shows SysV services only and does not include native</span><br><span class="line">      systemd services. SysV configuration data might be overridden by native</span><br><span class="line">      systemd configuration.</span><br><span class="line"></span><br><span class="line">      If you want to list systemd services use &apos;systemctl list-unit-files&apos;.</span><br><span class="line">      To see services enabled on particular target use</span><br><span class="line">      &apos;systemctl list-dependencies [target]&apos;.</span><br><span class="line"></span><br><span class="line">YDService       0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br><span class="line">netconsole      0:off   1:off   2:off   3:off   4:off   5:off   6:off</span><br><span class="line">network         0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br></pre></td></tr></table></figure><p>***系统启动级别管理vi  /etc/inittab</p><p>Default runlevel. The runlevels used are:</p><p>0 - halt (Do NOT set initdefault to this) # 关机</p><p>1 - Single user mode</p><p>2 - Multiuser, without NFS (The same as 3, if you do not have networking)</p><p>3 - Full multiuser mode # 全功能多用户模式</p><p>4 - unused</p><p>5 - X11 # 图形化界面</p><p>6 - reboot (Do NOT set initdefault to this) #重启</p><p>id:3:initdefault:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux中的文件夹&quot;&gt;&lt;a href=&quot;#linux中的文件夹&quot; class=&quot;headerlink&quot; title=&quot;linux中的文件夹&quot;&gt;&lt;/a&gt;linux中的文件夹&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;boot 存放用于系统引导时使用的各种文件&lt;/li&gt;
&lt;/ul&gt;
      
    
    </summary>
    
    
      <category term="大数据" scheme="http://yoursite.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>R语言再基础</title>
    <link href="http://yoursite.com/2018/05/05/R%E8%AF%AD%E8%A8%80%E5%86%8D%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2018/05/05/R语言再基础/</id>
    <published>2018-05-05T07:59:49.000Z</published>
    <updated>2018-05-05T15:42:55.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="R语言基础数据结构"><a href="#R语言基础数据结构" class="headerlink" title="R语言基础数据结构"></a>R语言基础数据结构</h1><p>基本数据类型：向量、数组、列表</p><p>向量是最基本的，被称为原子型</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fr0j5se574j20hc09p403.jpg" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向量</span></span><br><span class="line"></span><br><span class="line">var1 &lt;- c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>) <span class="comment"># 字符型</span></span><br><span class="line">var2 &lt;- c(<span class="number">21</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">32</span>) <span class="comment"># 数值型</span></span><br><span class="line">var3 &lt;- c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>) <span class="comment"># 逻辑型</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 几种快速生成目标向量的快捷方式</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>:<span class="number">10</span> <span class="comment"># 连续整数序列</span></span><br><span class="line"></span><br><span class="line">rep(<span class="number">1</span>:<span class="number">3</span>, each = <span class="number">4</span>) <span class="comment"># 按照单个序列每一个元素重复指定次数</span></span><br><span class="line">rep(<span class="number">1</span>:<span class="number">3</span>, times = <span class="number">4</span>) <span class="comment"># 按照单个序列每一个元素重复指定次数</span></span><br><span class="line"></span><br><span class="line">seq(from = <span class="number">1</span>, to = <span class="number">100</span>, by = <span class="number">5</span>) <span class="comment"># 起点-终点-间隔</span></span><br><span class="line">seq(from = <span class="number">1</span>, by = <span class="number">5</span>, length = <span class="number">20</span>) <span class="comment"># 起点-间隔-长度</span></span><br><span class="line">seq(to = <span class="number">100</span>, by = <span class="number">5</span>, length = <span class="number">20</span>) <span class="comment"># 终点-间隔-长度</span></span><br><span class="line"></span><br><span class="line">rev(<span class="number">1</span>:<span class="number">5</span>) <span class="comment">#次序颠倒</span></span><br><span class="line"></span><br><span class="line">letters <span class="comment"># 内置小写字母字符串对象</span></span><br><span class="line">LETTERS <span class="comment"># 内置大写字母字符串对象</span></span><br><span class="line"></span><br><span class="line">sample(<span class="number">1</span>:<span class="number">10</span>, size = <span class="number">10</span>, replace = <span class="literal">FALSE</span>) <span class="comment"># 可放回抽样</span></span><br><span class="line">sample(<span class="number">1</span>:<span class="number">10</span>, size = <span class="number">10</span>, replace = <span class="literal">TRUE</span>) <span class="comment"># 不放回抽样</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在R语言中快速生成百分比</span></span><br><span class="line"></span><br><span class="line">sprintf(<span class="string">"%.2f%%"</span>, <span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line">sca::percent(seq(<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0.01</span>), d=<span class="number">2</span>, sep=<span class="string">""</span>)</span><br><span class="line">scales::percent(runif(<span class="number">10</span>, <span class="number">0</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># byrow 是否按行排列</span></span><br><span class="line">martx1 &lt;- matrix(<span class="number">1</span>:<span class="number">40</span>, nrow = <span class="number">8</span>, byrow = <span class="literal">FALSE</span>);martx1</span><br><span class="line">martx2 &lt;- matrix(<span class="number">1</span>:<span class="number">40</span>, nrow = <span class="number">8</span>, byrow = <span class="literal">TRUE</span>);martx2</span><br><span class="line">martx3 &lt;- matrix(<span class="number">1</span>:<span class="number">40</span>, ncol = <span class="number">8</span>, byrow = <span class="literal">FALSE</span>);martx3</span><br><span class="line">martx4 &lt;- matrix(<span class="number">1</span>:<span class="number">40</span>, ncol = <span class="number">8</span>, byrow = <span class="literal">TRUE</span>);martx4</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#dim参数长度为2时，输出结果即为矩阵（矩阵即时数字的二维呈现）</span></span><br><span class="line">array(<span class="number">1</span>:<span class="number">100</span>, dim = c(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># dim参数是一个数字向量，分别为行-列-第三维度</span></span><br><span class="line">array(<span class="number">1</span>:<span class="number">100</span>, dim = c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&gt; array(1:100, dim = c(4, 5, 5))</span><br><span class="line">, , 1</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]    1    5    9   13   17</span><br><span class="line">[2,]    2    6   10   14   18</span><br><span class="line">[3,]    3    7   11   15   19</span><br><span class="line">[4,]    4    8   12   16   20</span><br><span class="line"></span><br><span class="line">, , 2</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]   21   25   29   33   37</span><br><span class="line">[2,]   22   26   30   34   38</span><br><span class="line">[3,]   23   27   31   35   39</span><br><span class="line">[4,]   24   28   32   36   40</span><br><span class="line"></span><br><span class="line">, , 3</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]   41   45   49   53   57</span><br><span class="line">[2,]   42   46   50   54   58</span><br><span class="line">[3,]   43   47   51   55   59</span><br><span class="line">[4,]   44   48   52   56   60</span><br><span class="line"></span><br><span class="line">, , 4</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]   61   65   69   73   77</span><br><span class="line">[2,]   62   66   70   74   78</span><br><span class="line">[3,]   63   67   71   75   79</span><br><span class="line">[4,]   64   68   72   76   80</span><br><span class="line"></span><br><span class="line">, , 5</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]   81   85   89   93   97</span><br><span class="line">[2,]   82   86   90   94   98</span><br><span class="line">[3,]   83   87   91   95   99</span><br><span class="line">[4,]   84   88   92   96  100</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 数据框</span><br><span class="line">mydata1 &lt;- data.frame(</span><br><span class="line">  name1 = c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;),</span><br><span class="line">  name2 = c(21, 34, 56, 54, 32),</span><br><span class="line">  name3 = c(TRUE, FALSE, TRUE, FALSE, FALSE)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; mydata1</span><br><span class="line">  name1 name2 name3</span><br><span class="line">1     A    21  TRUE</span><br><span class="line">2     B    34 FALSE</span><br><span class="line">3     C    56  TRUE</span><br><span class="line">4     D    54 FALSE</span><br><span class="line">5     E    32 FALSE</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表</span></span><br><span class="line"></span><br><span class="line">mylist &lt;- list(</span><br><span class="line">  object1 = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">  object2 = matrix(<span class="number">1</span>:<span class="number">20</span>, nrow = <span class="number">4</span>, byrow = <span class="literal">FALSE</span>),</span><br><span class="line">  object3 = array(<span class="number">1</span>:<span class="number">27</span>, dim = c(<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>)),</span><br><span class="line">  object4 = data.frame(</span><br><span class="line">    name1 = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">    name2 = c(<span class="number">21</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">32</span>),</span><br><span class="line">    name3 = c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">mylist</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&gt; mylist</span><br><span class="line">$object1</span><br><span class="line">[1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot;</span><br><span class="line"></span><br><span class="line">$object2</span><br><span class="line">     [,1] [,2] [,3] [,4] [,5]</span><br><span class="line">[1,]    1    5    9   13   17</span><br><span class="line">[2,]    2    6   10   14   18</span><br><span class="line">[3,]    3    7   11   15   19</span><br><span class="line">[4,]    4    8   12   16   20</span><br><span class="line"></span><br><span class="line">$object3</span><br><span class="line">, , 1</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3]</span><br><span class="line">[1,]    1    4    7</span><br><span class="line">[2,]    2    5    8</span><br><span class="line">[3,]    3    6    9</span><br><span class="line"></span><br><span class="line">, , 2</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3]</span><br><span class="line">[1,]   10   13   16</span><br><span class="line">[2,]   11   14   17</span><br><span class="line">[3,]   12   15   18</span><br><span class="line"></span><br><span class="line">, , 3</span><br><span class="line"></span><br><span class="line">     [,1] [,2] [,3]</span><br><span class="line">[1,]   19   22   25</span><br><span class="line">[2,]   20   23   26</span><br><span class="line">[3,]   21   24   27</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$object4</span><br><span class="line">  name1 name2 name3</span><br><span class="line">1     A    21  TRUE</span><br><span class="line">2     B    34 FALSE</span><br><span class="line">3     C    56  TRUE</span><br><span class="line">4     D    54 FALSE</span><br><span class="line">5     E    32 FALSE</span><br></pre></td></tr></table></figure><h1 id="变量格式转换与因子变量"><a href="#变量格式转换与因子变量" class="headerlink" title="变量格式转换与因子变量"></a>变量格式转换与因子变量</h1><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fr0kpfvabqj20ne0bmgpw.jpg" alt=""></p><p>因子变量</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fr0kun9g6ej20n40bdtav.jpg" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var1 &lt;- c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>)</span><br><span class="line">&gt; typeof(var1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"character"</span></span><br><span class="line">&gt; mode(var1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"character"</span></span><br><span class="line">&gt; class(var1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"character"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; var2 &lt;- c(<span class="number">21</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">32</span>)</span><br><span class="line">&gt; typeof(var2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"double"</span></span><br><span class="line">&gt; mode(var2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(var2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; var21 &lt;- c(<span class="number">21.5</span>, <span class="number">34.6</span>, <span class="number">56.3</span>, <span class="number">54.9</span>, <span class="number">3.2</span>)</span><br><span class="line">&gt; typeof(var21)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"double"</span></span><br><span class="line">&gt; mode(var21)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(var21)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; var22 &lt;- c(<span class="number">21L</span>, <span class="number">34L</span>, <span class="number">56L</span>, <span class="number">54L</span>, <span class="number">32L</span>)</span><br><span class="line">&gt; typeof(var22)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br><span class="line">&gt; mode(var22)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(var22)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; martx1 &lt;- matrix(<span class="number">1</span>:<span class="number">40</span>, nrow = <span class="number">8</span>, byrow = <span class="literal">FALSE</span>)</span><br><span class="line">&gt; typeof(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br><span class="line">&gt; mode(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"matrix"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用is._函数查看独享符合的类型</span></span><br><span class="line">&gt; is.integer(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; is.numeric(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; is.matrix(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; is.array(martx1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转为向量</span></span><br><span class="line">&gt; as.numeric(martx1)</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">21</span> <span class="number">22</span> <span class="number">23</span> <span class="number">24</span> <span class="number">25</span> <span class="number">26</span> <span class="number">27</span></span><br><span class="line">[<span class="number">28</span>] <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">31</span> <span class="number">32</span> <span class="number">33</span> <span class="number">34</span> <span class="number">35</span> <span class="number">36</span> <span class="number">37</span> <span class="number">38</span> <span class="number">39</span> <span class="number">40</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; mydata1 &lt;- data.frame(</span><br><span class="line">+     name1 = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">+     name2 = c(<span class="number">21</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">32</span>),</span><br><span class="line">+     name3 = c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>)</span><br><span class="line">+ )</span><br><span class="line">&gt; typeof(mydata1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"list"</span></span><br><span class="line">&gt; mode(mydata1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"list"</span></span><br><span class="line">&gt; class(mydata1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"data.frame"</span></span><br><span class="line">&gt; is.list(mydata1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br><span class="line">&gt; is.data.frame(mydata1)</span><br><span class="line">[<span class="number">1</span>] <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; myarray1 &lt;- array(<span class="number">1</span>:<span class="number">100</span>, dim=c(<span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line">&gt; typeof(myarray1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br><span class="line">&gt; mode(myarray1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(myarray1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"array"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; mylist &lt;- list(</span><br><span class="line">+     object1 = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">+     object2 = matrix(<span class="number">1</span>:<span class="number">20</span>, nrow = <span class="number">4</span>, byrow = <span class="literal">FALSE</span>),</span><br><span class="line">+     object3 = array(<span class="number">1</span>:<span class="number">27</span>, dim = c(<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>)),</span><br><span class="line">+     object4 = data.frame(</span><br><span class="line">+         name1 = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">+         name2 = c(<span class="number">21</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">54</span>, <span class="number">32</span>),</span><br><span class="line">+         name3 = c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>)</span><br><span class="line">+     )</span><br><span class="line">+ )</span><br><span class="line">&gt; typeof(mylist)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"list"</span></span><br><span class="line">&gt; mode(mylist)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"list"</span></span><br><span class="line">&gt; class(mylist)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"list"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; fact1 &lt;- factor(</span><br><span class="line">+     x = rep(LETTERS[<span class="number">1</span>:<span class="number">5</span>], each = <span class="number">3</span>),</span><br><span class="line">+     levels = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">+     ordered = <span class="literal">FALSE</span></span><br><span class="line">+ )</span><br><span class="line">&gt; fact1</span><br><span class="line"> [<span class="number">1</span>] A A A B B B C C C D D D E E E</span><br><span class="line">Levels: A B C D E</span><br><span class="line">&gt; str(fact1)</span><br><span class="line"> Factor w/ <span class="number">5</span> levels <span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,..: <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="keyword">...</span></span><br><span class="line">&gt; typeof(fact1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br><span class="line">&gt; mode(fact1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(fact1)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"factor"</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; fact1 &lt;- factor(</span><br><span class="line">+     x = rep(LETTERS[<span class="number">1</span>:<span class="number">5</span>], each = <span class="number">3</span>),</span><br><span class="line">+     levels = c(<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>),</span><br><span class="line">+     ordered = <span class="literal">TRUE</span></span><br><span class="line">+ )</span><br><span class="line">&gt; fact1</span><br><span class="line"> [<span class="number">1</span>] A A A B B B C C C D D D E E E</span><br><span class="line">Levels: A &lt; B &lt; C &lt; D &lt; E</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; fact2 &lt;- factor(</span><br><span class="line">+     x = rep(<span class="number">1</span>:<span class="number">5</span>, each = <span class="number">3</span>),</span><br><span class="line">+     levels = <span class="number">1</span>:<span class="number">5</span>,</span><br><span class="line">+     labels = c(<span class="string">"婴儿"</span>, <span class="string">"儿童"</span>, <span class="string">"少年"</span>, <span class="string">"青年"</span>, <span class="string">"老年"</span>),</span><br><span class="line">+     ordered = <span class="literal">TRUE</span></span><br><span class="line">+ )</span><br><span class="line">&gt; fact2</span><br><span class="line"> [<span class="number">1</span>] 婴儿 婴儿 婴儿 儿童 儿童 儿童 少年 少年 少年 青年 青年 青年 老年 老年 老年</span><br><span class="line">Levels: 婴儿 &lt; 儿童 &lt; 少年 &lt; 青年 &lt; 老年</span><br><span class="line">&gt; </span><br><span class="line">&gt; str(fact2)</span><br><span class="line"> Ord.factor w/ <span class="number">5</span> levels <span class="string">"婴儿"</span>&lt;<span class="string">"儿童"</span>&lt;..: <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="keyword">...</span></span><br><span class="line">&gt; typeof(fact2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"integer"</span></span><br><span class="line">&gt; mode(fact2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"numeric"</span></span><br><span class="line">&gt; class(fact2)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"ordered"</span> <span class="string">"factor"</span></span><br></pre></td></tr></table></figure><p>自定义区间分箱生成因子</p><p>使用自定义区间分箱</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; fact3 &lt;- cut(</span><br><span class="line">+     x = sample(<span class="number">1</span>:<span class="number">100</span>, size = <span class="number">100</span>, replace = <span class="literal">TRUE</span>),</span><br><span class="line">+     breaks = c(<span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">100</span>),</span><br><span class="line">+     labels = c(<span class="string">"0~20"</span>, <span class="string">"20~40"</span>, <span class="string">"40~60"</span>, <span class="string">"60~80"</span>, <span class="string">"80~100"</span>),</span><br><span class="line">+     include.lowest = <span class="literal">TRUE</span>, <span class="comment"># 默认是左开右闭的 这样包括最小值，第一个区间是左闭右闭的，其他仍是左开右闭</span></span><br><span class="line">+     ordered = <span class="literal">TRUE</span></span><br><span class="line">+ )</span><br><span class="line">&gt; fact3</span><br><span class="line">  [<span class="number">1</span>] <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>   <span class="number">40</span>~<span class="number">60</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">40</span>~<span class="number">60</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span>  <span class="number">60</span>~<span class="number">80</span> </span><br><span class="line"> [<span class="number">12</span>] <span class="number">40</span>~<span class="number">60</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">60</span>~<span class="number">80</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span>  <span class="number">60</span>~<span class="number">80</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">60</span>~<span class="number">80</span> </span><br><span class="line"> [<span class="number">23</span>] <span class="number">40</span>~<span class="number">60</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">80</span>~<span class="number">100</span> <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">60</span>~<span class="number">80</span>  <span class="number">60</span>~<span class="number">80</span>  <span class="number">60</span>~<span class="number">80</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">80</span>~<span class="number">100</span> <span class="number">80</span>~<span class="number">100</span></span><br><span class="line"> [<span class="number">34</span>] <span class="number">40</span>~<span class="number">60</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">60</span>~<span class="number">80</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>   <span class="number">60</span>~<span class="number">80</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span> </span><br><span class="line"> [<span class="number">45</span>] <span class="number">80</span>~<span class="number">100</span> <span class="number">0</span>~<span class="number">20</span>   <span class="number">60</span>~<span class="number">80</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">80</span>~<span class="number">100</span> <span class="number">40</span>~<span class="number">60</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>  </span><br><span class="line"> [<span class="number">56</span>] <span class="number">60</span>~<span class="number">80</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">80</span>~<span class="number">100</span> <span class="number">40</span>~<span class="number">60</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>  </span><br><span class="line"> [<span class="number">67</span>] <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>   <span class="number">20</span>~<span class="number">40</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">60</span>~<span class="number">80</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>  </span><br><span class="line"> [<span class="number">78</span>] <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>   <span class="number">0</span>~<span class="number">20</span>   <span class="number">40</span>~<span class="number">60</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">60</span>~<span class="number">80</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">80</span>~<span class="number">100</span> <span class="number">40</span>~<span class="number">60</span> </span><br><span class="line"> [<span class="number">89</span>] <span class="number">60</span>~<span class="number">80</span>  <span class="number">20</span>~<span class="number">40</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">60</span>~<span class="number">80</span>  <span class="number">80</span>~<span class="number">100</span> <span class="number">20</span>~<span class="number">40</span>  <span class="number">40</span>~<span class="number">60</span>  <span class="number">60</span>~<span class="number">80</span>  <span class="number">0</span>~<span class="number">20</span>   <span class="number">60</span>~<span class="number">80</span>  <span class="number">40</span>~<span class="number">60</span> </span><br><span class="line">[<span class="number">100</span>] <span class="number">40</span>~<span class="number">60</span> </span><br><span class="line">Levels: <span class="number">0</span>~<span class="number">20</span> &lt; <span class="number">20</span>~<span class="number">40</span> &lt; <span class="number">40</span>~<span class="number">60</span> &lt; <span class="number">60</span>~<span class="number">80</span> &lt; <span class="number">80</span>~<span class="number">100</span></span><br></pre></td></tr></table></figure><p>使用分位数作为分箱区间</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; value1 = sample(<span class="number">1</span>:<span class="number">100</span>, size=<span class="number">100</span>, replace = <span class="literal">TRUE</span>)</span><br><span class="line">&gt; </span><br><span class="line">&gt; qa &lt;- quantile(</span><br><span class="line">+     x = value1,</span><br><span class="line">+     probs = seq(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0.2</span>)</span><br><span class="line">+ )</span><br><span class="line">&gt; qa</span><br><span class="line">   <span class="number">0</span>%   <span class="number">20</span>%   <span class="number">40</span>%   <span class="number">60</span>%   <span class="number">80</span>%  <span class="number">100</span>% </span><br><span class="line">  <span class="number">1.0</span>  <span class="number">13.6</span>  <span class="number">35.6</span>  <span class="number">59.6</span>  <span class="number">78.2</span> <span class="number">100.0</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; fact3 &lt;- cut(</span><br><span class="line">+     x = value1,</span><br><span class="line">+     breaks = c(<span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">100</span>),</span><br><span class="line">+     labels = c(<span class="string">"0~20%"</span>, <span class="string">"20~40%"</span>, <span class="string">"40~60%"</span>, <span class="string">"60~80%"</span>, <span class="string">"80~100%"</span>),</span><br><span class="line">+     include.lowest = <span class="literal">TRUE</span>,</span><br><span class="line">+     ordered = <span class="literal">TRUE</span></span><br><span class="line">+ )</span><br><span class="line">&gt; fact3</span><br><span class="line">  [<span class="number">1</span>] <span class="number">40</span>~<span class="number">60</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">60</span>~<span class="number">80</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">60</span>~<span class="number">80</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">40</span>~<span class="number">60</span>% </span><br><span class="line"> [<span class="number">11</span>] <span class="number">60</span>~<span class="number">80</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">80</span>~<span class="number">100</span>% <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">80</span>~<span class="number">100</span>% <span class="number">40</span>~<span class="number">60</span>%  <span class="number">40</span>~<span class="number">60</span>% </span><br><span class="line"> [<span class="number">21</span>] <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%   <span class="number">40</span>~<span class="number">60</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">60</span>~<span class="number">80</span>% </span><br><span class="line"> [<span class="number">31</span>] <span class="number">0</span>~<span class="number">20</span>%   <span class="number">80</span>~<span class="number">100</span>% <span class="number">80</span>~<span class="number">100</span>% <span class="number">20</span>~<span class="number">40</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">0</span>~<span class="number">20</span>%   <span class="number">80</span>~<span class="number">100</span>%</span><br><span class="line"> [<span class="number">41</span>] <span class="number">20</span>~<span class="number">40</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">20</span>~<span class="number">40</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%  </span><br><span class="line"> [<span class="number">51</span>] <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">40</span>~<span class="number">60</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">60</span>~<span class="number">80</span>% </span><br><span class="line"> [<span class="number">61</span>] <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%   <span class="number">40</span>~<span class="number">60</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%  </span><br><span class="line"> [<span class="number">71</span>] <span class="number">40</span>~<span class="number">60</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">80</span>~<span class="number">100</span>% <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">80</span>~<span class="number">100</span>% <span class="number">80</span>~<span class="number">100</span>% <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">20</span>~<span class="number">40</span>% </span><br><span class="line"> [<span class="number">81</span>] <span class="number">20</span>~<span class="number">40</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">80</span>~<span class="number">100</span>% <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">20</span>~<span class="number">40</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">40</span>~<span class="number">60</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%  </span><br><span class="line"> [<span class="number">91</span>] <span class="number">0</span>~<span class="number">20</span>%   <span class="number">80</span>~<span class="number">100</span>% <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">0</span>~<span class="number">20</span>%   <span class="number">0</span>~<span class="number">20</span>%   <span class="number">60</span>~<span class="number">80</span>%  <span class="number">60</span>~<span class="number">80</span>%  <span class="number">60</span>~<span class="number">80</span>% </span><br><span class="line">Levels: <span class="number">0</span>~<span class="number">20</span>% &lt; <span class="number">20</span>~<span class="number">40</span>% &lt; <span class="number">40</span>~<span class="number">60</span>% &lt; <span class="number">60</span>~<span class="number">80</span>% &lt; <span class="number">80</span>~<span class="number">100</span>%</span><br></pre></td></tr></table></figure><h1 id="数据索引与切片、聚合"><a href="#数据索引与切片、聚合" class="headerlink" title="数据索引与切片、聚合"></a>数据索引与切片、聚合</h1><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fr0quguzfuj20pz0bw410.jpg" alt=""></p><p>索引向量</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; variable1 &lt;- <span class="number">1</span>:<span class="number">100</span></span><br><span class="line">&gt; <span class="comment"># 索引前10个值</span></span><br><span class="line">&gt; variable1[<span class="number">1</span>:<span class="number">10</span>]</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line">&gt; <span class="comment"># 索引第4、6、8、9个值</span></span><br><span class="line">&gt; variable1[c(<span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>)]</span><br><span class="line">[<span class="number">1</span>] <span class="number">4</span> <span class="number">6</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line">&gt; <span class="comment"># 布尔索引</span></span><br><span class="line">&gt; variable1[sample(x = c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>), size = <span class="number">100</span>, replace = <span class="literal">TRUE</span>)]</span><br><span class="line"> [<span class="number">1</span>]  <span class="number">4</span>  <span class="number">8</span> <span class="number">10</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span> <span class="number">20</span> <span class="number">22</span> <span class="number">24</span> <span class="number">25</span> <span class="number">28</span> <span class="number">29</span> <span class="number">30</span> <span class="number">33</span> <span class="number">35</span> <span class="number">39</span> <span class="number">43</span> <span class="number">44</span> <span class="number">45</span> <span class="number">51</span> <span class="number">52</span> <span class="number">53</span> <span class="number">55</span></span><br><span class="line">[<span class="number">28</span>] <span class="number">59</span> <span class="number">60</span> <span class="number">62</span> <span class="number">63</span> <span class="number">69</span> <span class="number">70</span> <span class="number">73</span> <span class="number">75</span> <span class="number">76</span> <span class="number">77</span> <span class="number">79</span> <span class="number">81</span> <span class="number">83</span> <span class="number">91</span> <span class="number">92</span> <span class="number">93</span> <span class="number">98</span> <span class="number">99</span></span><br><span class="line">&gt; <span class="comment"># 条件索引（偶数）</span></span><br><span class="line">&gt; variable1[variable1%%<span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"> [<span class="number">1</span>]   <span class="number">2</span>   <span class="number">4</span>   <span class="number">6</span>   <span class="number">8</span>  <span class="number">10</span>  <span class="number">12</span>  <span class="number">14</span>  <span class="number">16</span>  <span class="number">18</span>  <span class="number">20</span>  <span class="number">22</span>  <span class="number">24</span>  <span class="number">26</span>  <span class="number">28</span>  <span class="number">30</span>  <span class="number">32</span>  <span class="number">34</span>  <span class="number">36</span>  <span class="number">38</span>  <span class="number">40</span></span><br><span class="line">[<span class="number">21</span>]  <span class="number">42</span>  <span class="number">44</span>  <span class="number">46</span>  <span class="number">48</span>  <span class="number">50</span>  <span class="number">52</span>  <span class="number">54</span>  <span class="number">56</span>  <span class="number">58</span>  <span class="number">60</span>  <span class="number">62</span>  <span class="number">64</span>  <span class="number">66</span>  <span class="number">68</span>  <span class="number">70</span>  <span class="number">72</span>  <span class="number">74</span>  <span class="number">76</span>  <span class="number">78</span>  <span class="number">80</span></span><br><span class="line">[<span class="number">41</span>]  <span class="number">82</span>  <span class="number">84</span>  <span class="number">86</span>  <span class="number">88</span>  <span class="number">90</span>  <span class="number">92</span>  <span class="number">94</span>  <span class="number">96</span>  <span class="number">98</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>索引数据框</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入数据集数据，是个数据框</span></span><br><span class="line">&gt; mydata1 &lt;- ggplot2::mpg</span><br><span class="line">&gt; head(mydata1)</span><br><span class="line"><span class="comment"># A tibble: 6 x 11</span></span><br><span class="line">  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class  </span><br><span class="line">  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  </span><br><span class="line"><span class="number">1</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> auto(l5)   f        <span class="number">18</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">2</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> manual(m5) f        <span class="number">21</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">3</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> manual(m6) f        <span class="number">20</span>    <span class="number">31</span> p     compact</span><br><span class="line"><span class="number">4</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> auto(av)   f        <span class="number">21</span>    <span class="number">30</span> p     compact</span><br><span class="line"><span class="number">5</span> audi         a4     <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> auto(l5)   f        <span class="number">16</span>    <span class="number">26</span> p     compact</span><br><span class="line"><span class="number">6</span> audi         a4     <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> manual(m5) f        <span class="number">18</span>    <span class="number">26</span> p     compact</span><br><span class="line">&gt; str(mydata1)</span><br><span class="line">Classes ‘tbl_df’, ‘tbl’ and <span class="string">'data.frame'</span>:<span class="number">234</span> obs. of  <span class="number">11</span> variables:</span><br><span class="line"> $ manufacturer: chr  <span class="string">"audi"</span> <span class="string">"audi"</span> <span class="string">"audi"</span> <span class="string">"audi"</span> <span class="keyword">...</span></span><br><span class="line"> $ model       : chr  <span class="string">"a4"</span> <span class="string">"a4"</span> <span class="string">"a4"</span> <span class="string">"a4"</span> <span class="keyword">...</span></span><br><span class="line"> $ displ       : num  <span class="number">1.8</span> <span class="number">1.8</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2.8</span> <span class="number">2.8</span> <span class="number">3.1</span> <span class="number">1.8</span> <span class="number">1.8</span> <span class="number">2</span> <span class="keyword">...</span></span><br><span class="line"> $ year        : int  <span class="number">1999</span> <span class="number">1999</span> <span class="number">2008</span> <span class="number">2008</span> <span class="number">1999</span> <span class="number">1999</span> <span class="number">2008</span> <span class="number">1999</span> <span class="number">1999</span> <span class="number">2008</span> <span class="keyword">...</span></span><br><span class="line"> $ cyl         : int  <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="keyword">...</span></span><br><span class="line"> $ trans       : chr  <span class="string">"auto(l5)"</span> <span class="string">"manual(m5)"</span> <span class="string">"manual(m6)"</span> <span class="string">"auto(av)"</span> <span class="keyword">...</span></span><br><span class="line"> $ drv         : chr  <span class="string">"f"</span> <span class="string">"f"</span> <span class="string">"f"</span> <span class="string">"f"</span> <span class="keyword">...</span></span><br><span class="line"> $ cty         : int  <span class="number">18</span> <span class="number">21</span> <span class="number">20</span> <span class="number">21</span> <span class="number">16</span> <span class="number">18</span> <span class="number">18</span> <span class="number">18</span> <span class="number">16</span> <span class="number">20</span> <span class="keyword">...</span></span><br><span class="line"> $ hwy         : int  <span class="number">29</span> <span class="number">29</span> <span class="number">31</span> <span class="number">30</span> <span class="number">26</span> <span class="number">26</span> <span class="number">27</span> <span class="number">26</span> <span class="number">25</span> <span class="number">28</span> <span class="keyword">...</span></span><br><span class="line"> $ fl          : chr  <span class="string">"p"</span> <span class="string">"p"</span> <span class="string">"p"</span> <span class="string">"p"</span> <span class="keyword">...</span></span><br><span class="line"> $ class       : chr  <span class="string">"compact"</span> <span class="string">"compact"</span> <span class="string">"compact"</span> <span class="string">"compact"</span> <span class="keyword">...</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment"># 列索引</span></span><br><span class="line">&gt; mydata1[, c(<span class="number">2</span>, <span class="number">3</span>)]</span><br><span class="line"><span class="comment"># A tibble: 234 x 2</span></span><br><span class="line">   model      displ</span><br><span class="line">   &lt;chr&gt;      &lt;dbl&gt;</span><br><span class="line"> <span class="number">1</span> a4          <span class="number">1.80</span></span><br><span class="line"> <span class="number">2</span> a4          <span class="number">1.80</span></span><br><span class="line"> <span class="number">3</span> a4          <span class="number">2.00</span></span><br><span class="line"> <span class="number">4</span> a4          <span class="number">2.00</span></span><br><span class="line"> <span class="number">5</span> a4          <span class="number">2.80</span></span><br><span class="line"> <span class="number">6</span> a4          <span class="number">2.80</span></span><br><span class="line"> <span class="number">7</span> a4          <span class="number">3.10</span></span><br><span class="line"> <span class="number">8</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line"> <span class="number">9</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line"><span class="number">10</span> a4 quattro  <span class="number">2.00</span></span><br><span class="line"><span class="comment"># ... with 224 more rows</span></span><br><span class="line">&gt; mydata1[, c(<span class="string">"model"</span>, <span class="string">"displ"</span>)]</span><br><span class="line"><span class="comment"># A tibble: 234 x 2</span></span><br><span class="line">   model      displ</span><br><span class="line">   &lt;chr&gt;      &lt;dbl&gt;</span><br><span class="line"> <span class="number">1</span> a4          <span class="number">1.80</span></span><br><span class="line"> <span class="number">2</span> a4          <span class="number">1.80</span></span><br><span class="line"> <span class="number">3</span> a4          <span class="number">2.00</span></span><br><span class="line"> <span class="number">4</span> a4          <span class="number">2.00</span></span><br><span class="line"> <span class="number">5</span> a4          <span class="number">2.80</span></span><br><span class="line"> <span class="number">6</span> a4          <span class="number">2.80</span></span><br><span class="line"> <span class="number">7</span> a4          <span class="number">3.10</span></span><br><span class="line"> <span class="number">8</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line"> <span class="number">9</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line"><span class="number">10</span> a4 quattro  <span class="number">2.00</span></span><br><span class="line"><span class="comment"># ... with 224 more rows</span></span><br><span class="line">&gt; <span class="comment"># 行索引</span></span><br><span class="line">&gt; mydata1[<span class="number">1</span>:<span class="number">5</span>, ]</span><br><span class="line"><span class="comment"># A tibble: 5 x 11</span></span><br><span class="line">  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class  </span><br><span class="line">  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  </span><br><span class="line"><span class="number">1</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> auto(l5)   f        <span class="number">18</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">2</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> manual(m5) f        <span class="number">21</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">3</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> manual(m6) f        <span class="number">20</span>    <span class="number">31</span> p     compact</span><br><span class="line"><span class="number">4</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> auto(av)   f        <span class="number">21</span>    <span class="number">30</span> p     compact</span><br><span class="line"><span class="number">5</span> audi         a4     <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> auto(l5)   f        <span class="number">16</span>    <span class="number">26</span> p     compact</span><br><span class="line">&gt; mydata1[c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>), ]</span><br><span class="line"><span class="comment"># A tibble: 5 x 11</span></span><br><span class="line">  manufacturer model      displ  year   cyl trans      drv     cty   hwy fl    class</span><br><span class="line">  &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;</span><br><span class="line"><span class="number">1</span> audi         a4          <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> auto(l5)   f        <span class="number">18</span>    <span class="number">29</span> p     comp~</span><br><span class="line"><span class="number">2</span> audi         a4          <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> auto(av)   f        <span class="number">21</span>    <span class="number">30</span> p     comp~</span><br><span class="line"><span class="number">3</span> audi         a4          <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> manual(m5) f        <span class="number">18</span>    <span class="number">26</span> p     comp~</span><br><span class="line"><span class="number">4</span> audi         a4 quattro  <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> manual(m5) <span class="number">4</span>        <span class="number">18</span>    <span class="number">26</span> p     comp~</span><br><span class="line"><span class="number">5</span> audi         a4 quattro  <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> auto(l5)   <span class="number">4</span>        <span class="number">16</span>    <span class="number">25</span> p     comp~</span><br><span class="line">&gt; mydata1[c(<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>), c(<span class="string">"model"</span>, <span class="string">"displ"</span>)]</span><br><span class="line"><span class="comment"># A tibble: 5 x 2</span></span><br><span class="line">  model      displ</span><br><span class="line">  &lt;chr&gt;      &lt;dbl&gt;</span><br><span class="line"><span class="number">1</span> a4          <span class="number">1.80</span></span><br><span class="line"><span class="number">2</span> a4          <span class="number">2.00</span></span><br><span class="line"><span class="number">3</span> a4          <span class="number">2.80</span></span><br><span class="line"><span class="number">4</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line"><span class="number">5</span> a4 quattro  <span class="number">1.80</span></span><br><span class="line">&gt; <span class="comment"># 条件索引</span></span><br><span class="line">&gt; <span class="comment"># 或条件</span></span><br><span class="line">&gt; mydata1[mydata1$model == <span class="string">"audi"</span> | mydata1$manufacturer == <span class="string">"mercury"</span>, ]</span><br><span class="line"><span class="comment"># A tibble: 4 x 11</span></span><br><span class="line">  manufacturer model           displ  year   cyl trans drv     cty   hwy fl    class</span><br><span class="line">  &lt;chr&gt;        &lt;chr&gt;           &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;</span><br><span class="line"><span class="number">1</span> mercury      mountaineer 4wd  <span class="number">4.00</span>  <span class="number">1999</span>     <span class="number">6</span> auto~ <span class="number">4</span>        <span class="number">14</span>    <span class="number">17</span> r     suv  </span><br><span class="line"><span class="number">2</span> mercury      mountaineer 4wd  <span class="number">4.00</span>  <span class="number">2008</span>     <span class="number">6</span> auto~ <span class="number">4</span>        <span class="number">13</span>    <span class="number">19</span> r     suv  </span><br><span class="line"><span class="number">3</span> mercury      mountaineer 4wd  <span class="number">4.60</span>  <span class="number">2008</span>     <span class="number">8</span> auto~ <span class="number">4</span>        <span class="number">13</span>    <span class="number">19</span> r     suv  </span><br><span class="line"><span class="number">4</span> mercury      mountaineer 4wd  <span class="number">5.00</span>  <span class="number">1999</span>     <span class="number">8</span> auto~ <span class="number">4</span>        <span class="number">13</span>    <span class="number">17</span> r     suv  </span><br><span class="line">&gt; <span class="comment"># 且条件</span></span><br><span class="line">&gt; mydata1[mydata1$model == <span class="string">"a4"</span> &amp; mydata1$manufacturer == <span class="string">"audi"</span>, ]</span><br><span class="line"><span class="comment"># A tibble: 7 x 11</span></span><br><span class="line">  manufacturer model displ  year   cyl trans      drv     cty   hwy fl    class  </span><br><span class="line">  &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  </span><br><span class="line"><span class="number">1</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> auto(l5)   f        <span class="number">18</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">2</span> audi         a4     <span class="number">1.80</span>  <span class="number">1999</span>     <span class="number">4</span> manual(m5) f        <span class="number">21</span>    <span class="number">29</span> p     compact</span><br><span class="line"><span class="number">3</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> manual(m6) f        <span class="number">20</span>    <span class="number">31</span> p     compact</span><br><span class="line"><span class="number">4</span> audi         a4     <span class="number">2.00</span>  <span class="number">2008</span>     <span class="number">4</span> auto(av)   f        <span class="number">21</span>    <span class="number">30</span> p     compact</span><br><span class="line"><span class="number">5</span> audi         a4     <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> auto(l5)   f        <span class="number">16</span>    <span class="number">26</span> p     compact</span><br><span class="line"><span class="number">6</span> audi         a4     <span class="number">2.80</span>  <span class="number">1999</span>     <span class="number">6</span> manual(m5) f        <span class="number">18</span>    <span class="number">26</span> p     compact</span><br><span class="line"><span class="number">7</span> audi         a4     <span class="number">3.10</span>  <span class="number">2008</span>     <span class="number">6</span> auto(av)   f        <span class="number">18</span>    <span class="number">27</span> p     compact</span><br></pre></td></tr></table></figure><p>使用内置的subset函数来实现基本的切片索引</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># 使用内置的subset函数来实现基本的切片索引</span></span><br><span class="line">&gt; subset(mydata1, model ==<span class="string">"audi"</span> | manufacturer == <span class="string">"mercury"</span>, select = c(<span class="string">"model"</span>, <span class="string">"manufacturer"</span>, <span class="string">"year"</span>))</span><br><span class="line"><span class="comment"># A tibble: 4 x 3</span></span><br><span class="line">  model           manufacturer  year</span><br><span class="line">  &lt;chr&gt;           &lt;chr&gt;        &lt;int&gt;</span><br><span class="line"><span class="number">1</span> mountaineer 4wd mercury       <span class="number">1999</span></span><br><span class="line"><span class="number">2</span> mountaineer 4wd mercury       <span class="number">2008</span></span><br><span class="line"><span class="number">3</span> mountaineer 4wd mercury       <span class="number">2008</span></span><br><span class="line"><span class="number">4</span> mountaineer 4wd mercury       <span class="number">1999</span></span><br><span class="line">&gt; subset(mydata1, model == <span class="string">"a4"</span> | manufacturer == <span class="string">"audi"</span>, select = c(<span class="string">"model"</span>, <span class="string">"manufacturer"</span>, <span class="string">"year"</span>))</span><br><span class="line"><span class="comment"># A tibble: 18 x 3</span></span><br><span class="line">   model      manufacturer  year</span><br><span class="line">   &lt;chr&gt;      &lt;chr&gt;        &lt;int&gt;</span><br><span class="line"> <span class="number">1</span> a4         audi          <span class="number">1999</span></span><br><span class="line"> <span class="number">2</span> a4         audi          <span class="number">1999</span></span><br><span class="line"> <span class="number">3</span> a4         audi          <span class="number">2008</span></span><br><span class="line"> <span class="number">4</span> a4         audi          <span class="number">2008</span></span><br><span class="line"> <span class="number">5</span> a4         audi          <span class="number">1999</span></span><br><span class="line"> <span class="number">6</span> a4         audi          <span class="number">1999</span></span><br><span class="line"> <span class="number">7</span> a4         audi          <span class="number">2008</span></span><br><span class="line"> <span class="number">8</span> a4 quattro audi          <span class="number">1999</span></span><br><span class="line"> <span class="number">9</span> a4 quattro audi          <span class="number">1999</span></span><br><span class="line"><span class="number">10</span> a4 quattro audi          <span class="number">2008</span></span><br><span class="line"><span class="number">11</span> a4 quattro audi          <span class="number">2008</span></span><br><span class="line"><span class="number">12</span> a4 quattro audi          <span class="number">1999</span></span><br><span class="line"><span class="number">13</span> a4 quattro audi          <span class="number">1999</span></span><br><span class="line"><span class="number">14</span> a4 quattro audi          <span class="number">2008</span></span><br><span class="line"><span class="number">15</span> a4 quattro audi          <span class="number">2008</span></span><br><span class="line"><span class="number">16</span> a6 quattro audi          <span class="number">1999</span></span><br><span class="line"><span class="number">17</span> a6 quattro audi          <span class="number">2008</span></span><br><span class="line"><span class="number">18</span> a6 quattro audi          <span class="number">2008</span></span><br></pre></td></tr></table></figure><p>使用dplyr包里面更为高效的函数实现切片索引</p><p>%&gt;%管道函数 左侧传给右侧</p><p>filter筛选行 select筛选列</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(dplyr)</span><br><span class="line"></span><br><span class="line">载入程辑包：‘dplyr’</span><br><span class="line"></span><br><span class="line">The following objects are masked from ‘package:stats’:</span><br><span class="line"></span><br><span class="line">    filter, lag</span><br><span class="line"></span><br><span class="line">The following objects are masked from ‘package:base’:</span><br><span class="line"></span><br><span class="line">    intersect, setdiff, setequal, union</span><br><span class="line"></span><br><span class="line">Warning message:</span><br><span class="line">程辑包‘dplyr’是用R版本<span class="number">3.4</span><span class="number">.3</span> 来建造的 </span><br><span class="line">&gt; </span><br><span class="line">&gt; mydata1 %&gt;% filter(model==<span class="string">"audi"</span> | manufacturer==<span class="string">"mercury"</span>) %&gt;% select(model, manufacturer,year)</span><br><span class="line"><span class="comment"># A tibble: 4 x 3</span></span><br><span class="line">  model           manufacturer  year</span><br><span class="line">  &lt;chr&gt;           &lt;chr&gt;        &lt;int&gt;</span><br><span class="line"><span class="number">1</span> mountaineer 4wd mercury       <span class="number">1999</span></span><br><span class="line"><span class="number">2</span> mountaineer 4wd mercury       <span class="number">2008</span></span><br><span class="line"><span class="number">3</span> mountaineer 4wd mercury       <span class="number">2008</span></span><br><span class="line"><span class="number">4</span> mountaineer 4wd mercury       <span class="number">1999</span></span><br><span class="line">Warning message:</span><br><span class="line">package ‘bindrcpp’ was built under R version <span class="number">3.4</span><span class="number">.4</span> </span><br><span class="line">&gt; mydata1 %&gt;% filter(model==<span class="string">"a4"</span> &amp; manufacturer==<span class="string">"audi"</span>) %&gt;% select(model, manufacturer, year)</span><br><span class="line"><span class="comment"># A tibble: 7 x 3</span></span><br><span class="line">  model manufacturer  year</span><br><span class="line">  &lt;chr&gt; &lt;chr&gt;        &lt;int&gt;</span><br><span class="line"><span class="number">1</span> a4    audi          <span class="number">1999</span></span><br><span class="line"><span class="number">2</span> a4    audi          <span class="number">1999</span></span><br><span class="line"><span class="number">3</span> a4    audi          <span class="number">2008</span></span><br><span class="line"><span class="number">4</span> a4    audi          <span class="number">2008</span></span><br><span class="line"><span class="number">5</span> a4    audi          <span class="number">1999</span></span><br><span class="line"><span class="number">6</span> a4    audi          <span class="number">1999</span></span><br><span class="line"><span class="number">7</span> a4    audi          <span class="number">2008</span></span><br></pre></td></tr></table></figure><p>数据聚合计算</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&gt; iris1 &lt;- iris</span><br><span class="line">&gt; head(iris1)</span><br><span class="line">  Sepal.Length Sepal.Width Petal.Length Petal.Width Species</span><br><span class="line"><span class="number">1</span>          <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">2</span>          <span class="number">4.9</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">3</span>          <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">4</span>          <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">5</span>          <span class="number">5.0</span>         <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span>  setosa</span><br><span class="line"><span class="number">6</span>          <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span>  setosa</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="comment"># transform函数只能基于已有变量进行计算，无法基于新生成的变量进行计算</span></span><br><span class="line">&gt; iris1 &lt;- transform(</span><br><span class="line">+     iris1,</span><br><span class="line">+     dek=Sepal.Length/Sepal.Width,</span><br><span class="line">+     pek=Petal.Length+Petal.Width</span><br><span class="line">+ )</span><br><span class="line">&gt; iris1</span><br><span class="line">    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species      dek pek</span><br><span class="line"><span class="number">1</span>            <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa <span class="number">1.457143</span> <span class="number">1.6</span></span><br><span class="line"><span class="number">2</span>            <span class="number">4.9</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa <span class="number">1.633333</span> <span class="number">1.6</span></span><br><span class="line"><span class="number">3</span>            <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>     setosa <span class="number">1.468750</span> <span class="number">1.5</span></span><br><span class="line"><span class="number">4</span>            <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>     setosa <span class="number">1.483871</span> <span class="number">1.7</span></span><br><span class="line"><span class="number">5</span>            <span class="number">5.0</span>         <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa <span class="number">1.388889</span> <span class="number">1.6</span></span><br><span class="line"><span class="number">6</span>            <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span>     setosa <span class="number">1.384615</span> <span class="number">2.1</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="number">139</span>          <span class="number">6.0</span>         <span class="number">3.0</span>          <span class="number">4.8</span>         <span class="number">1.8</span>  virginica <span class="number">2.000000</span> <span class="number">6.6</span></span><br><span class="line"><span class="number">140</span>          <span class="number">6.9</span>         <span class="number">3.1</span>          <span class="number">5.4</span>         <span class="number">2.1</span>  virginica <span class="number">2.225806</span> <span class="number">7.5</span></span><br><span class="line"><span class="number">141</span>          <span class="number">6.7</span>         <span class="number">3.1</span>          <span class="number">5.6</span>         <span class="number">2.4</span>  virginica <span class="number">2.161290</span> <span class="number">8.0</span></span><br><span class="line"><span class="number">142</span>          <span class="number">6.9</span>         <span class="number">3.1</span>          <span class="number">5.1</span>         <span class="number">2.3</span>  virginica <span class="number">2.225806</span> <span class="number">7.4</span></span><br><span class="line"> [ reached getOption(<span class="string">"max.print"</span>) -- omitted <span class="number">8</span> rows ]</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># mutate函数实现了基于新生成的变量进行计算的需求</span></span><br><span class="line">&gt; iris1 &lt;- dplyr::mutate(</span><br><span class="line">+     iris1,</span><br><span class="line">+     dek=Sepal.Length+Sepal.Width,</span><br><span class="line">+     jek=sqrt(dek)</span><br><span class="line">+ )</span><br><span class="line">&gt; iris1</span><br><span class="line">    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species  dek pek      jek</span><br><span class="line"><span class="number">1</span>            <span class="number">5.1</span>         <span class="number">3.5</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa  <span class="number">8.6</span> <span class="number">1.6</span> <span class="number">2.932576</span></span><br><span class="line"><span class="number">2</span>            <span class="number">4.9</span>         <span class="number">3.0</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa  <span class="number">7.9</span> <span class="number">1.6</span> <span class="number">2.810694</span></span><br><span class="line"><span class="number">3</span>            <span class="number">4.7</span>         <span class="number">3.2</span>          <span class="number">1.3</span>         <span class="number">0.2</span>     setosa  <span class="number">7.9</span> <span class="number">1.5</span> <span class="number">2.810694</span></span><br><span class="line"><span class="number">4</span>            <span class="number">4.6</span>         <span class="number">3.1</span>          <span class="number">1.5</span>         <span class="number">0.2</span>     setosa  <span class="number">7.7</span> <span class="number">1.7</span> <span class="number">2.774887</span></span><br><span class="line"><span class="number">5</span>            <span class="number">5.0</span>         <span class="number">3.6</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa  <span class="number">8.6</span> <span class="number">1.6</span> <span class="number">2.932576</span></span><br><span class="line"><span class="number">6</span>            <span class="number">5.4</span>         <span class="number">3.9</span>          <span class="number">1.7</span>         <span class="number">0.4</span>     setosa  <span class="number">9.3</span> <span class="number">2.1</span> <span class="number">3.049590</span></span><br><span class="line"><span class="number">7</span>            <span class="number">4.6</span>         <span class="number">3.4</span>          <span class="number">1.4</span>         <span class="number">0.3</span>     setosa  <span class="number">8.0</span> <span class="number">1.7</span> <span class="number">2.828427</span></span><br><span class="line"><span class="number">8</span>            <span class="number">5.0</span>         <span class="number">3.4</span>          <span class="number">1.5</span>         <span class="number">0.2</span>     setosa  <span class="number">8.4</span> <span class="number">1.7</span> <span class="number">2.898275</span></span><br><span class="line"><span class="number">9</span>            <span class="number">4.4</span>         <span class="number">2.9</span>          <span class="number">1.4</span>         <span class="number">0.2</span>     setosa  <span class="number">7.3</span> <span class="number">1.6</span> <span class="number">2.701851</span></span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="number">121</span>          <span class="number">6.9</span>         <span class="number">3.2</span>          <span class="number">5.7</span>         <span class="number">2.3</span>  virginica <span class="number">10.1</span> <span class="number">8.0</span> <span class="number">3.178050</span></span><br><span class="line"><span class="number">122</span>          <span class="number">5.6</span>         <span class="number">2.8</span>          <span class="number">4.9</span>         <span class="number">2.0</span>  virginica  <span class="number">8.4</span> <span class="number">6.9</span> <span class="number">2.898275</span></span><br><span class="line"><span class="number">123</span>          <span class="number">7.7</span>         <span class="number">2.8</span>          <span class="number">6.7</span>         <span class="number">2.0</span>  virginica <span class="number">10.5</span> <span class="number">8.7</span> <span class="number">3.240370</span></span><br><span class="line"><span class="number">124</span>          <span class="number">6.3</span>         <span class="number">2.7</span>          <span class="number">4.9</span>         <span class="number">1.8</span>  virginica  <span class="number">9.0</span> <span class="number">6.7</span> <span class="number">3.000000</span></span><br><span class="line"><span class="number">125</span>          <span class="number">6.7</span>         <span class="number">3.3</span>          <span class="number">5.7</span>         <span class="number">2.1</span>  virginica <span class="number">10.0</span> <span class="number">7.8</span> <span class="number">3.162278</span></span><br><span class="line"> [ reached getOption(<span class="string">"max.print"</span>) -- omitted <span class="number">25</span> rows ]</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># within函数</span></span><br><span class="line">&gt; mydata &lt;- data.frame(</span><br><span class="line">+     Name = sample(LETTERS[<span class="number">1</span>:<span class="number">20</span>]),</span><br><span class="line">+     old = runif(<span class="number">20</span>, <span class="number">5</span>, <span class="number">65</span>) %&gt;% round(<span class="number">0</span>)</span><br><span class="line">+ )</span><br><span class="line">&gt; </span><br><span class="line">&gt; mydata &lt;- within(mydata,&#123;</span><br><span class="line">+     agecat &lt;- <span class="literal">NA</span></span><br><span class="line">+     agecat[old &gt; <span class="number">55</span>] &lt;- <span class="string">"Elder"</span></span><br><span class="line">+     agecat[old &gt;= <span class="number">35</span> &amp; old &lt;= <span class="number">55</span>] &lt;- <span class="string">"Middle Aged"</span></span><br><span class="line">+     agecat[old &lt; <span class="number">35</span>] &lt;- <span class="string">"Young"</span></span><br><span class="line">+ &#125;)</span><br><span class="line">&gt; mydata</span><br><span class="line">   Name old      agecat</span><br><span class="line"><span class="number">1</span>     Q  <span class="number">14</span>       Young</span><br><span class="line"><span class="number">2</span>     C  <span class="number">31</span>       Young</span><br><span class="line"><span class="number">3</span>     E  <span class="number">27</span>       Young</span><br><span class="line"><span class="number">4</span>     S  <span class="number">32</span>       Young</span><br><span class="line"><span class="number">5</span>     A  <span class="number">36</span> Middle Aged</span><br><span class="line"><span class="number">6</span>     D  <span class="number">25</span>       Young</span><br><span class="line"><span class="number">7</span>     B  <span class="number">11</span>       Young</span><br><span class="line"><span class="number">8</span>     L  <span class="number">53</span> Middle Aged</span><br><span class="line"><span class="number">9</span>     I  <span class="number">31</span>       Young</span><br><span class="line"><span class="number">10</span>    G  <span class="number">25</span>       Young</span><br><span class="line"><span class="number">11</span>    R  <span class="number">16</span>       Young</span><br><span class="line"><span class="number">12</span>    P  <span class="number">51</span> Middle Aged</span><br><span class="line"><span class="number">13</span>    J  <span class="number">30</span>       Young</span><br><span class="line"><span class="number">14</span>    N  <span class="number">38</span> Middle Aged</span><br><span class="line"><span class="number">15</span>    K  <span class="number">20</span>       Young</span><br><span class="line"><span class="number">16</span>    H  <span class="number">53</span> Middle Aged</span><br><span class="line"><span class="number">17</span>    O  <span class="number">13</span>       Young</span><br><span class="line"><span class="number">18</span>    M  <span class="number">63</span>       Elder</span><br><span class="line"><span class="number">19</span>    <span class="literal">F</span>  <span class="number">65</span>       Elder</span><br><span class="line"><span class="number">20</span>    <span class="literal">T</span>  <span class="number">22</span>       Young</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt; mydata$old_n &lt;- ifelse(</span><br><span class="line">+     mydata$old &gt; <span class="number">55</span>, <span class="string">"Elder"</span>,</span><br><span class="line">+     ifelse(</span><br><span class="line">          <span class="comment"># 满足mydata$old &gt;= 35 &amp; mydata$old &lt;= "Middle Aged"，否则是"Young"</span></span><br><span class="line">+         mydata$old &gt;= <span class="number">35</span> &amp; mydata$old &lt;= <span class="number">55</span>, <span class="string">"Middle Aged"</span>, <span class="string">"Young"</span></span><br><span class="line">+     )</span><br><span class="line">+ )</span><br><span class="line">&gt; </span><br><span class="line">&gt; mydata</span><br><span class="line">   Name old      agecat       old_n</span><br><span class="line"><span class="number">1</span>     Q  <span class="number">14</span>       Young       Young</span><br><span class="line"><span class="number">2</span>     C  <span class="number">31</span>       Young       Young</span><br><span class="line"><span class="number">3</span>     E  <span class="number">27</span>       Young       Young</span><br><span class="line"><span class="number">4</span>     S  <span class="number">32</span>       Young       Young</span><br><span class="line"><span class="number">5</span>     A  <span class="number">36</span> Middle Aged Middle Aged</span><br><span class="line"><span class="number">6</span>     D  <span class="number">25</span>       Young       Young</span><br><span class="line"><span class="number">7</span>     B  <span class="number">11</span>       Young       Young</span><br><span class="line"><span class="number">8</span>     L  <span class="number">53</span> Middle Aged Middle Aged</span><br><span class="line"><span class="number">9</span>     I  <span class="number">31</span>       Young       Young</span><br><span class="line"><span class="number">10</span>    G  <span class="number">25</span>       Young       Young</span><br><span class="line"><span class="number">11</span>    R  <span class="number">16</span>       Young       Young</span><br><span class="line"><span class="number">12</span>    P  <span class="number">51</span> Middle Aged Middle Aged</span><br><span class="line"><span class="number">13</span>    J  <span class="number">30</span>       Young       Young</span><br><span class="line"><span class="number">14</span>    N  <span class="number">38</span> Middle Aged Middle Aged</span><br><span class="line"><span class="number">15</span>    K  <span class="number">20</span>       Young       Young</span><br><span class="line"><span class="number">16</span>    H  <span class="number">53</span> Middle Aged Middle Aged</span><br><span class="line"><span class="number">17</span>    O  <span class="number">13</span>       Young       Young</span><br><span class="line"><span class="number">18</span>    M  <span class="number">63</span>       Elder       Elder</span><br><span class="line"><span class="number">19</span>    <span class="literal">F</span>  <span class="number">65</span>       Elder       Elder</span><br><span class="line"><span class="number">20</span>    <span class="literal">T</span>  <span class="number">22</span>       Young       Young</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># aggregate聚合函数（只能实现一个聚合指标）</span></span><br><span class="line"><span class="comment"># ~右边Species是分组依据，左边是要计算的数据，iris1是数据框名称，mean是要进行的运算</span></span><br><span class="line">&gt; aggregate(Sepal.Length~Species, iris1, mean)</span><br><span class="line">     Species Sepal.Length</span><br><span class="line"><span class="number">1</span>     setosa        <span class="number">5.006</span></span><br><span class="line"><span class="number">2</span> versicolor        <span class="number">5.936</span></span><br><span class="line"><span class="number">3</span>  virginica        <span class="number">6.588</span></span><br><span class="line">&gt; aggregate(Sepal.Length~Species, iris1, sum)</span><br><span class="line">     Species Sepal.Length</span><br><span class="line"><span class="number">1</span>     setosa        <span class="number">250.3</span></span><br><span class="line"><span class="number">2</span> versicolor        <span class="number">296.8</span></span><br><span class="line"><span class="number">3</span>  virginica        <span class="number">329.4</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># group_by+summarize实现了基于分组的自由聚合（与SQL中的标准聚合语法group by +聚合函数差不多）</span></span><br><span class="line">&gt; iris1 %&gt;% </span><br><span class="line">+     group_by(Species) %&gt;%</span><br><span class="line">+     <span class="comment"># 可聚合多个变量</span></span><br><span class="line">+      summarize(</span><br><span class="line">+         means = mean(Sepal.Length),</span><br><span class="line">+         sums = sum(Sepal.Length)</span><br><span class="line">+     )</span><br><span class="line"><span class="comment"># A tibble: 3 x 3</span></span><br><span class="line">  Species    means  sums</span><br><span class="line">  &lt;fct&gt;      &lt;dbl&gt; &lt;dbl&gt;</span><br><span class="line"><span class="number">1</span> setosa      <span class="number">5.01</span>  <span class="number">250.</span></span><br><span class="line"><span class="number">2</span> versicolor  <span class="number">5.94</span>  <span class="number">297.</span></span><br><span class="line"><span class="number">3</span> virginica   <span class="number">6.59</span>  <span class="number">329.</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># tapply专门用于聚合变量，但也只能聚合一个</span></span><br><span class="line">&gt; tapply(iris1$Sepal.Length, iris$Species, mean)</span><br><span class="line">    setosa versicolor  virginica </span><br><span class="line">     <span class="number">5.006</span>      <span class="number">5.936</span>      <span class="number">6.588</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plyr包里面的ddply函数是一个极其高效的向量化聚合函数</span></span><br><span class="line">&gt; <span class="keyword">library</span>(<span class="string">'plyr'</span>)</span><br><span class="line">&gt; ddply(</span><br><span class="line">+     iris1,</span><br><span class="line">+     .(Species),</span><br><span class="line">+     summarize,</span><br><span class="line">+     means = mean(Sepal.Length),</span><br><span class="line">+     sums = sum(Sepal.Length)</span><br><span class="line">+ )</span><br><span class="line">     Species means  sums</span><br><span class="line"><span class="number">1</span>     setosa <span class="number">5.006</span> <span class="number">250.3</span></span><br><span class="line"><span class="number">2</span> versicolor <span class="number">5.936</span> <span class="number">296.8</span></span><br><span class="line"><span class="number">3</span>  virginica <span class="number">6.588</span> <span class="number">329.4</span></span><br></pre></td></tr></table></figure><h1 id="数据合并、追加与塑性"><a href="#数据合并、追加与塑性" class="headerlink" title="数据合并、追加与塑性"></a>数据合并、追加与塑性</h1><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fr0w2xxa0xj20rq090wi9.jpg" alt=""></p><h1 id="字符串处理与正则表达式"><a href="#字符串处理与正则表达式" class="headerlink" title="字符串处理与正则表达式"></a>字符串处理与正则表达式</h1><h1 id="管道函数与向量化运算"><a href="#管道函数与向量化运算" class="headerlink" title="管道函数与向量化运算"></a>管道函数与向量化运算</h1><h1 id="非结构化数据与列表"><a href="#非结构化数据与列表" class="headerlink" title="非结构化数据与列表"></a>非结构化数据与列表</h1><h1 id="R语言与数据库交互"><a href="#R语言与数据库交互" class="headerlink" title="R语言与数据库交互"></a>R语言与数据库交互</h1><h1 id="数据梳理神器（data-table"><a href="#数据梳理神器（data-table" class="headerlink" title="数据梳理神器（data.table)"></a>数据梳理神器（data.table)</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;R语言基础数据结构&quot;&gt;&lt;a href=&quot;#R语言基础数据结构&quot; class=&quot;headerlink&quot; title=&quot;R语言基础数据结构&quot;&gt;&lt;/a&gt;R语言基础数据结构&lt;/h1&gt;&lt;p&gt;基本数据类型：向量、数组、列表&lt;/p&gt;
&lt;p&gt;向量是最基本的，被称为原子型&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="R" scheme="http://yoursite.com/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>用Eclipse创建第一个java程序</title>
    <link href="http://yoursite.com/2018/05/05/%E7%94%A8Eclipse%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/05/05/用Eclipse创建第一个java程序/</id>
    <published>2018-05-05T05:57:32.000Z</published>
    <updated>2018-05-05T06:30:48.928Z</updated>
    
    <content type="html"><![CDATA[<p>启动eclipse</p><p>File —-&gt; New —-&gt; Create Java Project</p><p>输入项目名称，自己起名即可，如helloworld</p><p>新创建的项目结构如下：</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fr0fdplqs2j20yx0hkdhs.jpg" alt=""></p><p>在scr下，右键点击Package</p><p>name中输入my：</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fr0fgi324hj20mp0h5jsd.jpg" alt=""></p><p>src下面会多一个叫my的包</p><p>下面添加代码</p><p>右键my</p><p>New —-&gt; Class</p><p>Name输入HelloWorld</p><p>勾选public static void main(String[] args)</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fr0ftmnrg7j20gi0j5js7.jpg" alt=""></p><p>my下多了一个java文件：</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fr0fvce59ij20t90d1757.jpg" alt=""></p><p>于是可以在HelloWorld.java中编写第一个程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> my;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        System.out.println(<span class="string">"helloworld"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>右键 Run as —-&gt; 1 Java Application</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;启动eclipse&lt;/p&gt;
&lt;p&gt;File —-&amp;gt; New —-&amp;gt; Create Java Project&lt;/p&gt;
&lt;p&gt;输入项目名称，自己起名即可，如helloworld&lt;/p&gt;
&lt;p&gt;新创建的项目结构如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://w
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>seaborn常用图形</title>
    <link href="http://yoursite.com/2018/05/03/seaborn%E5%B8%B8%E7%94%A8%E5%9B%BE%E5%BD%A2/"/>
    <id>http://yoursite.com/2018/05/03/seaborn常用图形/</id>
    <published>2018-05-03T02:36:20.000Z</published>
    <updated>2018-05-03T10:50:48.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="style"><a href="#style" class="headerlink" title="style"></a>style</h1><h2 id="风格管理"><a href="#风格管理" class="headerlink" title="风格管理"></a>风格管理</h2><ul><li>darkgrid/whitegrid：更关注数值</li><li>dark/white：更关注整体趋势</li><li>ticks：强化刻度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">"whitegrid"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.despine()</span><br></pre></td></tr></table></figure><h2 id="尺度参数设置"><a href="#尺度参数设置" class="headerlink" title="尺度参数设置"></a>尺度参数设置</h2><ul><li>paper</li><li>talk</li><li>notebook</li><li>poster</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.set_context(<span class="string">"poster"</span>)</span><br></pre></td></tr></table></figure><h2 id="颜色管理"><a href="#颜色管理" class="headerlink" title="颜色管理"></a>颜色管理</h2><h3 id="分类调色板"><a href="#分类调色板" class="headerlink" title="分类调色板"></a>分类调色板</h3><ul><li>适用于分类描述的数据，而且分类之间无序</li><li>hls颜色系统，色调+亮度+饱和度（hue + luminance + saturation）</li><li>husl颜色系统，hls中不同颜色存在视差，eg.黄色偏亮，蓝色偏暗，husl使得更加平衡</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.set_palette(sns.color_palette(<span class="string">"hls"</span>, <span class="number">10</span>), desat=<span class="number">0.9</span>)</span><br><span class="line">current_palette = sns.color_palette()</span><br><span class="line">sns.palplot(current_palette)</span><br></pre></td></tr></table></figure><h3 id="序列调色板"><a href="#序列调色板" class="headerlink" title="序列调色板"></a>序列调色板</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.palplot(sns.color_palette(&quot;Greens&quot;,10))</span><br></pre></td></tr></table></figure><h3 id="交叉调色板"><a href="#交叉调色板" class="headerlink" title="交叉调色板"></a>交叉调色板</h3><ul><li>主要通过亮度和饱和度区分有序分类</li><li>关注单级数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.palplot(sns.color_palette(<span class="string">"coolwarm"</span>,<span class="number">11</span>))</span><br></pre></td></tr></table></figure><h1 id="变量间的关系"><a href="#变量间的关系" class="headerlink" title="变量间的关系"></a>变量间的关系</h1><h2 id="绘制线性回归模型"><a href="#绘制线性回归模型" class="headerlink" title="绘制线性回归模型"></a>绘制线性回归模型</h2><p><strong>一般形式</strong></p><ul><li><p>最简单的方式：散点图 + 线性回归 + 95%置信区间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, data=tips) <span class="comment"># confidence interval</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="C:\Users\my\AppData\Local\Temp\1525330528669.png" alt=""></p><p><strong>局部加权回归散点平滑</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, data=tips, lowess=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy5oa68rqj20dx09uq32.jpg" alt=""></p><p><strong>方法1 加抖动</strong></p><p>有时散点图上的点会重合在一起，可以加个抖动给抖动开。</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy5u34qobj20dr0bwdfz.jpg" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"size"</span>, y=<span class="string">"tip"</span>, data=tips, x_jitter=<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy5veeuy6j20c80a2wem.jpg" alt=""></p><p><strong>方法2 离散取值上用均值和置信区间代替散点</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"size"</span>, y=<span class="string">"tip"</span>, data=tips, x_estimator=np.mean)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy5ze28b8j20dh09vmx9.jpg" alt=""></p><h2 id="拟合不同模型"><a href="#拟合不同模型" class="headerlink" title="拟合不同模型"></a>拟合不同模型</h2><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy617u1vlj20ll0dyjro.jpg" alt=""></p><p><strong>指定阶数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">"x"</span>, y=<span class="string">"y"</span>, data=anscombe.query(<span class="string">"dataset == 'II'"</span>), ci=<span class="keyword">None</span>, scatter_kws=&#123;<span class="string">"s"</span>: <span class="number">80</span>&#125;, order=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy65xeiopj20ea09r74c.jpg" alt=""></p><p><strong>异常值</strong></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy67ivgeqj20lx0bjmxb.jpg" alt=""></p><p><strong>逻辑回归</strong></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy69i81bxj20jz0e3t94.jpg" alt=""></p><p><strong>残差曲线</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy6cr90rkj20kx09pdfx.jpg" alt=""></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy6e05dmij20i00bx0sw.jpg" alt=""></p><h2 id="变量间条件关系"><a href="#变量间条件关系" class="headerlink" title="变量间条件关系"></a>变量间条件关系</h2><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy6fkiee2j20f70c3aaj.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy6gjosj2j20i00cjwf1.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy6hl0q1wj20nh0dq759.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy6im9jr0j20m10jcq5a.jpg" alt=""></p><h2 id="控制图片的大小和形状"><a href="#控制图片的大小和形状" class="headerlink" title="控制图片的大小和形状"></a>控制图片的大小和形状</h2><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy6kce1dhj20ja0i43zv.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy6lgmbktj20s308nab1.jpg" alt=""></p><h1 id="分布"><a href="#分布" class="headerlink" title="分布"></a>分布</h1><h2 id="单变量"><a href="#单变量" class="headerlink" title="单变量"></a>单变量</h2><p><strong>灰度图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy7r0efr9j20iy09nmx7.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy7ri9jp4j20cz0a3dfv.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy7rc01j5j20ee099glr.jpg" alt=""></p><p><strong>核密度估计</strong></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy8ag8sz2j20ij09ddg1.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8amiqllj20cz0cumxo.jpg" alt=""></p><p><strong>模型参数拟合</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy8c3g3uxj20cs09omxc.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy8czr5lqj20c709gmxf.jpg" alt=""></p><h2 id="双变量分布"><a href="#双变量分布" class="headerlink" title="双变量分布"></a>双变量分布</h2><p><strong>散点图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy8e1tzl6j20dh0dj0t9.jpg" alt=""></p><p><strong>六角箱图</strong></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8f8yq7rj20gn0h3mza.jpg" alt=""></p><p><strong>核密度估计</strong></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8gbe27qj20f70dqaae.jpg" alt=""></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy8hf6490j20fs0gr3zs.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy8iih6sdj20k60fdaad.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8je2i4wj20l00g2754.jpg" alt=""></p><h2 id="数据集中的两两关系"><a href="#数据集中的两两关系" class="headerlink" title="数据集中的两两关系"></a>数据集中的两两关系</h2><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy8kzuf0bj20iy0hgmzm.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8m6rz2cj20gl0i142b.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8n5kd43j20i40he40s.jpg" alt=""></p><h1 id="分类数据"><a href="#分类数据" class="headerlink" title="分类数据"></a>分类数据</h1><h2 id="分类散点图"><a href="#分类散点图" class="headerlink" title="分类散点图"></a>分类散点图</h2><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy8ujlfxfj20dl0b3aa9.jpg" alt=""></p><p>点重叠在一起，可以抖动</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy8vanbgoj20e009x3yr.jpg" alt=""></p><p>或者蜂群图</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy8wriu3nj20gm0c8t95.jpg" alt=""></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy8xzapfej20dn0awaah.jpg" alt=""></p><h2 id="分类分布图"><a href="#分类分布图" class="headerlink" title="分类分布图"></a>分类分布图</h2><p><strong>箱图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqycef36fjj20d20addfx.jpg" alt=""></p><p><strong>提琴图</strong></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqycg24kfoj20ep098wew.jpg" alt=""></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqycg7uqe7j20i709hgm4.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqycgp8ui8j20hv09j0t9.jpg" alt=""></p><h2 id="分类统计估计图"><a href="#分类统计估计图" class="headerlink" title="分类统计估计图"></a>分类统计估计图</h2><p><strong>统计柱状图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy90jxp3lj20m70fuwex.jpg" alt=""></p><p><strong>灰度柱状图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy91hevqqj20fi09hdfu.jpg" alt=""></p><p><strong>点图</strong></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy929o6wjj20lm0fzmxr.jpg" alt=""></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy936948qj20kw0i2aan.jpg" alt=""></p><p><strong>分类子图</strong></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy940hiprj20k409mdga.jpg" alt=""></p><p><strong>多分类标准的子图</strong></p><p><img src="C:\Users\my\Desktop\图片\多分类.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;style&quot;&gt;&lt;a href=&quot;#style&quot; class=&quot;headerlink&quot; title=&quot;style&quot;&gt;&lt;/a&gt;style&lt;/h1&gt;&lt;h2 id=&quot;风格管理&quot;&gt;&lt;a href=&quot;#风格管理&quot; class=&quot;headerlink&quot; title=&quot;风格管理&quot;
      
    
    </summary>
    
    
      <category term="matplotlib python数据可视化" scheme="http://yoursite.com/tags/matplotlib-python%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib常用图形</title>
    <link href="http://yoursite.com/2018/05/03/matplotlib%E5%B8%B8%E7%94%A8%E5%9B%BE%E5%BD%A2/"/>
    <id>http://yoursite.com/2018/05/03/matplotlib常用图形/</id>
    <published>2018-05-03T02:36:06.000Z</published>
    <updated>2018-05-03T05:19:48.768Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><ul><li>获得当前图表对象 fig = matplotlib.pyplot.gcf() # gcf = get current figure</li><li>常用图表对象设置 fig.set_size_inches(10,10), matplotlib.pyplot.figure(figsize=(14,7))</li><li>保存当前图表对象 matplotlib.pyplot.savefig(“figure1.png”)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 设置一些全局的资源参数，可以进行个性化修改</span><br><span class="line">import matplotlib</span><br><span class="line"># 设置图片尺寸 14&quot; x 7&quot;</span><br><span class="line"># rc: resource configuration</span><br><span class="line">matplotlib.rc(&apos;figure&apos;, figsize = (14, 7))</span><br><span class="line"># 设置字体 14</span><br><span class="line">matplotlib.rc(&apos;font&apos;, size = 14)</span><br><span class="line"># 不显示网格</span><br><span class="line">matplotlib.rc(&apos;axes&apos;, grid = False)</span><br><span class="line"># 设置背景颜色是白色</span><br><span class="line">matplotlib.rc(&apos;axes&apos;, facecolor = &apos;white&apos;)</span><br></pre></td></tr></table></figure><p><strong>颜色/线条/标记</strong></p><ul><li>pyplot.plot(x, color=’g’)</li><li>pyplot.plot(x, linestyle=’–’)</li><li>pyplot.plot(x, marker=’+’)</li><li>pyplot.plot(x, ‘ro-‘)</li></ul><p><strong>标题</strong></p><ul><li>pyplot.title(“xxxx”)</li></ul><p><strong>坐标轴标签</strong></p><ul><li>pyplot.xlabel(“xxxx”)</li><li>pyplot.ylabel(“xxxx”)</li></ul><p><strong>图注</strong></p><ul><li>pyplot.legend(loc=”best”)配合pyplot.plot(label=”xxxx”)</li></ul><p><strong>网格</strong></p><ul><li>pyplot.grid(color=”xxx”, linestyle=”-“, alpha=0.5)</li></ul><h1 id="关联分析"><a href="#关联分析" class="headerlink" title="关联分析"></a>关联分析</h1><h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2><p>分析变量关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scatterplot</span><span class="params">(x_data, y_data, x_label, y_label, title)</span>:</span></span><br><span class="line">    <span class="comment"># 创建一个绘图对象</span></span><br><span class="line">    fig, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 不显示顶部和右侧的坐标线</span></span><br><span class="line">    ax.spines[<span class="string">'top'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">    ax.spines[<span class="string">'right'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">    <span class="comment"># 设置数据、点的大小、点的颜色和透明度</span></span><br><span class="line">    ax.scatter(x_data, y_data, s = <span class="number">20</span>, color = <span class="string">'#539caf'</span>, alpha = <span class="number">0.2</span>) <span class="comment"># 配色查询：http://tool.oschina.net/commons?type=3</span></span><br><span class="line">    <span class="comment"># 添加标题和坐标说明</span></span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 绘制散点图</span></span><br><span class="line">scatterplot(x_data = daily_data[<span class="string">'temp'</span>]</span><br><span class="line">            , y_data = daily_data[<span class="string">'cnt'</span>]</span><br><span class="line">            , x_label = <span class="string">'Normalized temperature (C)'</span></span><br><span class="line">            , y_label = <span class="string">'Check outs'</span></span><br><span class="line">            , title = <span class="string">'Number of Check Outs vs Temperature'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy0r93wz7j20mi0blabo.jpg" alt=""></p><h2 id="曲线图"><a href="#曲线图" class="headerlink" title="曲线图"></a>曲线图</h2><p>拟合变量关系</p><h3 id="一般曲线图"><a href="#一般曲线图" class="headerlink" title="一般曲线图"></a>一般曲线图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lineplot</span><span class="params">(x_data, y_data, x_label, y_label, title)</span>:</span></span><br><span class="line">    <span class="comment"># 创建绘图对象</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 绘制拟合曲线，lw=linewidth，alpha=transparancy</span></span><br><span class="line">    ax.plot(x_data, y_data, lw = <span class="number">2</span>, color = <span class="string">'#539caf'</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 添加标题和坐标说明</span></span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用绘图函数</span></span><br><span class="line">lineplot(x_data = daily_data[<span class="string">'temp'</span>]</span><br><span class="line">         , y_data = fitted_values</span><br><span class="line">         , x_label = <span class="string">'Normalized temperature (C)'</span></span><br><span class="line">         , y_label = <span class="string">'Check outs'</span></span><br><span class="line">         , title = <span class="string">'Line of Best Fit for Number of Check Outs vs Temperature'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy0ts1nj6j20nu0bh3z5.jpg" alt=""></p><h3 id="带置信区间的曲线图"><a href="#带置信区间的曲线图" class="headerlink" title="带置信区间的曲线图"></a>带置信区间的曲线图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lineplotCI</span><span class="params">(x_data, y_data, sorted_x, low_CI, upper_CI, x_label, y_label, title)</span>:</span></span><br><span class="line">    <span class="comment"># 创建绘图对象</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 绘制预测曲线</span></span><br><span class="line">    ax.plot(x_data, y_data, lw = <span class="number">1</span>, color = <span class="string">'#539caf'</span>, alpha = <span class="number">1</span>, label = <span class="string">'Fit'</span>)</span><br><span class="line">    <span class="comment"># 绘制置信区间，顺序填充</span></span><br><span class="line">    ax.fill_between(sorted_x, low_CI, upper_CI, color = <span class="string">'#539caf'</span>, alpha = <span class="number">0.4</span>, label = <span class="string">'95% CI'</span>)</span><br><span class="line">    <span class="comment"># 添加标题和坐标说明</span></span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    <span class="comment"># 显示图例，配合label参数，loc=“best”自适应方式</span></span><br><span class="line">    ax.legend(loc = <span class="string">'best'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># Call the function to create plot</span></span><br><span class="line">lineplotCI(x_data = daily_data[<span class="string">'temp'</span>]</span><br><span class="line">           , y_data = fitted_values</span><br><span class="line">           , sorted_x = CI_df[<span class="string">'x_data'</span>]</span><br><span class="line">           , low_CI = CI_df[<span class="string">'low_CI'</span>]</span><br><span class="line">           , upper_CI = CI_df[<span class="string">'upper_CI'</span>]</span><br><span class="line">           , x_label = <span class="string">'Normalized temperature (C)'</span></span><br><span class="line">           , y_label = <span class="string">'Check outs'</span></span><br><span class="line">           , title = <span class="string">'Line of Best Fit for Number of Check Outs vs Temperature'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy0wjkhvhj20my0bkjsc.jpg" alt=""></p><h3 id="双坐标曲线"><a href="#双坐标曲线" class="headerlink" title="双坐标曲线"></a>双坐标曲线</h3><ul><li>曲线拟合不满足置信阈值时，考虑增加独立变量</li><li>分析不同尺度多变量的关系</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lineplot2y</span><span class="params">(x_data, x_label, y1_data, y1_color, y1_label, y2_data, y2_color, y2_label, title)</span>:</span></span><br><span class="line">    _, ax1 = plt.subplots()</span><br><span class="line">    ax1.plot(x_data, y1_data, color = y1_color)</span><br><span class="line">    <span class="comment"># 添加标题和坐标说明</span></span><br><span class="line">    ax1.set_ylabel(y1_label, color = y1_color)</span><br><span class="line">    ax1.set_xlabel(x_label)</span><br><span class="line">    ax1.set_title(title)</span><br><span class="line">    ax2 = ax1.twinx() <span class="comment"># 两个绘图对象共享横坐标轴</span></span><br><span class="line">    ax2.plot(x_data, y2_data, color = y2_color)</span><br><span class="line">    ax2.set_ylabel(y2_label, color = y2_color)</span><br><span class="line">    <span class="comment"># 右侧坐标轴可见</span></span><br><span class="line">    ax2.spines[<span class="string">'right'</span>].set_visible(<span class="keyword">True</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用绘图函数</span></span><br><span class="line">lineplot2y(x_data = daily_data[<span class="string">'dteday'</span>]</span><br><span class="line">           , x_label = <span class="string">'Day'</span></span><br><span class="line">           , y1_data = daily_data[<span class="string">'cnt'</span>]</span><br><span class="line">           , y1_color = <span class="string">'#539caf'</span></span><br><span class="line">           , y1_label = <span class="string">'Check outs'</span></span><br><span class="line">           , y2_data = daily_data[<span class="string">'windspeed'</span>]</span><br><span class="line">           , y2_color = <span class="string">'#7663b0'</span></span><br><span class="line">           , y2_label = <span class="string">'Normalized windspeed'</span></span><br><span class="line">           , title = <span class="string">'Check Outs and Windspeed Over Time'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fqy0ypi8azj20nt0avjwh.jpg" alt=""></p><h1 id="分布分析"><a href="#分布分析" class="headerlink" title="分布分析"></a>分布分析</h1><h2 id="灰度图"><a href="#灰度图" class="headerlink" title="灰度图"></a>灰度图</h2><p>粗略区间计数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制灰度图的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">histogram</span><span class="params">(data, x_label, y_label, title)</span>:</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    res = ax.hist(data, color = <span class="string">'#539caf'</span>, bins=<span class="number">50</span>, edgecolor=<span class="string">'k'</span>) <span class="comment"># 设置bin的数量</span></span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图函数调用</span></span><br><span class="line">res = histogram(data = daily_data[<span class="string">'registered'</span>]</span><br><span class="line">           , x_label = <span class="string">'Check outs'</span></span><br><span class="line">           , y_label = <span class="string">'Frequency'</span></span><br><span class="line">           , title = <span class="string">'Distribution of Registered Check Outs'</span>)</span><br><span class="line">res[<span class="number">0</span>] <span class="comment"># value of bins</span></span><br><span class="line">res[<span class="number">1</span>] <span class="comment"># boundary of bins</span></span><br></pre></td></tr></table></figure><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy12d5w72j20mg0c0dgc.jpg" alt=""></p><h2 id="堆叠直方图"><a href="#堆叠直方图" class="headerlink" title="堆叠直方图"></a>堆叠直方图</h2><p>比较两个分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制堆叠的直方图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">overlaid_histogram</span><span class="params">(data1, data1_name, data1_color, data2, data2_name, data2_color, x_label, y_label, title)</span>:</span></span><br><span class="line">    <span class="comment"># 归一化数据区间，对齐两个直方图的bins</span></span><br><span class="line">    max_nbins = <span class="number">20</span></span><br><span class="line">    data_range = [min(min(data1), min(data2)), max(max(data1), max(data2))]</span><br><span class="line">    binwidth = (data_range[<span class="number">1</span>] - data_range[<span class="number">0</span>]) / max_nbins</span><br><span class="line">    bins = np.arange(data_range[<span class="number">0</span>], data_range[<span class="number">1</span>] + binwidth, binwidth) <span class="comment"># 生成直方图bins区间</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create the plot</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    ax.hist(data1, bins = bins, color = data1_color, alpha = <span class="number">1</span>, label = data1_name, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    ax.hist(data2, bins = bins, color = data2_color, alpha = <span class="number">0.75</span>, label = data2_name, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.legend(loc = <span class="string">'best'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the function to create plot</span></span><br><span class="line">overlaid_histogram(data1 = daily_data[<span class="string">'registered'</span>]</span><br><span class="line">                   , data1_name = <span class="string">'Registered'</span></span><br><span class="line">                   , data1_color = <span class="string">'#539caf'</span></span><br><span class="line">                   , data2 = daily_data[<span class="string">'casual'</span>]</span><br><span class="line">                   , data2_name = <span class="string">'Casual'</span></span><br><span class="line">                   , data2_color = <span class="string">'#7663b0'</span></span><br><span class="line">                   , x_label = <span class="string">'Check outs'</span></span><br><span class="line">                   , y_label = <span class="string">'Frequency'</span></span><br><span class="line">                   , title = <span class="string">'Distribution of Check Outs By Type'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy23p0kepj20nc0bk74t.jpg" alt=""></p><h2 id="密度图"><a href="#密度图" class="headerlink" title="密度图"></a>密度图</h2><ul><li>精细刻画概率分布</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 计算概率密度</span><br><span class="line">from scipy.stats import gaussian_kde</span><br><span class="line">data = daily_data[&apos;registered&apos;]</span><br><span class="line">density_est = gaussian_kde(data) # kernal density estimate: https://en.wikipedia.org/wiki/Kernel_density_estimation</span><br><span class="line"># 控制平滑程度，数值越大，越平滑哈</span><br><span class="line">density_est.covariance_factor = lambda : 0.5</span><br><span class="line">density_est._compute_covariance()</span><br><span class="line">x_data = np.arange(min(data), max(data), 200)</span><br><span class="line"></span><br><span class="line"># 绘制密度估计曲线</span><br><span class="line">def densityplot(x_data, density_est, x_label, y_label, title):</span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    ax.plot(x_data, density_est(x_data), color = &apos;#539caf&apos;, lw = 4)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line"></span><br><span class="line"># 调用绘图函数</span><br><span class="line">densityplot(x_data = x_data</span><br><span class="line">            , density_est = density_est</span><br><span class="line">            , x_label = &apos;Check outs&apos;</span><br><span class="line">            , y_label = &apos;Frequency&apos;</span><br><span class="line">            , title = &apos;Distribution of Registered Check Outs&apos;)</span><br></pre></td></tr></table></figure><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fqy25jhljzj20mr0b50tl.jpg" alt=""></p><h1 id="组间分析"><a href="#组间分析" class="headerlink" title="组间分析"></a>组间分析</h1><ul><li>组间定量比较</li><li>分组粒度</li><li>组间聚类</li></ul><h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2><ul><li><p>一级类间均值方差比较</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分天分析统计特征</span></span><br><span class="line">mean_total_co_day = daily_data[[<span class="string">'weekday'</span>, <span class="string">'cnt'</span>]].groupby(<span class="string">'weekday'</span>).agg([np.mean, np.std])</span><br><span class="line">mean_total_co_day.columns = mean_total_co_day.columns.droplevel()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义绘制柱状图的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">barplot</span><span class="params">(x_data, y_data, error_data, x_label, y_label, title)</span>:</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 柱状图</span></span><br><span class="line">    ax.bar(x_data, y_data, color = <span class="string">'#539caf'</span>, align = <span class="string">'center'</span>)</span><br><span class="line">    <span class="comment"># 绘制方差</span></span><br><span class="line">    <span class="comment"># ls='none'去掉bar之间的连线</span></span><br><span class="line">    ax.errorbar(x_data, y_data, yerr = error_data, color = <span class="string">'#297083'</span>, ls = <span class="string">'none'</span>, lw = <span class="number">5</span>) <span class="comment"># ls = line style</span></span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图函数调用</span></span><br><span class="line">barplot(x_data = mean_total_co_day.index.values</span><br><span class="line">        , y_data = mean_total_co_day[<span class="string">'mean'</span>]</span><br><span class="line">        , error_data = mean_total_co_day[<span class="string">'std'</span>]</span><br><span class="line">        , x_label = <span class="string">'Day of week'</span></span><br><span class="line">        , y_label = <span class="string">'Check outs'</span></span><br><span class="line">        , title = <span class="string">'Total Check Outs By Day of Week (0 = Sunday)'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy2dkhtaij20m80bk0t8.jpg" alt=""></p></li></ul><h2 id="堆积柱状图"><a href="#堆积柱状图" class="headerlink" title="堆积柱状图"></a>堆积柱状图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分天统计注册和偶然使用的情况</span></span><br><span class="line">mean_by_reg_co_day = daily_data[[<span class="string">'weekday'</span>, <span class="string">'registered'</span>, <span class="string">'casual'</span>]].groupby(<span class="string">'weekday'</span>).mean()</span><br><span class="line"><span class="comment"># 分天统计注册和偶然使用的占比</span></span><br><span class="line">mean_by_reg_co_day[<span class="string">'total'</span>] = mean_by_reg_co_day[<span class="string">'registered'</span>] + mean_by_reg_co_day[<span class="string">'casual'</span>]</span><br><span class="line">mean_by_reg_co_day[<span class="string">'reg_prop'</span>] = mean_by_reg_co_day[<span class="string">'registered'</span>] / mean_by_reg_co_day[<span class="string">'total'</span>]</span><br><span class="line">mean_by_reg_co_day[<span class="string">'casual_prop'</span>] = mean_by_reg_co_day[<span class="string">'casual'</span>] / mean_by_reg_co_day[<span class="string">'total'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制堆积柱状图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stackedbarplot</span><span class="params">(x_data, y_data_list, y_data_names, colors, x_label, y_label, title)</span>:</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 循环绘制堆积柱状图</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(y_data_list)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            ax.bar(x_data, y_data_list[i], color = colors[i], align = <span class="string">'center'</span>, label = y_data_names[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 采用堆积的方式，除了第一个分类，后面的分类都从前一个分类的柱状图接着画</span></span><br><span class="line">            <span class="comment"># 用归一化保证最终累积结果为1</span></span><br><span class="line">            ax.bar(x_data, y_data_list[i], color = colors[i], bottom = y_data_list[i - <span class="number">1</span>], align = <span class="string">'center'</span>, label = y_data_names[i])</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.legend(loc = <span class="string">'upper left'</span>) <span class="comment"># 设定图例位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用绘图函数</span></span><br><span class="line">stackedbarplot(x_data = mean_by_reg_co_day.index.values</span><br><span class="line">               , y_data_list = [mean_by_reg_co_day[<span class="string">'reg_prop'</span>], mean_by_reg_co_day[<span class="string">'casual_prop'</span>]]</span><br><span class="line">               , y_data_names = [<span class="string">'Registered'</span>, <span class="string">'Casual'</span>]</span><br><span class="line">               , colors = [<span class="string">'#539caf'</span>, <span class="string">'#7663b0'</span>]</span><br><span class="line">               , x_label = <span class="string">'Day of week'</span></span><br><span class="line">               , y_label = <span class="string">'Proportion of check outs'</span></span><br><span class="line">               , title = <span class="string">'Check Outs By Registration Status and Day of Week (0 = Sunday)'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fqy2fupl5kj20mi0bvjs1.jpg" alt=""></p><h2 id="分组柱状图"><a href="#分组柱状图" class="headerlink" title="分组柱状图"></a>分组柱状图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制分组柱状图的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">groupedbarplot</span><span class="params">(x_data, y_data_list, y_data_names, colors, x_label, y_label, title)</span>:</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line">    <span class="comment"># 设置每一组柱状图的宽度</span></span><br><span class="line">    total_width = <span class="number">0.8</span></span><br><span class="line">    <span class="comment"># 设置每一个柱状图的宽度</span></span><br><span class="line">    ind_width = total_width / len(y_data_list)</span><br><span class="line">    <span class="comment"># 计算每一个柱状图的中心偏移</span></span><br><span class="line">    alteration = np.arange(-total_width/<span class="number">2</span>+ind_width/<span class="number">2</span>, total_width/<span class="number">2</span>+ind_width/<span class="number">2</span>, ind_width)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分别绘制每一个柱状图</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(y_data_list)):</span><br><span class="line">        <span class="comment"># 横向散开绘制</span></span><br><span class="line">        ax.bar(x_data + alteration[i], y_data_list[i], color = colors[i], label = y_data_names[i], width = ind_width)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line">    ax.legend(loc = <span class="string">'upper right'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用绘图函数</span></span><br><span class="line">groupedbarplot(x_data = mean_by_reg_co_day.index.values</span><br><span class="line">               , y_data_list = [mean_by_reg_co_day[<span class="string">'registered'</span>], mean_by_reg_co_day[<span class="string">'casual'</span>]]</span><br><span class="line">               , y_data_names = [<span class="string">'Registered'</span>, <span class="string">'Casual'</span>]</span><br><span class="line">               , colors = [<span class="string">'#539caf'</span>, <span class="string">'#7663b0'</span>]</span><br><span class="line">               , x_label = <span class="string">'Day of week'</span></span><br><span class="line">               , y_label = <span class="string">'Check outs'</span></span><br><span class="line">               , title = <span class="string">'Check Outs By Registration Status and Day of Week (0 = Sunday)'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy2hb37m7j20mc0bp0tc.jpg" alt=""></p><h2 id="箱式图"><a href="#箱式图" class="headerlink" title="箱式图"></a>箱式图</h2><ul><li>多级类间数据分布比较</li><li>柱状图 + 堆叠灰度图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只需要指定分类的依据，就能自动绘制箱式图</span></span><br><span class="line">days = np.unique(daily_data[<span class="string">'weekday'</span>])</span><br><span class="line">bp_data = []</span><br><span class="line"><span class="keyword">for</span> day <span class="keyword">in</span> days:</span><br><span class="line">    bp_data.append(daily_data[daily_data[<span class="string">'weekday'</span>] == day][<span class="string">'registered'</span>].values)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义绘图函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">boxplot</span><span class="params">(x_data, y_data, base_color, median_color, x_label, y_label, title)</span>:</span></span><br><span class="line">    _, ax = plt.subplots()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置样式</span></span><br><span class="line">    ax.boxplot(y_data</span><br><span class="line">               <span class="comment"># 箱子是否颜色填充</span></span><br><span class="line">               , patch_artist = <span class="keyword">True</span></span><br><span class="line">               <span class="comment"># 中位数线颜色</span></span><br><span class="line">               , medianprops = &#123;<span class="string">'color'</span>: base_color&#125;</span><br><span class="line">               <span class="comment"># 箱子颜色设置，color：边框颜色，facecolor：填充颜色</span></span><br><span class="line">               , boxprops = &#123;<span class="string">'color'</span>: base_color, <span class="string">'facecolor'</span>: median_color&#125;</span><br><span class="line">               <span class="comment"># 猫须颜色whisker</span></span><br><span class="line">               , whiskerprops = &#123;<span class="string">'color'</span>: median_color&#125;</span><br><span class="line">               <span class="comment"># 猫须界限颜色whisker cap</span></span><br><span class="line">               , capprops = &#123;<span class="string">'color'</span>: base_color&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 箱图与x_data保持一致</span></span><br><span class="line">    ax.set_xticklabels(x_data)</span><br><span class="line">    ax.set_ylabel(y_label)</span><br><span class="line">    ax.set_xlabel(x_label)</span><br><span class="line">    ax.set_title(title)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用绘图函数</span></span><br><span class="line">boxplot(x_data = days</span><br><span class="line">        , y_data = bp_data</span><br><span class="line">        , base_color = <span class="string">'b'</span></span><br><span class="line">        , median_color = <span class="string">'r'</span></span><br><span class="line">        , x_label = <span class="string">'Day of week'</span></span><br><span class="line">        , y_label = <span class="string">'Check outs'</span></span><br><span class="line">        , title = <span class="string">'Total Check Outs By Day of Week (0 = Sunday)'</span>)</span><br></pre></td></tr></table></figure><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fqy2jfzh9vj20qi0csjrw.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用设置&quot;&gt;&lt;a href=&quot;#常用设置&quot; class=&quot;headerlink&quot; title=&quot;常用设置&quot;&gt;&lt;/a&gt;常用设置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;获得当前图表对象 fig = matplotlib.pyplot.gcf() # gcf = get curre
      
    
    </summary>
    
    
      <category term="matplotlib python数据可视化" scheme="http://yoursite.com/tags/matplotlib-python%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>python数据可视化</title>
    <link href="http://yoursite.com/2018/05/03/1/"/>
    <id>http://yoursite.com/2018/05/03/1/</id>
    <published>2018-05-03T02:17:20.000Z</published>
    <updated>2018-05-03T05:22:35.937Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>腾讯漫画</title>
    <link href="http://yoursite.com/2018/04/28/%E8%85%BE%E8%AE%AF%E6%BC%AB%E7%94%BB/"/>
    <id>http://yoursite.com/2018/04/28/腾讯漫画/</id>
    <published>2018-04-28T13:32:32.000Z</published>
    <updated>2018-04-28T13:32:56.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PhantomJS和腾讯漫画爬虫"><a href="#PhantomJS和腾讯漫画爬虫" class="headerlink" title="PhantomJS和腾讯漫画爬虫"></a>PhantomJS和腾讯漫画爬虫</h1><p>相当于一个无界面的浏览器，效率不算高，但是当一些反爬措施无法破解时，可以使用PhantomJs。</p><p>实际中可以难点部分交给PhantomJs处理，其他部分有urllib或scrapy处理</p><p>去官网<code>http://phantomjs.org/</code>下载</p><p>设置一下环境变量</p><p>安装selenium模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from selenium import webdriver</span><br><span class="line"></span><br><span class="line">browser=webdriver.PhantomJS() # phantomjs的接口 生成一个对象</span><br><span class="line">browser.get(&apos;http://www.baidu.com&apos;) # get访问</span><br><span class="line">a=browser.get_screenshot_as_file(&apos;./test.jpg&apos;) # 截屏</span><br><span class="line"># browser.find_element_by_xpath(&apos;//*[@id=&quot;kw&quot;]&apos;).clear() # 通过xpath找到输入框 清除一下</span><br><span class="line"># browser.find_element_by_xpath(&apos;//*[@id=&quot;kw&quot;]&apos;).send_keys(&apos;爬虫&apos;) # send_keys 输入数据</span><br><span class="line"># browser.find_element_by_xpath(&apos;//*[@id=&quot;su&quot;]&apos;).click() # 找到搜索点击按钮</span><br><span class="line"># time.sleep(5)</span><br><span class="line"># a=browser.get_screenshot_as_file(&apos;./test.jpg&apos;)</span><br><span class="line">data=browser.page_source # 找到网页源码</span><br><span class="line">browser.quit()</span><br><span class="line">print(len(data))</span><br><span class="line">import re</span><br><span class="line">title=re.compile(&apos;&lt;title&gt;(.*?)&lt;/title&gt;&apos;).findall(data)</span><br><span class="line">print(title)</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><h2 id="腾讯动漫爬取"><a href="#腾讯动漫爬取" class="headerlink" title="腾讯动漫爬取"></a>腾讯动漫爬取</h2><p>图片地址随机生成没有规律，无法通过以前的办法爬下来漫画</p><p>导入头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.desired_capabilities <span class="keyword">import</span> DesiredCapabilities</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br></pre></td></tr></table></figure><p>上面第三个是伪装浏览器要用到的</p><p>浏览器伪装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dcap = dict(DesiredCapabilities.PHANTOMJS)</span><br><span class="line">dcap[<span class="string">"phantomjs.page.settings.userAgent"</span>] = (<span class="string">"Mozilla/4.0 (compatible; MSIE 5.5; windows NT)"</span>  )</span><br><span class="line">browser = webdriver.PhantomJS(desired_capabilities=dcap)</span><br></pre></td></tr></table></figure><p>访问漫画的网址，保存截图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">browser.get(<span class="string">"http://ac.qq.com/ComicView/index/id/539443/cid/1"</span>)</span><br><span class="line">a=browser.get_screenshot_as_file(<span class="string">"./test.jpg"</span>)</span><br></pre></td></tr></table></figure><p>发现截图只有三张动漫</p><p>必须下滑才能显示下面的图片</p><p>于是，要实现下滑的操作，用js语句实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="comment">#browser.execute_script('window.scrollTo(0,document.body.scrollHeight)')</span></span><br><span class="line">    js=<span class="string">'window.scrollTo('</span>+str(i*<span class="number">1280</span>)+<span class="string">','</span>+str((i+<span class="number">1</span>)*<span class="number">1280</span>)+<span class="string">')'</span></span><br><span class="line">    browser.execute_script(js)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>下滑之后，源码就会出现，可以把源码下载下来了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data=browser.page_source</span><br><span class="line">fh=open(<span class="string">"./dongman.html"</span>,<span class="string">"w"</span>,encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">fh.write(data)</span><br><span class="line">fh.close()</span><br><span class="line">browser.quit()</span><br></pre></td></tr></table></figure><p>现在可以爬取源码中的图片了</p><p>构造正则如下</p><p><code>pat=&#39;&lt;img src=&quot;(http:..ac.tc.qq.com.store_file_download.buid=.*?name=.*?).jpg&quot;&#39;</code></p><p>开爬</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pat=<span class="string">'&lt;img src="(http:..ac.tc.qq.com.store_file_download.buid=.*?name=.*?).jpg"'</span></span><br><span class="line">allimg=re.compile(pat).findall(data)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(allimg)):</span><br><span class="line">    thisurl=allimg[i]</span><br><span class="line">    thisurl2=thisurl.replace(<span class="string">"amp;"</span>,<span class="string">""</span>)+<span class="string">".jpg"</span></span><br><span class="line">    print(thisurl2)</span><br><span class="line">    localpath=<span class="string">"./"</span>+str(i)+<span class="string">".jpg"</span></span><br><span class="line">    urllib.request.urlretrieve(thisurl2,filename=localpath)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PhantomJS和腾讯漫画爬虫&quot;&gt;&lt;a href=&quot;#PhantomJS和腾讯漫画爬虫&quot; class=&quot;headerlink&quot; title=&quot;PhantomJS和腾讯漫画爬虫&quot;&gt;&lt;/a&gt;PhantomJS和腾讯漫画爬虫&lt;/h1&gt;&lt;p&gt;相当于一个无界面的浏览器，效
      
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://yoursite.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>scrapy初步</title>
    <link href="http://yoursite.com/2018/04/28/scrapy/"/>
    <id>http://yoursite.com/2018/04/28/scrapy/</id>
    <published>2018-04-28T13:30:10.000Z</published>
    <updated>2018-04-28T13:31:17.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识scrapy框架"><a href="#认识scrapy框架" class="headerlink" title="认识scrapy框架"></a>认识scrapy框架</h1><p>过去我们写的爬虫只能成为爬虫文件，现在我们要学习的scrapy框架会形成一个完整的爬虫项目。scrapy是python的一个通用型爬虫框架，可以胜任任何爬虫工作，可以提高我们的开发效率，并且适合做一些中大型的爬虫项目。urllib适合写爬虫文件，scrapy更适合做爬虫项目。</p><p>安装好scrapy之后，在命令行输入scrapy -h，会得到可以使用的命令：</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fpykd4tgtzj20gy09emx8.jpg" alt="scrapy命令"></p><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>bench</td><td>即可在项目里面执行，也可在项目外面执行，一般应在项目里运行</td></tr><tr><td>fetch</td><td>直接获取网页</td></tr><tr><td>genspier</td><td>创建爬虫文件，而不是爬虫项目</td></tr><tr><td>runspider</td><td>运行爬虫文件</td></tr><tr><td>settings</td><td>获取setings的值</td></tr><tr><td>shell</td><td>进入交互式页面</td></tr><tr><td>startproject</td><td>创建一个项目</td></tr><tr><td>version</td><td>版本</td></tr><tr><td>view</td><td>爬取并在浏览器中打开</td></tr></tbody></table><p>下面我们在e盘myscrapy文件夹下创建一个名为test的爬虫项目：</p><p><code>scrapy startproject hello</code></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fpykq8s2k8j20i0046jra.jpg" alt="startproject"></p><p>我们的myscrapy多出一个hello文件夹，这个文件夹中就是我们的爬虫项目，我们的爬虫项目就叫hello。</p><p>进入hello项目文件夹</p><p>我们看到还有一个hello文件夹，以及一个scrapy.cfg文件，这个hello文件夹我们称为爬虫项目里面的核心目录，scrapy.cfg主要是用来进行整个爬虫项目的配置的。</p><p>我们再次进入hello文件夹</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fpykw308j0j20mr096js1.jpg" alt="文件夹格式"></p><table><thead><tr><th>文件/目录</th><th>说明</th></tr></thead><tbody><tr><td>_pycache_</td><td>缓存相关的文件，不用管</td></tr><tr><td>spider文件夹</td><td>放置我们项目的爬虫文件</td></tr><tr><td>_init_.py</td><td>初始化文件</td></tr><tr><td>items.py</td><td>存放我们要爬取的具体目标</td></tr><tr><td>middlewates.py</td><td>中间件文件</td></tr><tr><td>pipelines.py</td><td>主要是爬后处理的文件，如是写进文件中还是数据库中</td></tr><tr><td>settings.py</td><td>一个总体设置的文件</td></tr></tbody></table><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fpylwznfubj20hs0dbmxn.jpg" alt="scrapy流程图"></p><p>从调度程序Scheduler开始看，调度程序从scrapy引擎接受请求并排序列入队列从而形成了任务队列，然后把请求发给Downloader，Downloader就会从因特网上下载信息，这些信息是Responses，传给Spider，Spider会根据我们编写的代码进行数据处理、筛选、提取等操作，会获得新的请求网址，再次通过引擎传给任务队列，最终会得到了我们定义的目标Items，然后把Items传给Pipeline进行后续的处理。</p><p>我们创建了爬虫项目，在爬虫项目下我们可以使用一些创建项目前不能使用的指令。这些新的指令被称为项目指令，而那些创建项目之前就能使用的指令被称为全局指令。</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fpymp88wcdj20hg0ad0su.jpg" alt="新指令"></p><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>check</td><td>检查爬虫协议</td></tr><tr><td>crawl</td><td>运行爬虫文件</td></tr><tr><td>edit</td><td>编辑spider，主要在linux中用</td></tr><tr><td>list</td><td>列出当前爬虫项目下可用的爬虫文件</td></tr><tr><td>parse</td><td>解析url并打印结果</td></tr></tbody></table><p>下面详细说一下：</p><p><code>scrapy fetch http://www.baidu.com</code></p><p>获取网页，命令行中会显示我们抓取的网页，记得把settings里的rebots关掉， <code>ROBOTSTXT_OBEY = False</code>。</p><p><code>scrapy runspider</code>  不依托scrapy爬虫项目直接运行爬虫文件，即有的时候不想创建爬虫项目，直接做一个爬虫文件，做了一个爬虫文件后一般 不可直接执行,下面是一个简单的scrapy爬虫文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> Spider</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstSpider</span><span class="params">(Spider)</span>:</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">'First'</span></span><br><span class="line"></span><br><span class="line">allowed_domains=[<span class="string">'baidu.com'</span>]</span><br><span class="line"></span><br><span class="line">start_urls=[<span class="string">'http://www.baidu.com'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>此时，我们可以用runspider+爬虫文件名来运行这个爬虫文件。</p><p>进入爬虫项目后</p><p><code>scrapy settings  --get BOT_NAME</code> 获取了settings.py里的BOT_NAME的值。</p><p><code>scrapy shell http://www.baidu.com</code> 交互式爬取 exit()退出</p><p><code>scrapy view http://news.163.com</code> 会把163新闻首页爬取下来存到本地，并用浏览器打开，如下图所示</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fpz7ip9ryyj213e0lgtj7.jpg" alt="首页"></p><p><code>scrapy bench</code>  测试硬件性能</p><p><code>scrapy genspider -l</code>   查看爬虫模板</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fpz94zj1drj20fn031dfn.jpg" alt="模板"></p><p>我们一般用basic模板即可</p><p>crawl 自动爬虫，做类似搜索引擎的爬虫</p><p>csvfeed 爬取csv格式数据</p><p>xmlfeed 爬取xml格式数据</p><p>scrapy genspider -t 模板 爬虫文件名 域名</p><p><code>scrapy genspider -t basic dangdang dangdang.com</code> 创建一个名为dangdang的爬虫文件，用的是basic模板，指定域名dangdang.com。</p><p><code>scrapy check dangdang</code> 检查dangdang这个爬虫文件是否合规，以合同的方式进行测试</p><hr><p>Spider Contracts</p><hr><p><code>spider crawl dangdang</code>  运行爬虫项目下的爬虫文件，和前面的runspider是不一样的，那里是独立的爬虫文件。如果不想显示日志信息可以加上 –nolog ，即<code>spider crawl dangdang --nolog</code>。</p><p><code>spider list</code> 查看当前项目下有哪些可用的爬虫文件</p><p><code>scrapy parse --spider=dangdang http:www.baidu.com</code>  指定项目中的爬虫文件爬取网页</p><h1 id="当当网爬取实战"><a href="#当当网爬取实战" class="headerlink" title="当当网爬取实战"></a>当当网爬取实战</h1><p>目标：获取商品名 商品链接 商品评论数</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fpzb5nj833j20rh06vabx.jpg" alt="当当网"></p><p>url 是<code>http://search.dangdang.com/?key=python&amp;act=input&amp;show=big#J_tab</code></p><p><code>scrapy startproject dangdang</code></p><p>创建名为dangdang的爬虫项目</p><p><code>cd dangdnag</code></p><p>进入项目目录</p><p><code>scrapy genspider -t basic dd dangdang.com</code></p><p>创建名为dd的爬虫文件，爬虫文件名不能和爬虫项目名重名</p><p>首先，编写items.py，确定我们的目标，创建三个容器来盛放我们的目标：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DangdangItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    link = scrapy.Field()</span><br><span class="line">    comment = scrapy.Field()</span><br></pre></td></tr></table></figure><p>然后，进入dd.py</p><p>导入我们的目标</p><p><code>from dangdang.items import DangdangItem</code></p><p>容器实例化</p><p>item=DangdangItem()</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fpzcxgo4c7j216t04at9b.jpg" alt="html"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">" Python编程 从入门到实践"</span>  <span class="attr">ddclick</span>=<span class="string">"act=normalResult_picture&amp;pos=24003310_0_1_q"</span> <span class="attr">class</span>=<span class="string">"pic"</span> <span class="attr">name</span>=<span class="string">"itemlist-picture"</span>  <span class="attr">dd_name</span>=<span class="string">"单品图片"</span> <span class="attr">href</span>=<span class="string">"http://product.dangdang.com/24003310.html"</span>  <span class="attr">target</span>=<span class="string">"_blank"</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'http://img3m0.ddimg.cn/67/4/24003310-1_b_5.jpg'</span> <span class="attr">alt</span>=<span class="string">' Python编程 从入门到实践'</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"price"</span> &gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"price_n"</span>&gt;</span>&amp;yen;69.80<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color: #878787;text-decoration:none;"</span>&gt;</span>定价：<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"price_r"</span>&gt;</span>&amp;yen;89.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>(<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"price_s"</span>&gt;</span>7.85折<span class="tag">&lt;/<span class="name">span</span>&gt;</span>)<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"title"</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">" Python编程 从入门到实践"</span> <span class="attr">href</span>=<span class="string">"http://product.dangdang.com/24003310.html"</span> <span class="attr">ddclick</span>=<span class="string">"act=normalResult_title&amp;pos=24003310_0_1_q"</span> <span class="attr">name</span>=<span class="string">"itemlist-title"</span> <span class="attr">dd_name</span>=<span class="string">"单品标题"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> &gt;</span> <span class="tag">&lt;<span class="name">font</span> <span class="attr">class</span>=<span class="string">"skcolor_ljg"</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">font</span>&gt;</span>编程 从入门到实践<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"search_hot_word"</span> &gt;</span>Python3.5编程入门图书 机器学习 数据处理 网络爬虫热门编程语言 从基本概念到完整项目开发 帮助零基础读者迅速掌握Python编程 附赠源代码文件<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"star"</span> &gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"level"</span> &gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"width: 90%;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://product.dangdang.com/24003310.html?point=comment_point"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">name</span>=<span class="string">"itemlist-review"</span> <span class="attr">dd_name</span>=<span class="string">"单品评论"</span> <span class="attr">ddclick</span>=<span class="string">"act=click_review_count&amp;pos=24003310_0_1_q"</span>&gt;</span>5307条评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"empty_div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"new_lable"</span> <span class="attr">y</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tag_box"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shop_button"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bottom_p"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>  <span class="attr">class</span>=<span class="string">'search_btn_cart '</span> <span class="attr">name</span>=<span class="string">'Buy'</span> <span class="attr">dd_name</span>=<span class="string">'加入购物车'</span> <span class="attr">href</span>=<span class="string">'javascript:AddToShoppingCart(24003310)'</span> <span class="attr">ddclick</span>=<span class="string">'act=normalResult_addToCart&amp;pos=24003310_0_1_q'</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">'icon'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">'search_btn_collect'</span> <span class="attr">name</span>=<span class="string">'collect'</span> <span class="attr">dd_name</span>=<span class="string">'加入收藏'</span> <span class="attr">id</span>=<span class="string">"lcase24003310"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">name</span>=<span class="string">"Sc"</span> <span class="attr">ddclick</span>=<span class="string">'act=normalResult_favor&amp;pos=24003310_0_1_q'</span>&gt;</span>收藏<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器中，搜索商品名，有三个地方有我们要找的商品名，选哪个地方呢？我们试一下第一个a标签中的name=”itemlist-picture”，搜索了一下发现有60个，正好是商品页的商品数，再对应一下，每个商品都有该属性，于是可以用该属性值来提取商品名，xpath表达式是：</p><p><code>//a[@name=&quot;itemlist-picture&quot;]/@title</code></p><p>同理取商品链接的xpath表达式是：</p><p><code>//a[@name=&quot;itemlist-title&quot;]/@href</code></p><p>取商品评论数的xpath表达式是：</p><p><code>//a[@name=&quot;itemlist-review&quot;]/text()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> dangdang.items <span class="keyword">import</span> DangdangItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DdSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'dd'</span></span><br><span class="line">    allowed_domains = [<span class="string">'dangdang.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://search.dangdang.com/?key=python&amp;act=input&amp;show=big#J_tab'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item=DangdangItem()</span><br><span class="line">        item[<span class="string">'title'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-picture"]/@title'</span>).extract()</span><br><span class="line">        item[<span class="string">'link'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-title"]/@href'</span>).extract()</span><br><span class="line">        item[<span class="string">'comment'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-review"]/text()'</span>).extract()</span><br><span class="line">        print(item[<span class="string">'link'</span>])</span><br></pre></td></tr></table></figure><p>我们用print打印验证一下</p><p>运行爬虫文件</p><p><code>scrapy crawl dd</code></p><p>不显示输出日志的话用</p><p><code>scrapy crawl dd --nolog</code></p><p>命令行中会显示我们爬取的名称、链接和评论数</p><p>最后，我们要进行处理了，把这些内容写进数据库中。</p><p>把上面的<code>print(item[&#39;link&#39;])</code>改成<code>yield item</code>即可把我们获取的item传到pipelines中，下面我们到pipelines.py中进行处理。</p><p>我们要去settings.py里开启pipelines,即去掉注释，下面是去掉注释后的代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'dangdang.pipelines.DangdangPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在pipelines.py中输入以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DangdangPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(item[<span class="string">'title'</span>])):</span><br><span class="line">            title=item[<span class="string">'title'</span>][i]</span><br><span class="line">            link=item[<span class="string">'link'</span>][i]</span><br><span class="line">            comment=item[<span class="string">'comment'</span>][i]</span><br><span class="line">            print(title+link+comment)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>重新运行爬虫文件，开打印效果。</p><p>成功后我们下面写入数据库中：</p><p>依次在mysql命令行中输入以下代码建立数据库和数据表：</p><p><code>create database dd;</code></p><p><code>use dd;</code></p><p><code>create table goods(id int(32) auto_increment primary key,title varchar(100),link varchar(100) unique,comment varchar(100))ENGINE=InnoDB DEFAULT CHARSET=utf8;</code></p><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`goods`</span>(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> AUTO_INCREMENT,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`link`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line"><span class="string">`comment`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> ( <span class="string">`id`</span> )</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>然后，把title、link、comment写入数据库:</p><p>有两种写法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DangdangPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        conn = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, passwd=<span class="string">'root'</span>, db=<span class="string">'dd'</span>, charset=<span class="string">'utf8'</span>, use_unicode=<span class="keyword">True</span>)</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(item[<span class="string">'title'</span>])):</span><br><span class="line">            title=item[<span class="string">'title'</span>][i]</span><br><span class="line">            link=item[<span class="string">'link'</span>][i]</span><br><span class="line">            comment=item[<span class="string">'comment'</span>][i]</span><br><span class="line">            sql = <span class="string">'insert into goods(title,link,comment) values("'</span>+title+<span class="string">'","'</span>+link+<span class="string">'","'</span>+comment+<span class="string">'")'</span> <span class="comment"># values是字符串的话必须用引号引起来</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">            conn.query(sql)</span><br><span class="line">            conn.commit() <span class="comment"># 不能漏掉</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> err：</span><br><span class="line">            print(err)</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DangdangPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        conn = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, passwd=<span class="string">'root'</span>, db=<span class="string">'dd'</span>, charset=<span class="string">'utf8'</span>, use_unicode=<span class="keyword">True</span>)</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(item[<span class="string">'title'</span>])):</span><br><span class="line">            title=item[<span class="string">'title'</span>][i]</span><br><span class="line">            link=item[<span class="string">'link'</span>][i]</span><br><span class="line">            comment=item[<span class="string">'comment'</span>][i]</span><br><span class="line">            sql = <span class="string">'insert into goods(title,link,comment) values("%s", "%s", "%s")'</span></span><br><span class="line">            data = (str(title), str(link), str(comment))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(sql %data)</span><br><span class="line">            conn.commit()</span><br><span class="line">             <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">             print(err)</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><p>上面我们是抓取了一页，如果想抓取多页怎么办，我们点击下面的页码，发现url的规律，构造url如下：</p><p><code>url = &#39;http://search.dangdang.com/?key=python&amp;act=input&amp;show=big&amp;page_index=&#39;+str(i)</code></p><p>而抓取多页的方式和抓取一页的方式是一样的，我们只需要再调用我们的parse方法即可，此时要用到Request方法，导入包<code>from scrapy.http import Request</code>。</p><p>用Request抓取url</p><p>最终代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> dangdang.items <span class="keyword">import</span> DangdangItem</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DdSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'dd'</span></span><br><span class="line">    allowed_domains = [<span class="string">'dangdang.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://search.dangdang.com/?key=python&amp;act=input&amp;show=big#J_tab'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        item=DangdangItem()</span><br><span class="line">        item[<span class="string">'title'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-picture"]/@title'</span>).extract()</span><br><span class="line">        item[<span class="string">'link'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-title"]/@href'</span>).extract()</span><br><span class="line">        item[<span class="string">'comment'</span>]=response.xpath(<span class="string">'//a[@name="itemlist-review"]/text()'</span>).extract()</span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">8</span>):</span><br><span class="line">            url = <span class="string">'http://search.dangdang.com/?key=python&amp;act=input&amp;show=big&amp;page_index='</span>+str(i)</span><br><span class="line">            <span class="keyword">yield</span> Request(url, callback=self.parse)</span><br></pre></td></tr></table></figure><h1 id="scrapy模拟登录"><a href="#scrapy模拟登录" class="headerlink" title="scrapy模拟登录"></a>scrapy模拟登录</h1><p>思路：等网站登录进行抓包分析，分析出form表单中有哪些数据，找到真实的post地址，构造数据，把信息post到真实的地址，实现登录并保存cookie。</p><h3 id="豆瓣网"><a href="#豆瓣网" class="headerlink" title="豆瓣网"></a>豆瓣网</h3><p>登陆页url<code>https://accounts.douban.com/login</code></p><p>在setting.py内启动<code>DOWNLOAD_DELAY=3</code> 以及<em>User-Agent</em>代理：<code>USER_AGENT = &#39;Douban (+http://www.douban.com)&#39;</code></p><p>我们先爬一下这个页面，爬豆瓣的时要进行浏览器伪装，设置headers，因此不用start_urls,而是重载start_requests方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D1Spider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'d1'</span></span><br><span class="line">    allowed_domains = [<span class="string">'douban.com'</span>]</span><br><span class="line">    <span class="comment">#start_urls = ['http://douban.com/']</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'</span>&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 首先爬一次登录页，然后进入回调函数parse()</span></span><br><span class="line">        <span class="keyword">return</span> [Request(<span class="string">'https://accounts.douban.com/login'</span>, meta=&#123;<span class="string">'cookiejar'</span>: <span class="number">1</span>&#125;, callback=self.parse,headers=self.header)]</span><br></pre></td></tr></table></figure><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq0luwwoezj216d0h177d.jpg" alt="豆瓣"></p><p>浏览器中F12,然后在登录页面输错账号密码，观察post的form格式，上面红框就是我们要找的内容。</p><p>构造post信息</p><p>有时登陆需要验证码，有时不需要</p><p>需要的时候，html页面中会有</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"captcha_image"</span> <span class="attr">src</span>=<span class="string">"[https://www.douban.com/misc/captcha?id=2F79w3zHWIEQjiVe03ZbnfzO:en&amp;size=s](https://www.douban.com/misc/captcha?id=2F79w3zHWIEQjiVe03ZbnfzO:en&amp;size=s)"</span> <span class="attr">alt</span>=<span class="string">"captcha"</span> <span class="attr">class</span>=<span class="string">"captcha_image"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>因此，如果能用xpath取到这个img标签就说明有验证码，否则，就没有验证码。</p><p>有验证码和没有验证码我们要构造的post信息是不一样的</p><p>有验证码时，构造的post必须含有’captcha-solution’这一项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">               <span class="string">'redir'</span>: <span class="string">'https://www.douban.com/'</span>,</span><br><span class="line">               <span class="string">'form_email'</span>: <span class="string">'zhao750456695@163.com'</span>,</span><br><span class="line">               <span class="string">'form_password'</span>: <span class="string">'zhaojie123'</span></span><br><span class="line">               <span class="string">'captcha-solution'</span>: ,</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><p>关键问题是验证码识别</p><h2 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a>验证码识别</h2><p>1.半自动处理</p><p>半自动处理是将验证码图片储存到本地，手工打开验证码图片进行识别并输入验证码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">       <span class="comment"># 判断是否有验证码</span></span><br><span class="line">       captcha=response.xpath(<span class="string">'//img[@id="captcha_image"]/@src'</span>).extract()</span><br><span class="line">       <span class="comment"># 设置要传递的post信息，此时没有验证码字段</span></span><br><span class="line">       print(response.xpath(<span class="string">'/html/head/title/text()'</span>).extract())</span><br><span class="line">       <span class="keyword">if</span>(len(captcha)&gt;<span class="number">0</span>):</span><br><span class="line">           print(<span class="string">'此时有验证码'</span>)</span><br><span class="line">           localpath=<span class="string">'./captcha.png'</span></span><br><span class="line">           urllib.request.urlretrieve(captcha[<span class="number">0</span>],filename=localpath)</span><br><span class="line">           captcha_value=input(<span class="string">'请输入验证码'</span>)</span><br><span class="line">           data = &#123;</span><br><span class="line">               <span class="string">'redir'</span>: <span class="string">'https://www.douban.com/'</span>,</span><br><span class="line">               <span class="string">'form_email'</span>: <span class="string">'xxxxxxx,</span></span><br><span class="line"><span class="string">               '</span>form_password<span class="string">': '</span>xxxxxx<span class="string">',</span></span><br><span class="line"><span class="string">               '</span>captcha-solution<span class="string">': captcha_value</span></span><br><span class="line"><span class="string">           &#125;</span></span><br></pre></td></tr></table></figure><p>2.接口处理</p><p>下面我们以云打码平台为例<code>http://www.yundama.com/</code></p><p>注册一个开发者用户和一个普通用户</p><p>登录开发者用户</p><p>点击网站上方菜单栏开发者文档</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fq0ovzn3ubj20ti0hswgj.jpg" alt="云打码"></p><p>点击根据开发语言下载DEMO一栏的链接，新页面中点击<em>Python调用示例下载</em>，下载压缩包。</p><p>解压缩到你想要解压缩的地方</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq0p3h6qpjj20lk0bn74o.jpg" alt="云打码"></p><p>打开<code>YDMPython3.x.py</code></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq0p7wanq7j20qr0aigm9.jpg" alt="path"></p><p>如上图红框，填上API的路径，我们选的是64位的，34位系统选择另一个即可。</p><p>在云打码平台开发者账号下，点击<em>我的软件</em>选择<em>添加新软件</em>，名字随便起，如下所示：</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq0paqq1rlj20u0062q3f.jpg" alt="秘钥"></p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fq0pemtbmzj20rj045wep.jpg" alt="秘钥"></p><p>填完API路径后，继续输入appId和appKey，这两项就是软件代码和通讯秘钥，填上即可。</p><p>在下面所示的位置填上自己的普通账号和密码即可。</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq0phijxzsj20l602rmx3.jpg" alt="user"></p><p>在下面的位置填上获取的验证码图片的路径。</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq0pnl5rvtj20mm081mxg.jpg" alt="验证码"></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq0pw0aud0j20n40degm7.jpg" alt="img"></p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq0pw3o750j20pp05nglp.jpg" alt=""></p><p>根据网站的说明和豆瓣网站的验证码情况，把codetype改为3000</p><p>配置完成，去验证一下看看能不能运行，打开cmd，进入配置文件的目录，运行配置文件：</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq0prlbm1ej20hm04q0sp.jpg" alt="运行"></p><p>出现这个结果说明配置正确</p><p>有普通识别和一键识别，留一个即可，我留了一键识别，可以把普通识别删掉或注释掉。注释掉所有打印的地方，只留下下面：</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq0qxua16wj20s60480sp.jpg" alt=""></p><p>result.value后面加上decode(),把byte转为str。</p><p>于是，在爬虫文件执行上面的cmd命令，可以自动识别验证码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    <span class="comment"># 判断是否有验证码</span></span><br><span class="line">    captcha=response.xpath(<span class="string">'//img[@id="captcha_image"]/@src'</span>).extract()</span><br><span class="line">    <span class="comment"># 设置要传递的post信息，此时没有验证码字段</span></span><br><span class="line">    print(response.xpath(<span class="string">'/html/head/title/text()'</span>).extract())</span><br><span class="line">    <span class="keyword">if</span>(len(captcha)&gt;<span class="number">0</span>):</span><br><span class="line">        print(<span class="string">'此时有验证码'</span>)</span><br><span class="line">        localpath=<span class="string">'./captcha.png'</span></span><br><span class="line">        urllib.request.urlretrieve(captcha[<span class="number">0</span>],filename=localpath)</span><br><span class="line">        <span class="comment">#captcha_value=input('请输入验证码')</span></span><br><span class="line">        cmd=<span class="string">'python E:/Python调用示例/YDMPython3.x.py'</span></span><br><span class="line">        r=os.popen(cmd) <span class="comment"># 执行cmd命令</span></span><br><span class="line">        captcha_value=r.read() <span class="comment"># 读取命令执行结果</span></span><br><span class="line">        print(<span class="string">'验证码识别结果为:'</span>+captcha_value)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'redir'</span>: <span class="string">'https://www.douban.com/'</span>,</span><br><span class="line">            <span class="string">'form_email'</span>: <span class="string">'xxxx'</span>,</span><br><span class="line">            <span class="string">'form_password'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">            <span class="string">'captcha-solution'</span>: captcha_value</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'redir'</span>: <span class="string">'https://www.douban.com/'</span>,</span><br><span class="line">            <span class="string">'form_email'</span>: <span class="string">'xxxx'</span>,</span><br><span class="line">            <span class="string">'form_password'</span>: <span class="string">'xxx'</span></span><br><span class="line">        &#125;</span><br><span class="line">    print(<span class="string">'登录中'</span>)</span><br><span class="line">    <span class="comment"># 通过FormRequest.from_response()进行登录</span></span><br><span class="line">    <span class="keyword">return</span>  [FormRequest.from_response(response,</span><br><span class="line">                                       <span class="comment"># 设置cookie信息</span></span><br><span class="line">                                       meta=&#123;<span class="string">'cookiejar'</span>: response.meta[<span class="string">'cookiejar'</span>]&#125;,</span><br><span class="line">                                       headers=self.header,</span><br><span class="line">                                       formdata=data,</span><br><span class="line">                                       callback=self.next,</span><br><span class="line">                                       )]</span><br></pre></td></tr></table></figure><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq0r1gp3c0j20gx04iq2t.jpg" alt=""></p><p>大功告成</p><p>3.自动识别</p><p>需要运用机器学习的内容，此处略过不讲。</p><h1 id="scrapy百度新闻爬取"><a href="#scrapy百度新闻爬取" class="headerlink" title="scrapy百度新闻爬取"></a>scrapy百度新闻爬取</h1><p>去重，布隆过滤器。</p><p>我们要爬取百度新闻首页的所有新闻标题，内容和链接</p><p>我们先来分析一下，查看源代码，我们发现，网页源代码中只有部分内容，举下面网页来说，北京新闻以上的部分我们都能在html源码中找到，而北京新闻及下面的内容我们找不到，因此能找到的部分我们直接从网页爬取即可，找不到的部分要进行抓包分析。</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fpzl6ejyrxj216e0n7guo.jpg" alt="baidunews"></p><p>我们使用fiddler，下滑页面，触发网页链接。</p><p>我们首先发现了一个json数据格式的链接，查看其内容，是Unicode编码的形式，我们进行解码，发现确实是新闻内容。</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fpzltuxnznj21880fmaeh.jpg" alt="baidu"></p><p>但是明显只是我们要找的新闻的一部分，我们继续寻找。</p><p>会找到链接形式的数据也包含新闻</p><p>我们把这些url全都复制下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">http://news.baidu.com/widget?id=LocalNews&amp;ajax=json&amp;t=1522747393879</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=civilnews&amp;t=1522747396140</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=InternationalNews&amp;t=1522747396161</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=EnterNews&amp;t=1522747396185</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=SportNews&amp;t=1522747396239</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=FinanceNews&amp;t=1522747396346</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=TechNews&amp;t=1522747396382</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=MilitaryNews&amp;t=1522747396426</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=InternetNews&amp;t=1522747396485</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=DiscoveryNews&amp;t=1522747396523</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=LadyNews&amp;t=1522747396581</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=HealthNews&amp;t=1522747396645</span><br><span class="line"></span><br><span class="line">http://news.baidu.com/widget?id=PicWall&amp;t=1522747396778</span><br></pre></td></tr></table></figure><p>我们发现最重要的就是id了，我们只要获取全部的id即可爬取新闻了。</p><p><code>http://news.baidu.com/widget?id=LocalNews&amp;ajax=json&amp;t=1522747393879</code></p><p>上面链接的&amp;t=1522747393879是时间戳，我们并不需要，可以删掉，而且这个链接得到的数据是json形式，下面的链接都不是，差别就在ajax=json，我们把下面链接的id替换上面连接的id，就可以把下面的链接的数据全转为json的形式，因此我们可以统一数据格式了。</p><p>我们继续观察这些数据，发现有些地方有细微差别，摘取一些如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"url"</span>:<span class="string">"http:\/\/news.timedg.com\/2018-04\/03\/20652324.shtml"</span>,<span class="attr">"title"</span>:<span class="string">"\u4ece\u592e\u884c\u5230\u516c\u5b89\u90e8\uff0c\u591a\u90e8\u95e8\u8054\u5408\u6574\u6cbb\u5047\u79bb\u5a5a\u3001\u5047\u7ed3\u5a5a"</span>,<span class="attr">"time"</span>:<span class="string">"09:30"</span>,<span class="attr">"imgUrl"</span>:<span class="string">"http:\/\/t11.baidu.com\/it\/u=1303570930,2885677410&amp;fm=173&amp;app=12&amp;f=JPEG?w=218&amp;h=146&amp;s=5498CC3A05584DC854FDF1DE010050B3"</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"ID":"7057276","TS":"2018-04-03 13:32:25","m_class_id":"-1","m_local_id":"-1","m_url":"http:\/\/news.ifeng.com\/a\/20180403\/57277278_0.shtml?_zbs_baidu_news","m_title":"\u4ea4\u901a\u8fd0\u8f93\u90e8\uff1a\u6e05\u660e\u5047\u671f\u9ad8\u901f\u516c\u8def\u5c0f\u5ba2\u8f66\u514d\u8d39\u901a\u884c","m_site":"","m_editor":"","m_news_time":"0","m_public_time":"13:32","m_text":"","m_image_url":"","m_is_picnews":"0","m_is_vidnews":"0","m_is_manualnews":"1","m_ext_type":"9","m_ext":"&#123;\"type\":\"1\",\"vote\":\"0\"&#125;","m_topic_id":0,"m_relate_count":"1","m_same_count":"1","m_relate_url":"http:\/\/xinwen.eastday.com\/a\/xjump.html?id=180328111930970","m_v_table":"t_class_focus","m_v_class_id":"1","m_v_local_id":"-20480000","m_v_topic_id":"-20480000","m_v_tag":"class_focustop","m_position":"4","m_user":"lvnanjing_sh","m_add_time":"1522216660","m_time_start":"0","m_time_end":"1522905530","url_sign":null,"_ext":&#123;"type":"1","vote":"0"&#125;,"_url_type":1,"m_public_time_seconds":"1522733545"&#125;,&#123;"ID":"7057277","TS":"2018-04-03 13:35:39","m_class_id":"-1","m_local_id":"-1","m_url":"http:\/\/xinwen.eastday.com\/a\/xjump.html?id=180403114015007","m_title":"\u7236\u6bcd\u7838\u94b1\u201c\u517b\u751f\u201d\u6295\u8d44 \u513f\u5b50\u6012\u8f9e\u804c\u5f00\u529e\u9632\u9a97\u516c\u53f8","m_site":"","m_editor":"","m_news_time":"0","m_public_time":"13:35","m_text":"","m_image_url":"","m_is_picnews":"0","m_is_vidnews":"0","m_is_manualnews":"1","m_ext_type":"9","m_ext":"&#123;\"type\":\"1\",\"vote\":\"0\"&#125;","m_topic_id":0,"m_relate_count":"1","m_same_count":"1","m_relate_url":"http:\/\/news.china.com\/domestic\/945\/20180328\/32241107.html","m_v_table":"t_class_focus","m_v_class_id":"1","m_v_local_id":"-20480000","m_v_topic_id":"-20480000","m_v_tag":"class_focustop","m_position":"5","m_user":"lvnanjing_sh","m_add_time":"1522216660","m_time_start":"0","m_time_end":"1522905051","url_sign":null,"_ext":&#123;"type":"1","vote":"0"&#125;,"_url_type":1,"m_public_time_seconds":"1522733739"&#125;,&#123;"ID":"7057278","TS":"2018-04-03</span><br></pre></td></tr></table></figure><p>url链接有些前面是”url”有些是”m_relate_url”有些是”m_url”,我们又发现”m_relate_url”和”m_url”实际上是一样的，因此我们只要提取url和m_url即可。</p><p>分析完毕，开始写代码吧。</p><h1 id="scrapy与urllib整合"><a href="#scrapy与urllib整合" class="headerlink" title="scrapy与urllib整合"></a>scrapy与urllib整合</h1><p>目标:爬取京东书籍的名称、价格、销售方、出版社、评论数、作者、频道</p><p>规定最上面的目录，如文学综合馆，名为馆，馆下一级目录，如小说，名为频道1，再下一级目录，如小说下的<strong>侦探/悬疑/推理</strong>，名为频道2</p><p>首先分析一下页面，打开京东图书网页，左侧的图书分类，大类是<em>文学综合馆</em>、<em>童书馆</em>等等馆，各个馆下面还有子类。</p><p>各个馆</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq1ivi2vbfj212e0lfwtb.jpg" alt=""></p><p>网页源代码</p><p><img src="C:\Users\my\Desktop\图片\book.jd.com.png" alt="源码"></p><p>注意和检查元素看到的不一样:</p><p><img src="http://wx2.sinaimg.cn/mw690/c3a5a043ly1fq1kbqgp9oj21700fq195.jpg" alt=""></p><p>这是因为查看网页源码是服务器发回来的原始代码，而在开发者工具看到的是被 Javascript 动态修改过后的源码。</p><p>文学综合馆*下面的子类</p><p>url <code>https://channel.jd.com/p_wenxuezongheguan.html</code></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1iyws5gfj212h0kjh2g.jpg" alt="馆"></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1jpx6ny3j212r0l1t9z.jpg" alt="channel"></p><p>点击第一个<em>侦探悬疑</em>，进入图书列表</p><p>url <code>https://list.jd.com/list.html?cat=1713,3258,3304</code></p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq1j0alx8bj214h0l64a6.jpg" alt="list"></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1rt8ox64j209l01q742.jpg" alt=""></p><p>我们把<em>文学综合馆</em>下面的<em>小说</em>和<em>侦探/悬疑/推理</em>分别定义为频道1和频道2</p><p>大体思路就是在京东图书主页爬取各个馆的链接、名称等信息，进入各个馆，在各个馆的页面爬取各个子类的链接等信息，进入子类爬取图书信息。</p><p>怎么抓各个馆呢，其实馆的数量并不多，省心省力的办法是直接把这些馆打开，把链接复制下来。</p><p>其次就是观察网页源码，发现规律进行爬取，各个馆都藏在下面这段json样式中：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navFirst: [&#123;"NAME":"\u7279\u8272\u5206\u7c7b","URL":"\/\/book.jd.com\/withoutHref","ANCHOR":"1","children":[&#123;"NAME":"\u7545\u9500\u699c","URL":"\/\/book.jd.com\/booktop\/1713-0-0-0-10001-1.html"&#125;,&#123;"NAME":" \u70ed\u641c\u699c","URL":"\/\/book.jd.com\/hotsearch.html"&#125;,&#123;"NAME":"\u7279\u4ef7\u597d\u4e66","URL":"https:\/\/sale.jd.com\/act\/PdxOpZVLG4fa3.html"&#125;]&#125;,&#123;"NAME":"\u6587\u5b66\u7efc\u5408\u9986","URL":"\/\/channel.jd.com\/p_wenxuezongheguan.html","ANCHOR":"2","children":[&#123;"NAME":"\u5c0f\u8bf4","URL":"\/\/channel.jd.com\/1713-3258.html"&#125;,&#123;"NAME":" \u6587\u5b66","URL":"\/\/channel.jd.com\/1713-3259.html"&#125;,&#123;"NAME":" \u4f20\u8bb0","URL":"\/\/channel.jd.com\/1713-3261.html"&#125;,&#123;"NAME":" \u9752\u6625","URL":"\/\/list.jd.com\/list.html?cat=1713,3260"&#125;,&#123;"NAME":" \u52a8\u6f2b","URL":"\/\/list.jd.com\/list.html?cat=1713,3272"&#125;,&#123;"NAME":"\u79d1\u5e7b","URL":"\/\/list.jd.com\/list.html?cat=1713,3258,6569&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":" \u60ac\u7591","URL":"\/\/list.jd.com\/list.html?cat=1713,3258,3304&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":" \u6563\u6587","URL":"\/\/list.jd.com\/list.html?cat=1713,3259,3333&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main","YFLAG":"0"&#125;,&#123;"NAME":" \u7eaa\u5b9e","URL":"\/\/list.jd.com\/list.html?cat=1713,3259,3330&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;jl=4_2_0#J_main"&#125;,&#123;"NAME":" \u60ca\u609a","URL":"\/\/list.jd.com\/list.html?cat=1713,3258,3305&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;]&#125;,&#123;"NAME":"\u7ae5\u4e66\u9986","URL":"\/\/book.jd.com\/children.html","ANCHOR":"3","CUSTOM1":"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png","children":[&#123;"NAME":"\uff10-\uff12","URL":"\/\/book.jd.com\/children0-2.html"&#125;,&#123;"NAME":"\uff13-\uff16","URL":"\/\/book.jd.com\/children3-6.html"&#125;,&#123;"NAME":"7-10","URL":"\/\/book.jd.com\/children7-10.html"&#125;,&#123;"NAME":"11-14","URL":"\/\/book.jd.com\/children11-14.html"&#125;,&#123;"NAME":"\u7ed8\u672c  ","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,4761&amp;go=0"&#125;,&#123;"NAME":"\u79d1\u666e\u767e\u79d1 ","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3399"&#125;,&#123;"NAME":"\u513f\u7ae5\u6587\u5b66 ","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3394"&#125;,&#123;"NAME":"\u5e7c\u513f\u542f\u8499","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3395&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":"\u52a8\u6f2b\u5361\u901a","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3391&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":" \u5c11\u513f\u82f1\u8bed","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3401"&#125;,&#123;"NAME":" \u76ca\u667a\u6e38\u620f","URL":"\/\/list.jd.com\/list.html?cat=1713,3263,3398&amp;page=1&amp;sort=sort%5Ftotalsales15%5Fdesc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;]&#125;,&#123;"NAME":"\u6559\u80b2\u9986","URL":"\/\/book.jd.com\/education.html","ANCHOR":"4","CUSTOM1":"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png","children":[&#123;"NAME":"\u4e2d\u5c0f\u6559\u8f85","URL":"\/\/channel.jd.com\/1713-3289.html"&#125;,&#123;"NAME":"\u5916\u8bed\u5b66\u4e60","URL":"\/\/channel.jd.com\/1713-3291.html"&#125;,&#123;"NAME":"\u8003\u8bd5","URL":"\/\/channel.jd.com\/1713-3290.html"&#125;,&#123;"NAME":"\u6559\u6750","URL":"\/\/channel.jd.com\/1713-11047.html"&#125;,&#123;"NAME":"\u5b57\u5178\u8bcd\u5178","URL":"\/\/channel.jd.com\/1713-3294.html"&#125;,&#123;"NAME":"\u8bfe\u5916\u8bfb\u7269","URL":"\/\/list.jd.com\/list.html?cat=1713,3289,3839"&#125;,&#123;"NAME":"\u5b57\u5e16","URL":"\/\/list.jd.com\/list.html?cat=1713,3289,6592"&#125;,&#123;"NAME":"\u4f5c\u6587","URL":"\/\/list.jd.com\/list.html?cat=1713,3289,3837"&#125;,&#123;"NAME":"\u9ad8\u4e2d\u6559\u8f85","URL":"https:\/\/sale.jd.com\/act\/Q3hUClDMENPf.html"&#125;,&#123;"NAME":"\u7559\u5b66\u8003\u8bd5","URL":"https:\/\/sale.jd.com\/act\/pxE6irwM52vK1PTY.html"&#125;,&#123;"NAME":"\u56db\u516d\u7ea7","URL":"https:\/\/sale.jd.com\/act\/g4kFXImhBWu.html"&#125;]&#125;,&#123;"NAME":"\u4eba\u6587\u793e\u79d1\u9986","URL":"\/\/book.jd.com\/library\/socialscience.html","ANCHOR":"5","children":[&#123;"NAME":"\u653f\u6cbb\u519b\u4e8b","URL":"\/\/channel.jd.com\/1713-3276.html"&#125;,&#123;"NAME":"\u4f20\u7edf\u6587\u5316","URL":"\/\/channel.jd.com\/p_guoxueguji.html"&#125;,&#123;"NAME":"\u5386\u53f2","URL":"\/\/channel.jd.com\/1713-3273.html"&#125;,&#123;"NAME":"\u5fc3\u7406","URL":"\/\/channel.jd.com\/1713-3279.html"&#125;,&#123;"NAME":"\u54f2\u5b66\u5b97\u6559","URL":"\/\/channel.jd.com\/p_zhexuezongjiao.html"&#125;,&#123;"NAME":"\u793e\u4f1a\u79d1\u5b66","URL":"\/\/channel.jd.com\/1713-3281.html"&#125;,&#123;"NAME":"\u6587\u5316","URL":"\/\/list.jd.com\/list.html?cat=1713,3280,3664"&#125;,&#123;"NAME":"\u6cd5\u5f8b","URL":"\/\/channel.jd.com\/1713-3277.html"&#125;]&#125;,&#123;"NAME":"\u7ecf\u7ba1\u7efc\u5408\u9986","URL":"\/\/channel.jd.com\/p_Comprehensive.html","ANCHOR":"6","children":[&#123;"NAME":"\u7ba1\u7406","URL":"\/\/channel.jd.com\/1713-3266.html"&#125;,&#123;"NAME":" \u7ecf\u6d4e","URL":"\/\/channel.jd.com\/1713-3264.html"&#125;,&#123;"NAME":" \u6295\u8d44","URL":"\/\/channel.jd.com\/1713-3265.html"&#125;,&#123;"NAME":" \u4f1a\u8ba1","URL":"\/\/list.jd.com\/list.html?cat=1713,3264,3409&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":" \u8425\u9500","URL":"\/\/list.jd.com\/list.html?cat=1713,3266,3444&amp;page=1&amp;sort=sort%5Ftotalsales15%5Fdesc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;]&#125;,&#123;"NAME":"\u52b1\u5fd7\u6210\u529f\u9986","URL":"\/\/channel.jd.com\/1713-3267.html","ANCHOR":"7","children":[&#123;"NAME":"\u5973\u6027\u52b1\u5fd7","URL":"\/\/list.jd.com\/list.html?cat=1713,3267,3463&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":"\u5fc3\u7075\u9e21\u6c64","URL":"\/\/list.jd.com\/list.html?cat=1713,3267,3466&amp;page=1&amp;sort=sort%5Ftotalsales15%5Fdesc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":"\u793e\u4ea4","URL":"\/\/list.jd.com\/list.html?cat=1713,3267,3459&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;,&#123;"NAME":"\u53e3\u624d","URL":"\/\/list.jd.com\/list.html?cat=1713,3267,3470"&#125;]&#125;,&#123;"NAME":"\u751f\u6d3b\u9986","URL":"\/\/book.jd.com\/library\/life.html","ANCHOR":"8","CUSTOM1":"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png","children":[&#123;"NAME":"\u5b55\u4ea7\u80ce\u6559","URL":"\/\/list.jd.com\/list.html?cat=1713,13613&amp;go=0"&#125;,&#123;"NAME":"\u80b2\u513f\u5bb6\u6559","URL":"\/\/channel.jd.com\/1713-3270.html"&#125;,&#123;"NAME":"\u7f8e\u98df","URL":"\/\/list.jd.com\/list.html?cat=1713,9278&amp;go=0"&#125;,&#123;"NAME":"\u5bb6\u5c45","URL":"\/\/list.jd.com\/list.html?cat=1713,9301&amp;go=0"&#125;,&#123;"NAME":"\u5065\u8eab\u4fdd\u5065","URL":"https:\/\/channel.jd.com\/1713-3269.html"&#125;,&#123;"NAME":"\u65c5\u6e38\u5730\u56fe","URL":"\/\/channel.jd.com\/1713-3271.html"&#125;,&#123;"NAME":"\u7f8e\u5986","URL":"https:\/\/list.jd.com\/list.html?cat=1713,9291"&#125;,&#123;"NAME":"\u4f53\u80b2","URL":"https:\/\/list.jd.com\/list.html?cat=1713,3288&amp;jth=i"&#125;,&#123;"NAME":"\u5a31\u4e50\u4f11\u95f2","URL":"https:\/\/list.jd.com\/list.html?cat=1713,9314"&#125;,&#123;"NAME":"\u5a5a\u604b\u4e24\u6027","URL":"\/\/list.jd.com\/list.html?cat=1713,9309&amp;jth=i"&#125;,&#123;"NAME":"\u624b\u5de5DIY","URL":"https:\/\/list.jd.com\/list.html?cat=1713,9314,9315&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"&#125;]&#125;,&#123;"NAME":"\u827a\u672f\u9986","URL":"\/\/channel.jd.com\/1713-3262.html","ANCHOR":"9","children":[&#123;"NAME":"\u7ed8\u753b","URL":"https:\/\/channel.jd.com\/1713-12775.html"&#125;,&#123;"NAME":" \u4e66\u6cd5","URL":"\/\/list.jd.com\/list.html?cat=1713,13627"&#125;,&#123;"NAME":" \u6444\u5f71","URL":"https:\/\/channel.jd.com\/p_sheying.html"&#125;,&#123;"NAME":" \u97f3\u4e50","URL":"\/\/list.jd.com\/list.html?cat=1713,13634"&#125;,&#123;"NAME":" \u8bbe\u8ba1","URL":"\/\/list.jd.com\/list.html?cat=1713,3262,3379"&#125;]&#125;,&#123;"NAME":"\u79d1\u6280\u9986","URL":"\/\/book.jd.com\/library\/science.html","ANCHOR":"10","children":[&#123;"NAME":"\u79d1\u666e","URL":"\/\/book.jd.com\/popscicence.html"&#125;,&#123;"NAME":" \u5de5\u4e1a","URL":"\/\/channel.jd.com\/1713-3282.html"&#125;,&#123;"NAME":" \u5efa\u7b51","URL":"\/\/channel.jd.com\/1713-3284.html"&#125;,&#123;"NAME":" \u533b\u5b66","URL":"\/\/channel.jd.com\/1713-3285.html"&#125;,&#123;"NAME":" \u7535\u5b50","URL":"\/\/list.jd.com\/list.html?cat=1713,9351"&#125;]&#125;,&#123;"NAME":"\u8ba1\u7b97\u673a\u9986","URL":"\/\/channel.jd.com\/1713-3287.html","ANCHOR":"11","children":[&#123;"NAME":"\u7f16\u7a0b\u8bed\u8a00","URL":"\/\/list.jd.com\/list.html?cat=1713,3287,3797"&#125;,&#123;"NAME":"\u529e\u516c\u8f6f\u4ef6","URL":"\/\/list.jd.com\/list.html?cat=1713,3287,3814"&#125;,&#123;"NAME":"\u8ba1\u7b97\u673a\u5b89\u5168","URL":"https:\/\/list.jd.com\/list.html?cat=1713,3287,3801"&#125;,&#123;"NAME":"\u4eba\u5de5\u667a\u80fd","URL":"\/\/list.jd.com\/list.html?cat=1713,3287,3804&amp;go=0"&#125;,&#123;"NAME":"\u64cd\u4f5c\u7cfb\u7edf","URL":"\/\/list.jd.com\/1713-3287-3800.html"&#125;,&#123;"NAME":"\u6570\u636e\u5e93","URL":"\/\/list.jd.com\/list.html?cat=1713,3287,3799"&#125;]&#125;,&#123;"NAME":"\u539f\u7248\u4e66","URL":"\/\/book.jd.com\/withoutHref","ANCHOR":"12","children":[&#123;"NAME":"\u82f1\u6587\u539f\u7248","URL":"\/\/channel.jd.com\/1713-4855.html"&#125;,&#123;"NAME":"\u6e2f\u53f0\u539f\u7248","URL":"\/\/channel.jd.com\/1713-6929.html"&#125;,&#123;"NAME":"\u65e5\u6587\u539f\u7248","URL":"\/\/channel.jd.com\/1713-14669.html"&#125;]&#125;,&#123;"NAME":"\u6570\u5b57\u5185\u5bb9","URL":"\/\/e.jd.com\/ebook.html","ANCHOR":"13"&#125;,&#123;"NAME":"\u6742\u5fd7\/\u671f\u520a","URL":"\/\/channel.jd.com\/1713-4758.html","ANCHOR":"14"&#125;,&#123;"NAME":"\u7279\u8272\u4e66\u5e97","URL":"\/\/book.jd.com\/popbook.html","ANCHOR":"15"&#125;,&#123;"NAME":"\u90ae\u5e01\/\u6587\u5316\u7528\u54c1","URL":"\/\/channel.jd.com\/1713-11745.html","ANCHOR":"16"&#125;,&#123;"NAME":"\u6587\u5a31\/\u5468\u8fb9\/\u6e38\u620f","URL":"\/\/mvd.jd.com\/","ANCHOR":"17"&#125;],</span><br></pre></td></tr></table></figure><p>Unicode转中文后是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">"NAME"</span>:<span class="string">"特色分类"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/withoutHref"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"1"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"畅销榜"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/booktop\/1713-0-0-0-10001-1.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 热搜榜"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/hotsearch.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"特价好书"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/sale.jd.com\/act\/PdxOpZVLG4fa3.html"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"文学综合馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/p_wenxuezongheguan.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"2"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"小说"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3258.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 文学"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3259.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 传记"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3261.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 青春"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3260"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 动漫"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3272"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"科幻"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3258,6569&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 悬疑"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3258,3304&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 散文"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3259,3333&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>,<span class="attr">"YFLAG"</span>:<span class="string">"0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 纪实"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3259,3330&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;jl=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 惊悚"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3258,3305&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"童书馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/children.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"3"</span>,<span class="attr">"CUSTOM1"</span>:<span class="string">"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"０-２"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/children0-2.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"３-６"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/children3-6.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"7-10"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/children7-10.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"11-14"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/children11-14.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"绘本  "</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,4761&amp;go=0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"科普百科 "</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3399"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"儿童文学 "</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3394"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"幼儿启蒙"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3395&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"动漫卡通"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3391&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 少儿英语"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3401"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 益智游戏"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3263,3398&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"教育馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/education.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"4"</span>,<span class="attr">"CUSTOM1"</span>:<span class="string">"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"中小教辅"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3289.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"外语学习"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3291.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"考试"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3290.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"教材"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-11047.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"字典词典"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3294.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"课外读物"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3289,3839"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"字帖"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3289,6592"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"作文"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3289,3837"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"高中教辅"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/sale.jd.com\/act\/Q3hUClDMENPf.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"留学考试"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/sale.jd.com\/act\/pxE6irwM52vK1PTY.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"四六级"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/sale.jd.com\/act\/g4kFXImhBWu.html"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"人文社科馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/library\/socialscience.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"5"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"政治军事"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3276.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"传统文化"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/p_guoxueguji.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"历史"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3273.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"心理"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3279.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"哲学宗教"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/p_zhexuezongjiao.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"社会科学"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3281.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"文化"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3280,3664"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"法律"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3277.html"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"经管综合馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/p_Comprehensive.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"6"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"管理"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3266.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 经济"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3264.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 投资"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3265.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 会计"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3264,3409&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 营销"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3266,3444&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"励志成功馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3267.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"7"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"女性励志"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3267,3463&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"心灵鸡汤"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3267,3466&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"社交"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3267,3459&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"口才"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3267,3470"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"生活馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/library\/life.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"8"</span>,<span class="attr">"CUSTOM1"</span>:<span class="string">"\/\/misc.360buyimg.com\/channel\/bookhome\/1.0.2\/widget\/common\/i\/hot.png"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"孕产胎教"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,13613&amp;go=0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"育儿家教"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3270.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"美食"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,9278&amp;go=0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"家居"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,9301&amp;go=0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"健身保健"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/channel.jd.com\/1713-3269.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"旅游地图"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3271.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"美妆"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/list.jd.com\/list.html?cat=1713,9291"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"体育"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/list.jd.com\/list.html?cat=1713,3288&amp;jth=i"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"娱乐休闲"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/list.jd.com\/list.html?cat=1713,9314"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"婚恋两性"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,9309&amp;jth=i"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"手工DIY"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/list.jd.com\/list.html?cat=1713,9314,9315&amp;page=1&amp;sort=sort_totalsales15_desc&amp;trans=1&amp;JL=4_2_0#J_main"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"艺术馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3262.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"9"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"绘画"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/channel.jd.com\/1713-12775.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 书法"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,13627"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 摄影"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/channel.jd.com\/p_sheying.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 音乐"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,13634"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 设计"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3262,3379"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"科技馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/library\/science.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"10"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"科普"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/popscicence.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 工业"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3282.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 建筑"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3284.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 医学"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3285.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">" 电子"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,9351"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"计算机馆"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-3287.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"11"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"编程语言"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3287,3797"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"办公软件"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3287,3814"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"计算机安全"</span>,<span class="attr">"URL"</span>:<span class="string">"https:\/\/list.jd.com\/list.html?cat=1713,3287,3801"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"人工智能"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3287,3804&amp;go=0"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"操作系统"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/1713-3287-3800.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"数据库"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/list.jd.com\/list.html?cat=1713,3287,3799"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"原版书"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/withoutHref"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"12"</span>,<span class="attr">"children"</span>:[&#123;<span class="attr">"NAME"</span>:<span class="string">"英文原版"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-4855.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"港台原版"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-6929.html"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"日文原版"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-14669.html"</span>&#125;]&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"数字内容"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/e.jd.com\/ebook.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"13"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"杂志\/期刊"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-4758.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"14"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"特色书店"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/book.jd.com\/popbook.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"15"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"邮币\/文化用品"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/channel.jd.com\/1713-11745.html"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"16"</span>&#125;,&#123;<span class="attr">"NAME"</span>:<span class="string">"文娱\/周边\/游戏"</span>,<span class="attr">"URL"</span>:<span class="string">"\/\/mvd.jd.com\/"</span>,<span class="attr">"ANCHOR"</span>:<span class="string">"17"</span>&#125;]</span><br></pre></td></tr></table></figure><p>转为json视图：</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq1kwj32yxj20q40j9gmh.jpg" alt=""></p><p>查看京东图书首页的源代码</p><p>items.py下定义要爬取的目标：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JingdongItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    channel_num=scrapy.Field()</span><br><span class="line">    <span class="comment"># 频道1</span></span><br><span class="line">    channel1=scrapy.Field()</span><br><span class="line">    <span class="comment"># 频道2</span></span><br><span class="line">    channel2=scrapy.Field()</span><br><span class="line">    <span class="comment"># 图书名</span></span><br><span class="line">    name=scrapy.Field()</span><br><span class="line">    <span class="comment"># 价格</span></span><br><span class="line">    price=scrapy.Field()</span><br><span class="line">    <span class="comment">#  评论数</span></span><br><span class="line">    comment_num=scrapy.Field()</span><br><span class="line">    <span class="comment"># 作者</span></span><br><span class="line">    author=scrapy.Field()</span><br><span class="line">    <span class="comment"># 出版社</span></span><br><span class="line">    pub=scrapy.Field()</span><br><span class="line">    <span class="comment"># 销售方</span></span><br><span class="line">    seller=scrapy.Field()</span><br></pre></td></tr></table></figure><p>打开 创建的爬虫文件</p><p>导入所需要的包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> jingdong.items <span class="keyword">import</span> JingdongItem</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br></pre></td></tr></table></figure><p><code>https://channel.jd.com/p_wenxuezongheguan.html</code></p><p>由于用到urllib，有很多需要自己定义的东西，因此要实现start_requests函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JdSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'jd'</span></span><br><span class="line">    allowed_domains = [<span class="string">'jd.com'</span>]</span><br><span class="line">    <span class="comment">#start_urls = ['http://jd.com/']</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">        ua=[</span><br><span class="line">                <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'</span>,</span><br><span class="line">                <span class="string">'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)'</span>,</span><br><span class="line">                <span class="string">'Mozilla/5.0(Macintosh;U;IntelMacOSX10_6_8;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50'</span></span><br><span class="line">                <span class="string">'Mozilla/5.0(Windows;U;WindowsNT6.1;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50'</span>,</span><br><span class="line">                <span class="string">'Opera/9.80(Macintosh;IntelMacOSX10.6.8;U;en)Presto/2.8.131Version/11.11'</span>,</span><br><span class="line">                <span class="string">'Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1'</span></span><br><span class="line">                ]</span><br></pre></td></tr></table></figure><p>打开文学综合馆的页面就可以直接抓取频道2，不需要抓取频道1比如小说再抓侦探悬疑，可以直接抓侦探悬疑。</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1jpx6ny3j212r0l1t9z.jpg" alt="channel"></p><p>观察频道2的url</p><p>href=”//list.jd.com/list.html?cat=1713,3258,3304” </p><p>href=”//list.jd.com/list.html?cat=1713,3260,13623&amp;go=0” </p><p>构造正则表达式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pat2=&apos;href=&quot;..list.jd.com.list.html.cat=([0-9,]*?)[&amp;&quot;]&apos;</span><br></pre></td></tr></table></figure><p>/和？这些特殊的附后一律用..代替</p><p>以上正则可以获取所有的频道2的频道号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">urls = [&apos;https://channel.jd.com/p_wenxuezongheguan.html&apos;]</span><br><span class="line">        catall=[]</span><br><span class="line">        for url in urls:</span><br><span class="line">            req2 = urllib.request.Request(url)</span><br><span class="line">            req2.add_header(&apos;User-Agent&apos;, random.choice(ua))</span><br><span class="line">            pddata=urllib.request.urlopen(req2).read().decode(&apos;gbk&apos;, &apos;ignore&apos;)</span><br><span class="line">            pat2=&apos;href=&quot;..list.jd.com.list.html.cat=([0-9,]*?)[&amp;&quot;]&apos;</span><br><span class="line">            catdata=re.compile(pat2).findall(pddata)</span><br><span class="line">            for j in catdata:</span><br><span class="line">                catall.append(j)</span><br><span class="line">        catall2=set(catall)</span><br></pre></td></tr></table></figure><p>都存放到catall2中去，set有去重的功能</p><p>频道2下就是书籍列表了，如<strong>侦探/悬疑/推理</strong>类的书籍列表</p><p>频道2下可能有很多页的书籍，要去获得页数</p><p>发现网页底下有共x页的字样，可以构造表达式爬取下来，从而得到总页数</p><p>而页数不是独立的，它是与频道2一起存在，只存页数并没有什么用，因此，将其与每个频道2的名字一起存入字典中，字典放在列表中，便于处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得页数</span></span><br><span class="line">    allpage=[]</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> catall2:</span><br><span class="line">        thispdnum=m</span><br><span class="line">        url=<span class="string">'https://list.jd.com/list.html?cat='</span>+thispdnum</span><br><span class="line">        req3 = urllib.request.Request(url)</span><br><span class="line">        req3.add_header(<span class="string">'User-Agent'</span>, random.choice(ua))</span><br><span class="line">        listdata = urllib.request.urlopen(req3).read().decode(<span class="string">'gbk'</span>, <span class="string">'ignore'</span>)</span><br><span class="line">        pat3=<span class="string">'&lt;em&gt;共&lt;b&gt;(.*?)&lt;/b&gt;页'</span></span><br><span class="line">        page=re.compile(pat3).findall(listdata)</span><br><span class="line">        <span class="keyword">if</span> len(page)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            page=[<span class="number">1</span>]</span><br><span class="line">        allpage.append(&#123;thispdnum:page[<span class="number">0</span>]&#125;)</span><br><span class="line">        <span class="keyword">if</span> x&gt;<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>循环每一个频道2的每一页</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0</span></span><br><span class="line">      <span class="keyword">for</span> n <span class="keyword">in</span> catall2:</span><br><span class="line">          thispage=allpage[x][n]</span><br><span class="line">          <span class="keyword">for</span> p <span class="keyword">in</span> range(<span class="number">1</span>, int(thispage)+<span class="number">1</span>):</span><br><span class="line">              thispageurl= <span class="string">'https://list.jd.com/list.html?cat='</span>+str(n)+<span class="string">'&amp;page='</span>+str(p)</span><br><span class="line">              print(thispageurl)</span><br><span class="line">              <span class="keyword">yield</span> Request(thispageurl, callback=self.parse)</span><br><span class="line">          x+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>将这一页传给parse进行具体处理，此处将urllib与scrapy联系了起来</p><p>提取频道1和频道2，通过观察发现可以通过<code>&lt;span class=&quot;curr&quot;&gt;</code>这个标签来提取频道1和频道2.</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1rzj7lo4j208701tjr7.jpg" alt=""></p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1rzbueysj209w03cq2t.jpg" alt=""></p><p>通过构造xpath表达式来同时提取频道：</p><p><code>pd=response.xpath(&#39;//span[@class=&quot;curr&quot;]/text()&#39;).extract()</code></p><p>这会返回一个包含两个元素的列表，这两元素分别是频道1和频道2的名称</p><p>而有的时候可能频道不存在，因此要处理频道不存或只存在一个的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> len(pd)==<span class="number">0</span>:</span><br><span class="line">    pd=[<span class="string">'缺省'</span>, <span class="string">'缺省'</span>]</span><br><span class="line"><span class="keyword">if</span> len(pd)==<span class="number">1</span>:</span><br><span class="line">    pda=pd[<span class="number">0</span>]</span><br><span class="line">    pd=[pda, <span class="string">'缺省'</span>]</span><br><span class="line">pd1=pd[<span class="number">0</span>]</span><br><span class="line">pd2=pd[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>继续获取书籍名称，在源码中搜索第一本数<em>解忧杂货店</em>发现下图选中的标签和书籍名称有关</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq1snnhehij20lj08m3yn.jpg" alt=""></p><p>这个标签不仅在书籍列表中出现，还在上面的<em>热卖推荐</em>中出现</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq1sr0baopj20to06hq3n.jpg" alt=""></p><p>不提取<em>热卖推荐</em>中的，因此略过，从第四个标签开始提取</p><p> 接下来关键环节，提取价格，价格 必须通过抓包分析才能得到</p><p><img src="http://wx1.sinaimg.cn/mw690/c3a5a043ly1fq1tccl21bj217n083t9y.jpg" alt=""></p><p>我们发现了疑似价格的json数据，把里面的数字和网页上的价格进行对比，发现确实是价格</p><p><img src="http://wx4.sinaimg.cn/mw690/c3a5a043ly1fq1toguvh1j211j04ojro.jpg" alt=""></p><p>把url复制出来进行观察</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://p.3.cn/prices/mgets?callback=jQuery7839616&amp;ext=11000000&amp;pin=jd_60292a13b08e5&amp;type=1&amp;area=1_2800_2850_0&amp;skuIds=J_11452840%2CJ_11984135%2CJ_12018031%2CJ_11479404%2CJ_11322667%2CJ_11577583%2CJ_11920399%2CJ_11846856%2CJ_11720490%2CJ_10415116696%2CJ_12206744%2CJ_12019565%2CJ_12102873%2CJ_12029805%2CJ_11965555%2CJ_12102776%2CJ_12094982%2CJ_12155028%2CJ_12135337%2CJ_11951658%2CJ_12287808%2CJ_11701682%2CJ_12102873%2CJ_11318932%2CJ_11846850%2CJ_12124169%2CJ_11026413%2CJ_12197506%2CJ_11732611%2CJ_11932116&amp;pdbp=0&amp;pdtk=&amp;pdpin=jd_60292a13b08e5&amp;pduid=15100301156331932758360&amp;source=list_pc_front&amp;_=1522912708856</span><br></pre></td></tr></table></figure><p>从url尾部开始试着删除一些东西，观察网页内容的变化</p><p>json数据中的id包含在url中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jQuery7839616([&#123;&quot;op&quot;:&quot;27.30&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11452840&quot;,&quot;p&quot;:&quot;27.30&quot;&#125;,&#123;&quot;op&quot;:&quot;27.30&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11984135&quot;,&quot;p&quot;:&quot;27.30&quot;&#125;,&#123;&quot;op&quot;:&quot;54.70&quot;,&quot;m&quot;:&quot;79.60&quot;,&quot;id&quot;:&quot;J_12018031&quot;,&quot;p&quot;:&quot;54.70&quot;&#125;,&#123;&quot;op&quot;:&quot;24.20&quot;,&quot;m&quot;:&quot;35.00&quot;,&quot;id&quot;:&quot;J_11479404&quot;,&quot;p&quot;:&quot;24.20&quot;&#125;,&#123;&quot;op&quot;:&quot;29.63&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11322667&quot;,&quot;p&quot;:&quot;29.63&quot;&#125;,&#123;&quot;op&quot;:&quot;25.00&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11577583&quot;,&quot;p&quot;:&quot;25.00&quot;&#125;,&#123;&quot;op&quot;:&quot;25.00&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11920399&quot;,&quot;p&quot;:&quot;25.00&quot;&#125;,&#123;&quot;op&quot;:&quot;25.00&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11846856&quot;,&quot;p&quot;:&quot;25.00&quot;&#125;,&#123;&quot;op&quot;:&quot;36.80&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11720490&quot;,&quot;p&quot;:&quot;36.80&quot;&#125;,&#123;&quot;op&quot;:&quot;158.00&quot;,&quot;m&quot;:&quot;158.00&quot;,&quot;id&quot;:&quot;J_10415116696&quot;,&quot;p&quot;:&quot;42.90&quot;&#125;,&#123;&quot;op&quot;:&quot;28.40&quot;,&quot;m&quot;:&quot;45.00&quot;,&quot;id&quot;:&quot;J_12206744&quot;,&quot;p&quot;:&quot;28.40&quot;&#125;,&#123;&quot;op&quot;:&quot;28.70&quot;,&quot;m&quot;:&quot;39.80&quot;,&quot;id&quot;:&quot;J_12019565&quot;,&quot;p&quot;:&quot;28.70&quot;&#125;,&#123;&quot;op&quot;:&quot;162.10&quot;,&quot;m&quot;:&quot;228.40&quot;,&quot;id&quot;:&quot;J_12102873&quot;,&quot;p&quot;:&quot;162.10&quot;&#125;,&#123;&quot;op&quot;:&quot;27.90&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_12029805&quot;,&quot;p&quot;:&quot;27.90&quot;&#125;,&#123;&quot;op&quot;:&quot;26.30&quot;,&quot;m&quot;:&quot;35.00&quot;,&quot;id&quot;:&quot;J_11965555&quot;,&quot;p&quot;:&quot;26.30&quot;&#125;,&#123;&quot;op&quot;:&quot;24.70&quot;,&quot;m&quot;:&quot;35.00&quot;,&quot;id&quot;:&quot;J_12102776&quot;,&quot;p&quot;:&quot;24.70&quot;&#125;,&#123;&quot;op&quot;:&quot;41.90&quot;,&quot;m&quot;:&quot;45.00&quot;,&quot;id&quot;:&quot;J_12094982&quot;,&quot;p&quot;:&quot;41.90&quot;&#125;,&#123;&quot;op&quot;:&quot;29.60&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_12155028&quot;,&quot;p&quot;:&quot;29.60&quot;&#125;,&#123;&quot;op&quot;:&quot;44.70&quot;,&quot;m&quot;:&quot;59.60&quot;,&quot;id&quot;:&quot;J_12135337&quot;,&quot;p&quot;:&quot;44.70&quot;&#125;,&#123;&quot;op&quot;:&quot;28.40&quot;,&quot;m&quot;:&quot;45.00&quot;,&quot;id&quot;:&quot;J_11951658&quot;,&quot;p&quot;:&quot;28.40&quot;&#125;,&#123;&quot;op&quot;:&quot;29.90&quot;,&quot;m&quot;:&quot;42.00&quot;,&quot;id&quot;:&quot;J_12287808&quot;,&quot;p&quot;:&quot;29.90&quot;&#125;,&#123;&quot;op&quot;:&quot;27.40&quot;,&quot;m&quot;:&quot;39.80&quot;,&quot;id&quot;:&quot;J_11701682&quot;,&quot;p&quot;:&quot;27.40&quot;&#125;,&#123;&quot;op&quot;:&quot;21.90&quot;,&quot;m&quot;:&quot;28.00&quot;,&quot;id&quot;:&quot;J_11318932&quot;,&quot;p&quot;:&quot;21.90&quot;&#125;,&#123;&quot;op&quot;:&quot;25.00&quot;,&quot;m&quot;:&quot;39.50&quot;,&quot;id&quot;:&quot;J_11846850&quot;,&quot;p&quot;:&quot;25.00&quot;&#125;,&#123;&quot;op&quot;:&quot;28.50&quot;,&quot;m&quot;:&quot;38.00&quot;,&quot;id&quot;:&quot;J_12124169&quot;,&quot;p&quot;:&quot;28.50&quot;&#125;,&#123;&quot;op&quot;:&quot;177.10&quot;,&quot;m&quot;:&quot;295.20&quot;,&quot;id&quot;:&quot;J_11026413&quot;,&quot;p&quot;:&quot;177.10&quot;&#125;,&#123;&quot;op&quot;:&quot;22.10&quot;,&quot;m&quot;:&quot;35.00&quot;,&quot;id&quot;:&quot;J_12197506&quot;,&quot;p&quot;:&quot;22.10&quot;&#125;,&#123;&quot;op&quot;:&quot;20.20&quot;,&quot;m&quot;:&quot;32.00&quot;,&quot;id&quot;:&quot;J_11732611&quot;,&quot;p&quot;:&quot;20.20&quot;&#125;,&#123;&quot;op&quot;:&quot;112.00&quot;,&quot;m&quot;:&quot;168.00&quot;,&quot;id&quot;:&quot;J_11932116&quot;,&quot;p&quot;:&quot;112.00&quot;&#125;]);</span><br></pre></td></tr></table></figure><p>删掉一个url中的id，下面的价格等信息就少一个，因此，只要把所有id全都放到url中就可以找到所有的价格数据，问题是如何找id</p><p><code>&quot;id&quot;:&quot;J_11984135&quot;</code></p><p>在网页中搜索J_11984135没有任何信息，不要慌张，把J_删除后只留下数字，继续搜索，在网页中发现了要找的东西</p><p><img src="http://wx3.sinaimg.cn/mw690/c3a5a043ly1fq1tx1dsc3j20y70dkgm6.jpg" alt=""></p><p>哪个标签更合适呢，继续观察发现</p><p><code>&lt;a data-sku=&quot;11984135&quot; href=&quot;[//cart.jd.com/gate.action?pid=11984135&amp;pcount=1&amp;ptype=1](https://cart.jd.com/gate.action?pid=11984135&amp;pcount=1&amp;ptype=1)&quot;&gt;</code></p><p>这个有data-sku属性的a标签正好与商品一一对应，因此可以使用这个a标签。</p><p>下面构造正则表达式来提取</p><p>由于scrapy的response是树的形式，所以能直接使用xpath，而不能直接使用正则，所以要把树的形式转变为字符串的形式</p><p><code>listdata=response.body.decode(&#39;utf-8&#39;, &#39;ignore&#39;)</code></p><p>构造正则获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">allskupat=&apos;&lt;a data-sku=&quot;(.*?)&quot;&apos;</span><br><span class="line">allsku=re.compile(allskupat).findall(listdata)</span><br></pre></td></tr></table></figure><p>评论数也需要抓包分析</p><p>url如下，这些数字也是id，并用逗号隔开了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://club.jd.com/comment/productCommentSummaries.action?my=pinglun&amp;referenceIds=11452840,11984135,12018031,11479404,11322667,11577583,11920399,11846856,11720490,10415116696,12206744,12019565,12102873,12029805,11965555,12102776,12094982,12155028,12135337,11951658,12287808,11701682,12102873,11318932,11846850,12124169,11026413,12197506,11732611,11932116&amp;callback=jQuery8841347&amp;_=1522912708686</span><br></pre></td></tr></table></figure><p>提取作者和出版社的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 作者的信息</span></span><br><span class="line">author=response.xpath(<span class="string">'//span[@class="author_type_1"]/a/@title'</span>).extract()</span><br><span class="line"><span class="comment"># 出版社的信息</span></span><br><span class="line">pub=response.xpath(<span class="string">'//span[@class="p-bi-store"]/a/@title'</span>).extract()</span><br></pre></td></tr></table></figure><p>上面可以看成是预处理，大体写出了如何获得我们的目标信息</p><p>下面一本书一本书的来，找到现在所处的这一页所有书籍的各自信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 处理当前页的数据</span><br><span class="line"># 以当前页所有的卖家的长度来循环当前页的每一本书</span><br><span class="line">        for n in range(0, len(seller)): </span><br><span class="line">            # 从第四个名字开始，前三个是热卖的书，后面才是书籍列表的书</span><br><span class="line">            name=bookname[n+3]</span><br><span class="line">            # 找到这本书的id</span><br><span class="line">            thissku=allsku[n]</span><br><span class="line">            # 构造价格链接</span><br><span class="line">            priceurl=&apos;https://p.3.cn/prices/mgets?callback=jQuery7839616&amp;type=1&amp;skuIds=J_&apos;+str(thissku)</span><br><span class="line">            pricedata=urllib.request.urlopen(priceurl).read().decode(&apos;utf-8&apos;, &apos;ignore&apos;)   </span><br><span class="line">            # 获得价格</span><br><span class="line">            pricepat=&apos;&quot;p&quot;:&quot;(.*?)&quot;&apos;</span><br><span class="line">            price=re.compile(pricepat).findall(pricedata)[0]</span><br><span class="line">   # 构造评论链接</span><br><span class="line">            commenturl = &apos;https://club.jd.com/comment/productCommentSummaries.action?my=pinglun&amp;referenceIds=&apos; + str(thissku)+&apos;&amp;callback=jQuery8841347&apos;</span><br><span class="line">            commentdata = urllib.request.urlopen(commenturl).read().decode(&apos;utf-8&apos;, &apos;ignore&apos;)</span><br><span class="line">            commentpat = &apos;&quot;CommentCount&quot;:(.*?),&apos;</span><br><span class="line">            commentnum = re.compile(commentpat).findall(commentdata)[0]</span><br><span class="line">            thisauthor=author[n]</span><br><span class="line">            thispub=pub[n]</span><br><span class="line">            thisseller=seller[n]</span><br><span class="line">            item[&apos;channel1&apos;]=pd1</span><br><span class="line">            item[&apos;channel2&apos;]=pd2</span><br><span class="line">            item[&apos;name&apos;]=bookname</span><br><span class="line">            item[&apos;comment_num&apos;]=commentnum</span><br><span class="line">            item[&apos;author&apos;] = thisauthor</span><br><span class="line">            item[&apos;pub&apos;] = thispub</span><br><span class="line">            item[&apos;seller&apos;] = thisseller</span><br><span class="line">            yield item</span><br></pre></td></tr></table></figure><h1 id="淘宝爬虫"><a href="#淘宝爬虫" class="headerlink" title="淘宝爬虫"></a>淘宝爬虫</h1><p>需求：在淘宝搜索栏输入要搜索的商品，爬取搜到的商品的名称、价格、链接、评论数</p><p>定义目标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    <span class="comment">#商品名称</span></span><br><span class="line">    name=scrapy.Field()</span><br><span class="line">    <span class="comment">#商品链接</span></span><br><span class="line">    link=scrapy.Field()</span><br><span class="line">    <span class="comment">#商品价格</span></span><br><span class="line">    price=scrapy.Field()</span><br><span class="line">    <span class="comment">#商品评论数</span></span><br><span class="line">    comment=scrapy.Field()</span><br></pre></td></tr></table></figure><p>导入包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> Request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> shop.items <span class="keyword">import</span> ShopItem</span><br></pre></td></tr></table></figure><p>设置要查询的关键词key</p><p>url格式</p><p><code>https://s.taobao.com/search?q=坚果&amp;imgfile=&amp;commend=all&amp;ssid=s5-e&amp;search_type=item&amp;sourceId=tb.index&amp;spm=&amp;ie=utf8&amp;initiative_id=tbindexz_20170306</code></p><p>点击下一页观察url变化</p><p>s=后面的数字以44的间隔变化，这就控制着页数，下面只爬10页</p><p>构造url<code>url=&quot;https://s.taobao.com/search?q=&quot;+str(key)+&quot;&amp;search_type=item&amp;s=&quot;+str(44*i)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TbSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"tb"</span></span><br><span class="line">    allowed_domains = [<span class="string">"taobao.com"</span>]</span><br><span class="line">    start_urls = (</span><br><span class="line">        <span class="string">'https://www.taobao.com/'</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        key=<span class="string">"坚果"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">            url=<span class="string">"https://s.taobao.com/search?q="</span>+str(key)+<span class="string">"&amp;search_type=item&amp;s="</span>+str(<span class="number">44</span>*i)</span><br><span class="line">            <span class="keyword">yield</span> Request(url=url,callback=self.page)</span><br></pre></td></tr></table></figure><p>定义一个page方法，处理传过来的各具体页的数据</p><p>价格得不到，还需要进入具体的商品页面，进入具体的商品，要有具体商品的id</p><p>根据正则获得id</p><p>构造url</p><p>Request获得具体商品页面信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page</span><span class="params">(self,response)</span>:</span></span><br><span class="line">       <span class="comment">#title=response.xpath("/html/head/title").extract()</span></span><br><span class="line">       body=response.body.decode(<span class="string">"utf-8"</span>,<span class="string">"ignore"</span>)</span><br><span class="line">       patid=<span class="string">'"nid":"(.*?)"'</span></span><br><span class="line">       allid=re.compile(patid).findall(body)</span><br><span class="line">       print(allid)</span><br><span class="line">       <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(allid)):</span><br><span class="line">           thisid=allid[j]</span><br><span class="line">           url1=<span class="string">"https://item.taobao.com/item.htm?id="</span>+str(thisid)</span><br><span class="line">           <span class="keyword">yield</span> Request(url=url1,callback=self.next)</span><br></pre></td></tr></table></figure><p>把具体商品页面信息传给next进行处理</p><p>评论数需要抓包分析，构造出url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        item=ShopItem()</span><br><span class="line">        item[<span class="string">"title"</span>]=response.xpath(<span class="string">"//h3[@class='tb-main-title']/@data-title"</span>).extract()</span><br><span class="line">        item[<span class="string">"link"</span>]=response.url</span><br><span class="line">        item[<span class="string">"price"</span>]=response.xpath(<span class="string">"//input[@name='current_price']/@value"</span>).extract()</span><br><span class="line">        patid=<span class="string">'id=(.*?)$'</span></span><br><span class="line">        thisid=re.compile(patid).findall(response.url)[<span class="number">0</span>]</span><br><span class="line">        commenturl=<span class="string">"https://rate.taobao.com/detailCount.do?callback=jsonp100&amp;itemId="</span>+str(thisid)</span><br><span class="line">        <span class="comment">#print(commenturl)</span></span><br><span class="line">        ssl._create_default_https_context=ssl._create_unverified_context</span><br><span class="line">        commentdata=urllib.request.urlopen(commenturl).read().decode(<span class="string">"utf-8"</span>,<span class="string">"ignore"</span>)</span><br><span class="line">        pat=<span class="string">'"count":(.*?)&#125;'</span></span><br><span class="line">        item[<span class="string">"comment"</span>]=re.compile(pat).findall(commentdata)</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><p>pipeline写入数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn=pymysql.connect(host=<span class="string">"127.0.0.1"</span>,user=<span class="string">"root"</span>,passwd=<span class="string">"root"</span>,db=<span class="string">"tb"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            title=item[<span class="string">"title"</span>][<span class="number">0</span>]</span><br><span class="line">            link=item[<span class="string">"link"</span>]</span><br><span class="line">            price=item[<span class="string">"price"</span>][<span class="number">0</span>]</span><br><span class="line">            comment=item[<span class="string">"comment"</span>][<span class="number">0</span>]</span><br><span class="line">            sql=<span class="string">"insert into goods(title,link,price,comment) values('"</span>+title+<span class="string">"','"</span>+link+<span class="string">"','"</span>+price+<span class="string">"','"</span>+comment+<span class="string">"')"</span></span><br><span class="line">            self.conn.query(sql)</span><br><span class="line">            self.conn.commit()</span><br><span class="line">            print(title)</span><br><span class="line">            print(link)</span><br><span class="line">            print(price)</span><br><span class="line">            print(comment)</span><br><span class="line">            <span class="keyword">return</span> item</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;认识scrapy框架&quot;&gt;&lt;a href=&quot;#认识scrapy框架&quot; class=&quot;headerlink&quot; title=&quot;认识scrapy框架&quot;&gt;&lt;/a&gt;认识scrapy框架&lt;/h1&gt;&lt;p&gt;过去我们写的爬虫只能成为爬虫文件，现在我们要学习的scrapy框架会形成一个
      
    
    </summary>
    
    
      <category term="python爬虫" scheme="http://yoursite.com/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
